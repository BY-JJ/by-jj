import{e as n}from"./app.f5f78651.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";var a="/by-jj/SJJG/image-20220329223747066.png",p="/by-jj/SJJG/wps2A44.tmp.jpg",t="/by-jj/SJJG/wps8B02.tmp.jpg",e="/by-jj/SJJG/wpsC6A5.tmp.jpg",o="/by-jj/SJJG/wps1747.tmp.jpg",c="/by-jj/SJJG/wps61AE.tmp.jpg",l="/by-jj/SJJG/wpsAD4F.tmp.jpg",u="/by-jj/SJJG/wpsC373.tmp.jpg",r="/by-jj/SJJG/wps5BAD.tmp.jpg",i="/by-jj/SJJG/wps93B5.tmp.jpg",k="/by-jj/SJJG/wps462.tmp.jpg",b="/by-jj/SJJG/wps50ED.tmp.jpg",m="/by-jj/SJJG/wps8E45.tmp.jpg",d="/by-jj/SJJG/wpsCE6C.tmp.jpg",y="/by-jj/SJJG/wps888.tmp.jpg",g="/by-jj/SJJG/image-20220329224805639.png",h="/by-jj/SJJG/image-20220329224855703.png",L="/by-jj/SJJG/image-20220329224909190.png",w="/by-jj/SJJG/image-20220329224920811.png",f="/by-jj/SJJG/image-20220329224935627.png",v="/by-jj/SJJG/image-20220329224944097.png",S="/by-jj/SJJG/image-20220329225128532.png",_="/by-jj/SJJG/image-20220329225141056.png",q="/by-jj/SJJG/image-20220329225242298.png",C="/by-jj/SJJG/image-20220329225309023.png",x="/by-jj/SJJG/image-20220329225319051.png",N="/by-jj/SJJG/image-20220329225327634.png",A="/by-jj/SJJG/image-20220329225336931.png",E="/by-jj/SJJG/image-20220329225347292.png",U="/by-jj/SJJG/image-20220329225444126.png",Q="/by-jj/SJJG/image-20220329225458310.png",D="/by-jj/SJJG/image-20220329225602778.png",I="/by-jj/SJJG/image-20220329225620458.png";const T={},j=n(`<h1 id="_1-\u6570\u636E\u7ED3\u6784\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u636E\u7ED3\u6784\u6982\u5FF5" aria-hidden="true">#</a> 1.\u6570\u636E\u7ED3\u6784\u6982\u5FF5</h1><p>\u6570\u636E\uFF1A\u662F\u63CF\u8FF0\u5BA2\u89C2\u4E8B\u7269\u7684\u7B26\u53F7\uFF0C\u662F\u8BA1\u7B97\u673A\u4E2D\u53EF\u4EE5\u64CD\u4F5C\u7684\u5BF9\u8C61\uFF0C\u662F\u80FD\u88AB\u8BA1\u7B97\u673A\u8BC6\u522B\uFF0C\u5E76\u8F93\u5165\u7ED9\u8BA1\u7B97\u673A\u5904\u7406\u7684\u7B26\u53F7\u96C6\u5408\u3002\u6570\u636E\u4E0D\u4EC5\u4EC5\u5305\u62EC\u6574\u578B\u3001\u5B9E\u578B\u7B49\u6570\u503C\u7C7B\u578B\uFF0C\u8FD8\u5305\u62EC\u5B57\u7B26\u53CA\u58F0\u97F3\u3001\u56FE\u50CF\u3001\u89C6\u9891\u7B49\u975E\u6570\u503C\u7C7B\u578B\u3002</p><p>\u6570\u636E\u7ED3\u6784\u662F\u8BA1\u7B97\u673A\u5B58\u50A8\u3001\u7EC4\u7EC7\u6570\u636E\u7684\u65B9\u5F0F\u3002\u6570\u636E\u7ED3\u6784\u662F\u6307\u76F8\u4E92\u4E4B\u95F4\u5B58\u5728\u4E00\u79CD\u6216\u591A\u79CD\u7279\u5B9A\u5173\u7CFB\u7684\u6570\u636E\u5143\u7D20\u7684\u96C6\u5408\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u7CBE\u5FC3\u9009\u62E9\u7684\u6570\u636E\u7ED3\u6784\u53EF\u4EE5\u5E26\u6765\u66F4\u9AD8\u7684\u8FD0\u884C\u6216\u8005\u5B58\u50A8\u6548\u7387\u3002\u6570\u636E\u7ED3\u6784\u5F80\u5F80\u540C\u9AD8\u6548\u7684\u68C0\u7D22\u7B97\u6CD5\u548C\u7D22\u5F15\u6280\u672F\u6709\u5173\u3002</p><p><strong>\u6570\u636E\u7ED3\u6784\u662F\u8BA1\u7B97\u673A\u5B58\u50A8\u3001\u7EC4\u7EC7\u6570\u636E\u7684\u65B9\u5F0F\u3002\u662F\u76F8\u4E92\u4E4B\u95F4\u5B58\u5728\u4E00\u79CD\u6216\u591A\u79CD\u7279\u5B9A\u5173\u7CFB\u7684\u6570\u636E\u5143\u7D20\u96C6\u5408</strong></p><p>\u6570\u636E\u7ED3\u6784\u4E3B\u8981<strong>\u7814\u7A76\u975E\u6570\u503C\u8BA1\u7B97\u95EE\u9898\u7684\u7A0B\u5E8F\u4E2D\u7684\u64CD\u4F5C\u5BF9\u8C61\u4EE5\u53CA\u4ED6\u4EEC\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u4E0D\u662F\u7814\u7A76\u590D\u6742\u7684\u7B97\u6CD5</strong>\u3002</p><p>\u6570\u636E \u2013 \u7A0B\u5E8F\u7684\u64CD\u4F5C\u5BF9\u8C61\uFF0C\u7528\u4E8E\u63CF\u8FF0\u5BA2\u89C2\u4E8B\u7269\u3002</p><p>\u6570\u636E\u662F\u4E00\u4E2A\u62BD\u8C61\u7684\u6982\u5FF5\uFF0C\u5C06\u5176\u8FDB\u884C\u5206\u7C7B\u540E\u5F97\u5230\u7A0B\u5E8F\u8BBE\u8BA1\u8BED\u8A00\u4E2D\u7684\u7C7B\u578B\u3002\u5982\uFF1Aint\uFF0Cfloat\uFF0Cchar</p><p>\u7B49\u7B49\u3002</p><p>\u6570\u636E\u5143\u7D20\uFF1A\u7EC4\u6210\u6570\u636E\u7684\u57FA\u672C\u5355\u4F4D\u3002</p><p>\u6570\u636E\u9879\uFF1A\u4E00\u4E2A\u6570\u636E\u5143\u7D20\u7531\u82E5\u5E72\u6570\u636E\u9879\u7EC4\u6210\u3002</p><p>\u6570\u636E\u5BF9\u8C61 \u2013 \u6027\u8D28\u76F8\u540C\u7684\u6570\u636E\u5143\u7D20\u7684\u96C6\u5408\uFF08\u6BD4\u5982\uFF1A\u6570\u7EC4\uFF0C\u94FE\u8868\uFF09\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u58F0\u660E\u4E00\u4E2A\u7ED3\u6784\u4F53\u7C7B\u578B</span>
<span class="token keyword">struct</span> <span class="token class-name">_MyTeacher</span> <span class="token comment">//\u4E00\u79CD\u6570\u636E\u7C7B\u578B</span>
<span class="token punctuation">{</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> tile<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token keyword">char</span> addr<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">struct</span> <span class="token class-name">_MyTeacher</span> t1<span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u5143\u7D20</span>
<span class="token keyword">struct</span> <span class="token class-name">_MyTeacher</span> tArray<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u5BF9\u8C61</span>
<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u9879</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>addr<span class="token punctuation">,</span> <span class="token string">&quot;addr&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u9879</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>tile<span class="token punctuation">,</span> <span class="token string">&quot;addr&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u9879</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h1 id="_2-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u7B97\u6CD5" aria-hidden="true">#</a> 2.\u7B97\u6CD5</h1><h2 id="_2-1\u7B97\u6CD5\u7684\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_2-1\u7B97\u6CD5\u7684\u6982\u5FF5" aria-hidden="true">#</a> 2.1\u7B97\u6CD5\u7684\u6982\u5FF5</h2><p>\u7B97\u6CD5\u662F\u7279\u5B9A\u95EE\u9898\u6C42\u89E3\u6B65\u9AA4\u7684\u63CF\u8FF0\uFF0C\u5728\u8BA1\u7B97\u673A\u4E2D\u8868\u73B0\u4E3A<strong>\u6307\u4EE4\u7684\u6709\u9650\u5E8F\u5217</strong>\uFF0C\u7B97\u6CD5\u662F\u72EC\u7ACB\u5B58\u5728\u7684\u4E00\u79CD\u89E3\u51B3\u95EE\u9898\u7684\u65B9\u6CD5\u548C\u601D\u60F3\u3002</p><p>\u5BF9\u4E8E\u7B97\u6CD5\u800C\u8A00\uFF0C\u8BED\u8A00\u5E76\u4E0D\u91CD\u8981\uFF0C\u91CD\u8981\u7684\u662F\u601D\u60F3\u3002</p><h2 id="_2-2\u7B97\u6CD5\u548C\u6570\u636E\u7ED3\u6784\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_2-2\u7B97\u6CD5\u548C\u6570\u636E\u7ED3\u6784\u7684\u533A\u522B" aria-hidden="true">#</a> 2.2\u7B97\u6CD5\u548C\u6570\u636E\u7ED3\u6784\u7684\u533A\u522B</h2><p>\u6570\u636E\u7ED3\u6784\u53EA\u662F\u9759\u6001\u7684\u63CF\u8FF0\u4E86\u6570\u636E\u5143\u7D20\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u9AD8\u6548\u7684\u7A0B\u5E8F\u9700\u8981\u5728\u6570\u636E\u7ED3\u6784\u7684\u57FA\u7840\u4E0A**\u8BBE\u8BA1\u548C\u9009\u62E9\u7B97\u6CD5\u3002 **</p><ul><li><p><strong>\u7B97\u6CD5\u662F\u4E3A\u4E86\u89E3\u51B3\u5B9E\u9645\u95EE\u9898\u800C\u8BBE\u8BA1\u7684\u3002</strong></p></li><li><p><strong>\u6570\u636E\u7ED3\u6784\u662F\u7B97\u6CD5\u9700\u8981\u5904\u7406\u7684\u95EE\u9898\u8F7D\u4F53\u3002</strong></p></li><li><p><strong>\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5\u76F8\u8F85\u76F8\u6210</strong></p></li></ul><h2 id="_2-3\u7B97\u6CD5\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_2-3\u7B97\u6CD5\u7279\u6027" aria-hidden="true">#</a> 2.3\u7B97\u6CD5\u7279\u6027</h2><ul><li><p><strong>\u8F93\u5165</strong>: \u7B97\u6CD5\u5177\u6709 0 \u4E2A\u6216\u591A\u4E2A\u8F93\u5165</p></li><li><p><strong>\u8F93\u51FA</strong>: \u7B97\u6CD5\u81F3\u5C11\u6709 1 \u4E2A\u6216\u591A\u4E2A\u8F93\u51FA</p></li><li><p><strong>\u6709\u7A77\u6027</strong>: \u7B97\u6CD5\u5728\u6709\u9650\u7684\u6B65\u9AA4\u4E4B\u540E\u4F1A\u81EA\u52A8\u7ED3\u675F\u800C\u4E0D\u4F1A\u65E0\u9650\u5FAA\u73AF\uFF0C\u5E76\u4E14\u6BCF\u4E00\u4E2A\u6B65\u9AA4\u53EF\u4EE5\u5728\u63A5\u6536\u7684\u5B9E\u9645\u5185\u5B8C\u6210</p></li><li><p><strong>\u786E\u5B9A\u6027</strong>\uFF1A\u7B97\u6CD5\u4E2D\u7684\u6BCF\u4E00\u6B65\u90FD\u6709\u786E\u5B9A\u7684\u542B\u4E49\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u4E8C\u4E49\u6027</p></li><li><p><strong>\u53EF\u884C\u6027</strong>\uFF1A\u7B97\u6CD5\u7684\u6BCF\u4E00\u6B65\u90FD\u662F\u53EF\u884C\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6BCF\u4E00\u6B65\u90FD\u80FD\u591F\u6267\u884C\u6709\u9650\u7684\u6B21\u6570\u5B8C\u6210\u3002</p></li></ul><p><strong>\u95EE\u9898:\u9488\u5BF9\u67D0\u4E00\u5177\u4F53\u7684\u95EE\u9898\uFF0C\u89E3\u51B3\u6B64\u95EE\u9898\u7684\u7B97\u6CD5\u662F\u552F\u4E00\u7684\u5417\uFF1F</strong></p><p><strong>\u6BD4\u5982\u8BF4:\u6C42\u4ECE 1 \u5230 100 \u7684\u548C\uFF1F</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span>
<span class="token comment">//\u7B97\u6CD5 1</span>
<span class="token keyword">long</span> <span class="token function">sum1</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">long</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token operator">*</span> array <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
ret <span class="token operator">+=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">free</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7B97\u6CD5 2</span>
<span class="token keyword">long</span> <span class="token function">sum2</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">long</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
ret <span class="token operator">+=</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7B97\u6CD5 3</span>
<span class="token keyword">long</span> <span class="token function">sum3</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">long</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
ret <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token operator">*</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token function">sum1</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token function">sum2</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token function">sum3</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p><strong>\u540C\u6837\u4E00\u4E2A\u95EE\u9898\uFF0C\u6211\u6709\u4E09\u79CD\u4E0D\u540C\u7684\u7B97\u6CD5\uFF0C\u8FD9\u4E09\u79CD\u7B97\u6CD5\u90FD\u53EF\u4EE5\u89E3\u51B3\u540C\u6837\u7684\u95EE\u9898\uFF0C\u90A3\u4E48\u6211\u4EEC\u5982\u4F55\u9009\u62E9\uFF1F\u9700\u8981\u6709\u4E2A\u65B9\u6CD5\u6765\u8861\u91CF\u7B97\u6CD5\u7684\u6548\u7387\u5427\uFF1F</strong></p><h3 id="_2-3-1\u7B97\u6CD5\u6548\u7387\u7684\u5EA6\u91CF" tabindex="-1"><a class="header-anchor" href="#_2-3-1\u7B97\u6CD5\u6548\u7387\u7684\u5EA6\u91CF" aria-hidden="true">#</a> 2.3.1\u7B97\u6CD5\u6548\u7387\u7684\u5EA6\u91CF</h3><h4 id="_2-3-1-1\u4E8B\u540E\u7EDF\u8BA1\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-3-1-1\u4E8B\u540E\u7EDF\u8BA1\u6CD5" aria-hidden="true">#</a> 2.3.1.1\u4E8B\u540E\u7EDF\u8BA1\u6CD5</h4><p>\u4E3B\u8981\u901A\u8FC7\u8BBE\u8BA1\u597D\u7684\u6D4B\u8BD5\u7A0B\u5E8F\u548C\u6570\u636E\uFF0C\u5229\u7528\u8BA1\u7B97\u673A\u7684\u8BA1\u65F6\u5668\u5BF9\u4E0D\u540C\u7B97\u6CD5\u7684\u7F16\u5236\u7684\u7A0B\u5E8F\u7684\u8FD0</p><p>\u884C\u65F6\u95F4\u8FDB\u884C\u6BD4\u8F83\uFF0C\u4ECE\u800C\u786E\u5B9A\u7B97\u6CD5\u6548\u7387\u7684\u9AD8\u4F4E\u3002</p><ul><li>\u7EDF\u8BA1\u65B9\u6CD5</li></ul><p>\u6BD4\u8F83\u4E0D\u540C\u7B97\u6CD5\u5BF9\u540C\u4E00\u7EC4\u8F93\u5165\u6570\u636E\u7684\u8FD0\u884C\u5904\u7406\u65F6\u95F4\u3002</p><ul><li><p>\u7F3A\u9677</p></li><li><p>\u4E3A\u4E86\u83B7\u5F97\u4E0D\u540C\u7B97\u6CD5\u7684\u8FD0\u884C\u65F6\u95F4\u5FC5\u987B\u7F16\u5199\u76F8\u5E94\u7A0B\u5E8F\uF075 \u8FD0\u884C\u65F6\u95F4\u4E25\u91CD\u4F9D\u8D56\u786C\u4EF6\u4EE5\u53CA\u8FD0\u884C\u65F6\u7684\u73AF\u5883\u56E0\u7D20</p></li><li><p>\u7B97\u6CD5\u7684\u6D4B\u8BD5\u6570\u636E\u7684\u9009\u53D6\u76F8\u5F53\u56F0\u96BE</p></li><li><p>\u603B\u7ED3</p></li><li><p>\u4E8B\u540E\u7EDF\u8BA1\u6CD5\u867D\u7136\u76F4\u89C2\uFF0C\u4F46\u662F\u5B9E\u65BD\u56F0\u96BE\u4E14\u7F3A\u9677\u591A</p></li></ul><h4 id="_2-3-1-2-\u4E8B\u524D\u5206\u6790\u4F30\u7B97" tabindex="-1"><a class="header-anchor" href="#_2-3-1-2-\u4E8B\u524D\u5206\u6790\u4F30\u7B97" aria-hidden="true">#</a> 2.3.1.2 \u4E8B\u524D\u5206\u6790\u4F30\u7B97</h4><p>\u5728\u8BA1\u7B97\u673A\u7A0B\u5E8F\u7F16\u5236\u524D\uFF0C\u4F9D\u636E\u7EDF\u8BA1\u65B9\u6CD5\u5BF9\u7B97\u6CD5\u8FDB\u884C\u4F30\u7B97\u3002</p><ul><li>\u7EDF\u8BA1\u65B9\u6CD5\uFF1A</li></ul><p>\u4F9D\u636E\u7EDF\u8BA1\u7684\u65B9\u6CD5\u5BF9\u7B97\u6CD5\u6548\u7387\u8FDB\u884C\u4F30\u7B97</p><ul><li><p>\u5F71\u54CD\u7B97\u6CD5\u6548\u7387\u7684\u4E3B\u8981\u56E0\u7D20\uFF1A</p></li><li><p>\u7B97\u6CD5\u91C7\u7528\u7684\u7B56\u7565\u548C\u65B9\u6CD5</p></li><li><p>\u95EE\u9898\u7684\u8F93\u5165\u89C4\u6A21</p></li><li><p>\u7F16\u8BD1\u5668\u6240\u4EA7\u751F\u7684\u4EE3\u7801</p></li><li><p>\u8BA1\u7B97\u673A\u6267\u884C\u901F\u5EA6</p></li></ul><p><strong>\u7B97\u6CD5\u63A8\u5012\u7684\u7406\u8BBA\u57FA\u7840\uFF1A</strong></p><ul><li><p>\u7B97\u6CD5\u6700\u7EC8\u7F16\u8BD1\u6210\u5177\u4F53\u7684\u8BA1\u7B97\u673A\u6307\u4EE4</p></li><li><p>\u6BCF\u4E00\u4E2A\u6307\u4EE4\uFF0C\u5728\u5177\u4F53\u7684\u8BA1\u7B97\u673A\u4E0A\u8FD0\u884C\u901F\u5EA6\u56FA\u5B9A</p></li><li><p>\u901A\u8FC7\u5177\u4F53\u7684\u6B65\u9AA4\uFF0C\u5C31\u53EF\u4EE5\u63A8\u5BFC\u51FA\u7B97\u6CD5\u7684\u590D\u6742\u5EA6\uFF08\u5982\u4E0B\u8868\uFF09</p></li></ul><table><thead><tr><th>\u6B21\u6570</th><th>\u7B97\u6CD5C(4n+8)</th><th>\u7B97\u6CD5C<sup>1</sup>(n)</th><th>\u7B97\u6CD5D(2n<sup>2</sup>+1)</th><th>\u7B97\u6CD5D<sup>1</sup>(n<sup>2</sup>)</th></tr></thead><tbody><tr><td>n = 1</td><td>12</td><td>1</td><td>3</td><td>1</td></tr><tr><td>n = 2</td><td>16</td><td>2</td><td>9</td><td>4</td></tr><tr><td>n = 3</td><td>20</td><td>3</td><td>19</td><td>9</td></tr><tr><td>n = 10</td><td>48</td><td>10</td><td>201</td><td>100</td></tr><tr><td>n = 100</td><td>408</td><td>100</td><td>20001</td><td>10000</td></tr><tr><td>n = 1000</td><td>4008</td><td>1000</td><td>2000001</td><td>1000000</td></tr></tbody></table><table><thead><tr><th>\u6B21\u6570</th><th>\u7B97\u6CD5G(2n<sup>2</sup>)</th><th>\u7B97\u6CD5H(3n+1)</th><th>\u7B97\u6CD5I(2n<sup>2</sup>+3n+1)</th></tr></thead><tbody><tr><td>n = 1</td><td>2</td><td>4</td><td>6</td></tr><tr><td>n = 2</td><td>8</td><td>7</td><td>15</td></tr><tr><td>n = 5</td><td>50</td><td>16</td><td>66</td></tr><tr><td>n = 10</td><td>200</td><td>31</td><td>231</td></tr><tr><td>n = 100</td><td>20000</td><td>301</td><td>20301</td></tr><tr><td>n = 1000</td><td>2000000</td><td>3001</td><td>2003001</td></tr><tr><td>n = 10000</td><td>2000000000</td><td>30001</td><td>200030001</td></tr><tr><td>n = 100000</td><td>20000000000</td><td>300001</td><td>20000300001</td></tr><tr><td>n = 1000000</td><td>2000000000000</td><td>3000001</td><td>2000003000001</td></tr></tbody></table><p>\u600E\u4E48\u5224\u65AD\u4E00\u4E2A\u7B97\u6CD5\u7684\u6548\u7387\uFF1F(\u89C4\u5219\u5982\u4E0B)</p><p>\u5224\u65AD\u4E00\u4E2A\u7B97\u6CD5\u7684\u6548\u7387\u65F6\uFF0C\u5F80\u5F80<strong>\u53EA\u9700\u8981\u5173\u6CE8\u64CD\u4F5C\u6570\u91CF\u7684\u6700\u9AD8\u6B21\u9879\uFF0C\u5176\u5B83\u6B21\u8981\u9879\u548C\u5E38\u6570\u9879\u53EF</strong></p><p><strong>\u4EE5\u5FFD\u7565\u3002</strong></p><ul><li><p>\u5728\u6CA1\u6709\u7279\u6B8A\u8BF4\u660E\u65F6\uFF0C\u6211\u4EEC\u6240\u5206\u6790\u7684<strong>\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662F\u6307\u6700\u574F\u65F6\u95F4\u590D\u6742\u5EA6</strong>\u3002</p></li><li><p><strong>\u53EA\u6709\u5E38\u6570\u9879\u8BB0\u505A 1</strong></p></li><li><p><strong>\u64CD\u4F5C\u6570\u91CF\u7684\u4F30\u7B97\u53EF\u4EE5\u4F5C\u4E3A\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u4F30\u7B97</strong></p></li></ul><h4 id="_2-3-1-3-\u5927o\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-3-1-3-\u5927o\u8868\u793A\u6CD5" aria-hidden="true">#</a> 2.3.1.3 \u5927O\u8868\u793A\u6CD5</h4><p>\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6</p><p>\u5E38\u89C1\u7684\u65F6\u95F4\u590D\u6742\u5EA6</p><table><thead><tr><th>\u6267\u884C\u6B21\u6570\u51FD\u6570</th><th>\u9636</th><th>\u975E\u6B63\u5F0F\u672F\u8BED</th></tr></thead><tbody><tr><td>12</td><td>O(1)</td><td>\u5E38\u6570\u9636</td></tr><tr><td>2n+3</td><td>O(n)</td><td>\u7EBF\u6027\u9636</td></tr><tr><td>3n<sup>2</sup>+2n+1</td><td>O(n<sup>2</sup>)</td><td>\u5E73\u65B9\u9636</td></tr><tr><td>5log<sub>2</sub>n+20</td><td>O(logn)</td><td>\u5BF9\u6570\u9636</td></tr><tr><td>2n+3nlog<sub>2</sub>n+19</td><td>O(nlogn)</td><td>nlogn\u9636</td></tr><tr><td>6n<sup>3</sup>+2n<sup>2</sup>+3n+4</td><td>O(n<sup>3</sup>)</td><td>\u7ACB\u65B9\u9636</td></tr><tr><td>2<sup>n</sup></td><td>O(2<sup>2</sup>)</td><td>\u6307\u6570\u9636</td></tr></tbody></table><ul><li>\u5E38\u89C1\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E4B\u95F4\u7684\u5173\u7CFB</li></ul><p><img src="`+a+'" alt="image-20220329223747066"></p><p>\u5E38\u7528\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u6240\u8017\u8D39\u7684\u65F6\u95F4\u4ECE\u5C0F\u5230\u5927\u4F9D\u6B21\u662F\uFF1A</p><p><strong>O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n<sup>2</sup>) &lt; O(n<sup>3</sup>) &lt; O(2<sup>n</sup>) &lt; O(n!) &lt; O(n<sup>n</sup>)</strong></p><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\u7EC3\u4E60( \u53C2\u8003\u7B97\u6CD5\u7684\u6548\u7387\u89C4\u5219\u5224\u65AD )</p></li><li><p>O(5) = O(1)</p></li><li><p>O(2n + 1) = O(n)</p></li><li><p>O(6n\xB2+ n + 1) = O(n\xB2)</p></li><li><p>O(3n\xB3+1) = O(n\xB3)</p></li></ul><p><strong>\u603B\u7ED3:</strong></p><ul><li><p><strong>\u53EA\u5173\u6CE8\u6700\u9AD8\u6B21\u9879</strong></p></li><li><p><strong>\u65F6\u95F4\u590D\u6742\u5EA6\u662F\u6307\u6700\u574F\u65F6\u95F4\u590D\u6742\u5EA6</strong></p></li><li><p><strong>\u53EA\u6709\u5E38\u6570\u9879\u8BB0\u505A 1</strong></p></li></ul><p><strong>\u7B97\u6CD5\u7684\u7A7A\u95F4\u590D\u6742\u5EA6</strong></p><p>\u7B97\u6CD5\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u5E76\u4E0D\u662F\u8BA1\u7B97\u6240\u6709\u7B97\u6CD5\u6240\u5360\u7684\u7A7A\u95F4\uFF0C\u800C\u662F\u4F7F\u7528\u7684\u8F85\u52A9\u7A7A\u95F4\u7684\u5927\u5C0F\u3002</p><h4 id="_2-3-1-4-\u5927o\u8868\u793A\u6CD5\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#_2-3-1-4-\u5927o\u8868\u793A\u6CD5\u7EC3\u4E60" aria-hidden="true">#</a> 2.3.1.4 \u5927O\u8868\u793A\u6CD5\u7EC3\u4E60</h4><p>\u7565</p><p>\u7B97\u6CD5\u5728\u6B64\u4EC5\u505A\u4ECB\u7ECD\uFF0C\u5177\u4F53\u8BF7\u770B\u6709\u5173\u7B97\u6CD5\u7684\u7B14\u8BB0</p><h1 id="_3-\u6570\u636E\u7ED3\u6784\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#_3-\u6570\u636E\u7ED3\u6784\u5206\u7C7B" aria-hidden="true">#</a> 3.\u6570\u636E\u7ED3\u6784\u5206\u7C7B</h1><p>\u6309\u7167\u89C6\u70B9\u7684\u4E0D\u540C\uFF0C\u6211\u4EEC\u628A\u6570\u636E\u7ED3\u6784\u5206\u4E3A<strong>\u903B\u8F91\u7ED3\u6784</strong>\u548C<strong>\u7269\u7406\u7ED3\u6784\u3002</strong></p><h2 id="_3-1\u903B\u8F91\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-1\u903B\u8F91\u7ED3\u6784" aria-hidden="true">#</a> 3.1\u903B\u8F91\u7ED3\u6784</h2><h3 id="_3-1-1\u96C6\u5408\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-1-1\u96C6\u5408\u7ED3\u6784" aria-hidden="true">#</a> 3.1.1\u96C6\u5408\u7ED3\u6784</h3><p>\u96C6\u5408\u7ED3\u6784\u4E2D\u7684\u6570\u636E\u5143\u7D20\u9664\u4E86\u540C\u5C5E\u4E8E\u4E00\u4E2A\u96C6\u5408\u5916\uFF0C\u4ED6\u4EEC\u4E4B\u95F4\u6CA1\u6709\u5176\u4ED6\u5173\u7CFB\u3002\u5404\u4E2A\u6570\u636E\u5143\u7D20\u662F\u5E73\u7B49\u7684\u3002\u4ED6\u4EEC\u5171\u540C\u5C5E\u4E8E\u540C\u4E00\u4E2A\u96C6\u5408\uFF0C\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u96C6\u5408\u5173\u7CFB\u7C7B\u4F3C\u4E8E\u6570\u5B66\u4E2D\u7684\u96C6\u5408\uFF0C\u5982\u4E0B\u56FE\u6240\u793A</p><p><img src="'+p+'" alt="wps2A44.tmp.jpg"></p><h3 id="_3-1-2-\u7EBF\u6027\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-1-2-\u7EBF\u6027\u7ED3\u6784" aria-hidden="true">#</a> 3.1.2 \u7EBF\u6027\u7ED3\u6784</h3><p>\u7EBF\u6027\u7ED3\u6784\u4E2D\u7684\u6570\u636E\u5143\u7D20\u662F\u4E00\u5BF9\u4E00\u7684\u5173\u7CFB\uFF0C\u5982\u56FE\uFF1A</p><p><img src="'+t+'" alt="wps8B02.tmp.jpg"></p><h3 id="_3-1-3-\u6811\u5F62\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-1-3-\u6811\u5F62\u7ED3\u6784" aria-hidden="true">#</a> 3.1.3 \u6811\u5F62\u7ED3\u6784</h3><p>\u6811\u5F62\u7ED3\u6784\u4E2D\u662F\u6570\u636E\u5143\u7D20\u4E4B\u95F4\u5B58\u5728\u4E00\u79CD\u4E00\u5BF9\u591A\u7684\u5C42\u6B21\u5173\u7CFB\uFF0C\u5982\u56FE\uFF1A</p><p><img src="'+e+'" alt="wpsC6A5.tmp.jpg"></p><h3 id="_3-1-4-\u56FE\u5F62\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-1-4-\u56FE\u5F62\u7ED3\u6784" aria-hidden="true">#</a> 3.1.4 \u56FE\u5F62\u7ED3\u6784</h3><p>\u56FE\u5F62\u7ED3\u6784\u7684\u6570\u636E\u5143\u7D20\u662F\u591A\u5BF9\u591A\u7684\u5173\u7CFB\uFF0C\u5982\u56FE\uFF1A</p><p><img src="'+o+'" alt="wps1747.tmp.jpg"></p><h2 id="_3-2-\u7269\u7406\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-2-\u7269\u7406\u7ED3\u6784" aria-hidden="true">#</a> 3.2 \u7269\u7406\u7ED3\u6784</h2><p>\u6709\u7684\u4E66\u79F0\u4E3A\u5B58\u50A8\u7ED3\u6784\u3002</p><p>\u7269\u7406\u7ED3\u6784\u662F\u6307\u6570\u636E\u7684\u903B\u8F91\u7ED3\u6784\u5728\u8BA1\u7B97\u673A\u4E2D\u7684\u5B58\u50A8\u5F62\u5F0F\uFF0C\u5171\u5206\u4E3A\u4E24\u79CD\uFF1A\u987A\u5E8F\u5B58\u50A8\u548C\u94FE\u5F0F\u5B58\u50A8\u3002</p><h3 id="_3-2-1-\u987A\u5E8F\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_3-2-1-\u987A\u5E8F\u5B58\u50A8" aria-hidden="true">#</a> 3.2.1 \u987A\u5E8F\u5B58\u50A8</h3><p>\u662F\u628A\u6570\u636E\u5143\u7D20\u5B58\u653E\u5728\u5730\u5740\u8FDE\u7EED\u7684\u5B58\u50A8\u5355\u5143\u91CC\uFF0C\u5176\u6570\u636E\u7684\u903B\u8F91\u5173\u7CFB\u548C\u7269\u7406\u5173\u7CFB\u662F\u4E00\u81F4\u7684\uFF0C\u5982\u56FE\uFF1A</p><p><img src="'+c+'" alt="wps61AE.tmp.jpg"></p><p>\u5982\u679C\u6240\u6709\u6570\u636E\u7ED3\u6784\u90FD\u5F88\u7B80\u5355\u6709\u89C4\u5F8B\uFF0C\u4E00\u5207\u5C31\u597D\u529E\u4E86\uFF0C\u53EF\u5B9E\u9645\u4E0A\uFF0C\u603B\u6709\u4EBA\u60F3\u8981\u63D2\u961F\uFF0C\u6216\u8005\u653E\u5F03\u6392\u961F\uFF0C\u6240\u4EE5\u5143\u7D20\u96C6\u5408\u4E2D\u5C31\u4F1A\u6DFB\u52A0\u3001\u5220\u9664\u6389\u6210\u5458\uFF0C\u663E\u7136\u9762\u5BF9\u8FD9\u6837\u65F6\u5E38\u8981\u53D8\u5316\u7684\u7ED3\u6784\uFF0C\u987A\u5E8F\u5B58\u50A8\u662F\u4E0D\u79D1\u5B66\u7684\uFF0C\u90A3\u600E\u4E48\u529E\u5462</p><h3 id="_3-2-2-\u94FE\u5F0F\u5B58\u50A8\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_3-2-2-\u94FE\u5F0F\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a> 3.2.2 \u94FE\u5F0F\u5B58\u50A8\u7ED3\u6784</h3><p>\u662F\u628A\u6570\u636E\u5143\u7D20\u5B58\u653E\u5728\u4EFB\u610F\u7684\u5B58\u50A8\u5355\u5143\u91CC\uFF0C\u8FD9\u7EC4\u5B58\u50A8\u5355\u5143\u53EF\u4EE5\u662F\u8FDE\u7EED\u7684\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E0D\u8FDE\u7EED\u7684\u3002\u6570\u636E\u5143\u7D20\u7684\u5B58\u50A8\u5173\u7CFB\u5E76\u4E0D\u80FD\u53CD\u6620\u5176\u903B\u8F91\u5173\u7CFB\uFF0C\u56E0\u6B64\u9700\u8981\u7528\u4E00\u4E2A\u6307\u9488\u5B58\u653E\u6570\u636E\u5143\u7D20\u7684\u5730\u5740\uFF0C\u8FD9\u6837\u901A\u8FC7\u5730\u5740\u5C31\u53EF\u4EE5\u627E\u5230\u76F8\u5173\u6570\u636E\u7684\u4F4D\u7F6E\u3002\u5982\u56FE\uFF1A</p><p><img src="'+l+'" alt="wpsAD4F.tmp.jpg"></p><h1 id="_4-\u7EBF\u6027\u8868" tabindex="-1"><a class="header-anchor" href="#_4-\u7EBF\u6027\u8868" aria-hidden="true">#</a> 4.\u7EBF\u6027\u8868</h1><h2 id="_4-1\u7EBF\u6027\u8868\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_4-1\u7EBF\u6027\u8868\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 4.1\u7EBF\u6027\u8868\u57FA\u672C\u6982\u5FF5</h2><p>\u7EBF\u6027\u7ED3\u6784\u662F\u4E00\u79CD\u6700\u7B80\u5355\u4E14\u5E38\u7528\u7684\u6570\u636E\u7ED3\u6784\u3002\u7EBF\u6027\u7ED3\u6784\u7684\u57FA\u672C\u7279\u70B9\u662F\u8282\u70B9\u4E4B\u95F4\u6EE1\u8DB3\u7EBF\u6027\u5173\u7CFB\u3002\u672C\u7AE0\u8BA8\u8BBA\u7684\u52A8\u6001\u6570\u7EC4\u3001\u94FE\u8868\u3001\u6808\u3001\u961F\u5217\u90FD\u5C5E\u4E8E\u7EBF\u6027\u7ED3\u6784\u3002\u4ED6\u4EEC\u7684\u5171\u540C\u4E4B\u5904\uFF0C\u662F\u8282\u70B9\u4E2D\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u5F00\u59CB\u8282\u70B9\u548C\u7EC8\u7AEF\u8282\u70B9\u3002\u6309\u8FD9\u79CD\u5173\u7CFB\uFF0C\u53EF\u4EE5\u628A\u5B83\u4EEC\u7684\u6240\u6709\u8282\u70B9\u6392\u5217\u6210\u4E00\u4E2A\u7EBF\u6027\u5E8F\u5217\u3002\u4F46\u662F\uFF0C\u4ED6\u4EEC\u5206\u522B\u5C5E\u4E8E\u51E0\u79CD\u4E0D\u540C\u7684\u62BD\u8C61\u6570\u636E\u7C7B\u578B\u5B9E\u73B0\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B\uFF0C\u4E3B\u8981\u5C31\u662F\u64CD\u4F5C\u7684\u4E0D\u540C\u3002</p><p>\u7EBF\u6027\u8868\u662F\u96F6\u4E2A\u6216\u8005\u591A\u4E2A\u6570\u636E\u5143\u7D20\u7684\u6709\u9650\u5E8F\u5217\uFF0C<strong>\u6570\u636E\u5143\u7D20\u4E4B\u95F4\u662F\u6709\u987A\u5E8F\u7684\uFF0C\u6570\u636E\u5143\u7D20\u4E2A\u6570\u662F\u6709\u9650\u7684\uFF0C\u6570\u636E\u5143\u7D20\u7684\u7C7B\u578B\u5FC5\u987B\u76F8\u540C</strong></p><p>\u4F8B\uFF1A\u5148\u6765\u770B\u4E00\u4E2A\u5927\u5BB6\u611F\u5174\u8DA3\u7684\u8BDD\u9898\uFF0C\u4E00\u5E74\u91CC\u7684\u661F\u5EA7\u5217\u8868\uFF0C\u662F\u4E0D\u662F\u7EBF\u6027\u8868\u5462\uFF1F\u5982\u56FE\u6240\u793A\uFF1A</p><p><img src="'+u+`" alt="wpsC373.tmp.jpg"></p><h3 id="_4-1-1-\u7EBF\u6027\u8868\u7684\u6570\u5B66\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_4-1-1-\u7EBF\u6027\u8868\u7684\u6570\u5B66\u5B9A\u4E49" aria-hidden="true">#</a> 4.1.1 \u7EBF\u6027\u8868\u7684\u6570\u5B66\u5B9A\u4E49</h3><p>\u7EBF\u6027\u8868\u662F\u5177\u6709\u76F8\u540C\u7C7B\u578B\u7684 n\uFF08 \u2265 0\uFF09\u4E2A\u6570\u636E\u5143\u7D20\u7684\u6709\u9650\u5E8F\u5217\uFF08a0,a1, a2, \u2026, an\uFF09</p><p>ai \u662F\u8868\u9879\uFF0Cn \u662F\u8868\u957F\u5EA6\u3002</p><h2 id="_4-2\u7EBF\u6027\u8868\u7684\u6027\u8D28" tabindex="-1"><a class="header-anchor" href="#_4-2\u7EBF\u6027\u8868\u7684\u6027\u8D28" aria-hidden="true">#</a> 4.2\u7EBF\u6027\u8868\u7684\u6027\u8D28</h2><p>\u200B 1\uFF09a0 \u4E3A\u7EBF\u6027\u8868\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u53EA\u6709\u4E00\u4E2A\u540E\u7EE7\u3002 \u200B 2\uFF09an \u4E3A\u7EBF\u6027\u8868\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u53EA\u6709\u4E00\u4E2A\u524D\u9A71\u3002 \u200B 3\uFF09\u9664 a0 \u548C an \u5916\u7684\u5176\u5B83\u5143\u7D20 ai\uFF0C\u65E2\u6709\u524D\u9A71\uFF0C\u53C8\u6709\u540E\u7EE7\u3002 \u200B 4\uFF09\u7EBF\u6027\u8868\u80FD\u591F\u9010\u9879\u8BBF\u95EE\u548C\u987A\u5E8F\u5B58\u53D6\u3002</p><h2 id="_4-3-\u7EBF\u6027\u8868\u7684\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_4-3-\u7EBF\u6027\u8868\u7684\u64CD\u4F5C" aria-hidden="true">#</a> 4.3 \u7EBF\u6027\u8868\u7684\u64CD\u4F5C</h2><p>\u521B\u5EFA\u7EBF\u6027\u8868</p><ul><li><p>\u9500\u6BC1\u7EBF\u6027\u8868</p></li><li><p>\u6E05\u7A7A\u7EBF\u6027\u8868\uF06C \u5C06\u5143\u7D20\u63D2\u5165\u7EBF\u6027\u8868</p></li><li><p>\u5C06\u5143\u7D20\u4ECE\u7EBF\u6027\u8868\u4E2D\u5220\u9664</p></li><li><p>\u83B7\u53D6\u7EBF\u6027\u8868\u4E2D\u67D0\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20</p></li><li><p>\u83B7\u53D6\u7EBF\u6027\u8868\u7684\u957F\u5EA6</p></li></ul><p>\u7EBF\u6027\u8868\u7684\u62BD\u8C61\u6570\u636E\u7C7B\u578B\u5B9A\u4E49\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*ADT\u7EBF\u6027\u8868\uFF08List\uFF09
Data
\u7EBF\u6027\u8868\u7684\u6570\u636E\u5BF9\u8C61\u96C6\u5408\u4E3A{ a1, a2, \u2026\u2026, an }\uFF0C\u6BCF\u4E2A\u5143\u7D20\u7684\u7C7B\u578B\u5747\u4E3ADataType\u3002\u5176\u4E2D\uFF0C\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20a1\u5916\uFF0C\u6BCF\u4E2A\u5143\u7D20\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u76F4\u63A5\u524D\u9A71\u5143\u7D20\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u5143\u7D20an\u5916\uFF0C\u6BCF\u4E2A\u5143\u7D20\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u76F4\u63A5\u540E\u7EE7\u5143\u7D20\u3002\u6570\u636E\u5143\u7D20\u4E4B\u95F4\u7684\u5173\u7CFB\u662F\u4E00\u4E00\u5BF9\u5E94\u7684\u3002*/</span>

Operation\uFF08\u64CD\u4F5C\uFF09
<span class="token comment">// \u521D\u59CB\u5316\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u7A7A\u7684\u7EBF\u6027\u8868L\u3002</span>
<span class="token function">InitList</span><span class="token punctuation">(</span><span class="token operator">*</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u7EBF\u6027\u8868\u4E3A\u7A7A\uFF0C\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</span>
<span class="token function">ListEmpty</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5C06\u7EBF\u6027\u8868\u6E05\u7A7A</span>
<span class="token function">ClearList</span><span class="token punctuation">(</span><span class="token operator">*</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5C06\u7EBF\u6027\u8868L\u4E2D\u7684\u7B2Ci\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\u8FD4\u56DE\u7ED9e</span>
<span class="token function">GetElem</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token operator">*</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5728\u7EBF\u6027\u8868L\u4E2D\u7684\u7B2Ci\u4E2A\u4F4D\u7F6E\u63D2\u5165\u65B0\u5143\u7D20e</span>
<span class="token function">ListInsert</span><span class="token punctuation">(</span><span class="token operator">*</span>L<span class="token punctuation">,</span> i<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5220\u9664\u7EBF\u6027\u8868L\u4E2D\u7684\u7B2Ci\u4E2A\u4F4D\u7F6E\u5143\u7D20\uFF0C\u5E76\u7528e\u8FD4\u56DE\u5176\u503C</span>
<span class="token function">ListDelete</span><span class="token punctuation">(</span><span class="token operator">*</span>L<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token operator">*</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD4\u56DE\u7EBF\u6027\u8868L\u7684\u5143\u7D20\u4E2A\u6570</span>
<span class="token function">ListLength</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u9500\u6BC1\u7EBF\u6027\u8868</span>
<span class="token function">DestroyList</span><span class="token punctuation">(</span><span class="token operator">*</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="_4-4\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_4-4\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u5B58\u50A8" aria-hidden="true">#</a> 4.4\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u5B58\u50A8</h2><p>\u901A\u5E38\u7EBF\u6027\u8868\u53EF\u4EE5\u91C7\u7528\u987A\u5E8F\u5B58\u50A8\u548C\u94FE\u5F0F\u5B58\u50A8\u3002\u3002</p><p>\u91C7\u7528\u987A\u5E8F\u5B58\u50A8\u662F\u8868\u793A\u7EBF\u6027\u8868\u6700\u7B80\u5355\u7684\u65B9\u6CD5\uFF0C\u5177\u4F53\u505A\u6CD5\u662F\uFF1A\u5C06\u7EBF\u6027\u8868\u4E2D\u7684\u5143\u7D20\u4E00\u4E2A\u63A5\u4E00\u4E2A\u7684\u5B58\u50A8\u5728\u4E00\u5757\u8FDE\u7EED\u7684\u5B58\u50A8\u533A\u57DF\u4E2D\uFF0C\u8FD9\u79CD\u987A\u5E8F\u8868\u793A\u7684\u7EBF\u6027\u8868\u4E5F\u6210\u4E3A\u987A\u5E8F\u8868\u3002</p><p>\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784\uFF0C\u6307\u7684\u662F<strong>\u7528\u4E00\u6BB5\u5730\u5740\u8FDE\u7EED\u7684\u5B58\u50A8\u5355\u5143\u4F9D\u6B21\u5B58\u50A8\u7EBF\u6027\u8868\u7684\u6570\u636E\u5143\u7D20\u3002</strong></p><p>\u7EBF\u6027\u8868 \uFF08a1\uFF0Ca2\uFF0C\u2026\u2026\uFF0Can\uFF09\u7684\u987A\u5E8F\u5B58\u50A8\u5982\u4E0B\uFF1A</p><table><thead><tr><th>a1</th><th>a2</th><th>......</th><th>ai-1</th><th>ai</th><th>......</th><th>an</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="_4-5\u7EBF\u6027\u8868\u987A\u5E8F\u5B58\u50A8-\u52A8\u6001\u6570\u7EC4-\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-5\u7EBF\u6027\u8868\u987A\u5E8F\u5B58\u50A8-\u52A8\u6001\u6570\u7EC4-\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> 4.5\u7EBF\u6027\u8868\u987A\u5E8F\u5B58\u50A8(\u52A8\u6001\u6570\u7EC4)\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</h2><p><strong>\u64CD\u4F5C\u8981\u70B9:</strong></p><ul><li><p>\u63D2\u5165\u5143\u7D20\u7B97\u6CD5</p></li><li><p>\u5224\u65AD\u7EBF\u6027\u8868\u662F\u5426\u5408\u6CD5</p></li><li><p>\u5224\u65AD\u63D2\u5165\u4F4D\u7F6E\u662F\u5426\u5408\u6CD5</p></li><li><p>\u5224\u65AD\u7A7A\u95F4\u662F\u5426\u6EE1\u8DB3</p></li><li><p>\u628A\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5230\u63D2\u5165\u4F4D\u7F6E\u7684\u5143\u7D20\u540E\u79FB\u4E00\u4E2A\u4F4D\u7F6E</p></li><li><p>\u5C06\u65B0\u5143\u7D20\u63D2\u5165</p></li><li><p>\u7EBF\u6027\u8868\u957F\u5EA6\u52A01</p></li><li><p>\u83B7\u53D6\u5143\u7D20\u64CD\u4F5C</p></li><li><p>\u5224\u65AD\u7EBF\u6027\u8868\u662F\u5426\u5408\u6CD5</p></li><li><p>\u5224\u65AD\u4F4D\u7F6E\u662F\u5426\u5408\u6CD5</p></li><li><p>\u76F4\u63A5\u901A\u8FC7\u6570\u7EC4\u4E0B\u6807\u7684\u65B9\u5F0F\u83B7\u53D6\u5143\u7D20</p></li><li><p>\u5220\u9664\u5143\u7D20\u7B97\u6CD5</p></li><li><p>\u5224\u65AD\u7EBF\u6027\u8868\u662F\u5426\u5408\u6CD5</p></li><li><p>\u5224\u65AD\u5220\u9664\u4F4D\u7F6E\u662F\u5426\u5408\u6CD5</p></li><li><p>\u5C06\u5143\u7D20\u53D6\u51FA</p></li><li><p>\u5C06\u5220\u9664\u4F4D\u7F6E\u540E\u7684\u5143\u7D20\u5206\u522B\u5411\u524D\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E</p></li><li><p>\u7EBF\u6027\u8868\u957F\u5EA6\u51CF1</p></li></ul><p><strong>\u5143\u7D20\u7684\u63D2\u5165</strong></p><p><img src="`+r+'" alt="wps5BAD.tmp.jpg"></p><p><strong>\u5143\u7D20\u7684\u5220\u9664</strong></p><p><img src="'+i+`" alt="wps93B5.tmp.jpg"></p><p><strong>\u6CE8\u610F:</strong> <strong>\u94FE\u8868\u7684\u5BB9\u91CF\u548C\u94FE\u8868\u7684\u957F\u5EA6\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u6982\u5FF5</strong></p><p><strong>\u6848\u4F8B</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MYARRAY_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MYARRAY_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token comment">//\u5B9A\u4E49\u7ED3\u6784\u4F53 \u4FDD\u5B58\u6570\u636E\u9996\u5730\u5740\u548C\u6570\u7EC4\u957F\u5EA6</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">MyArray</span><span class="token punctuation">{</span>
<span class="token keyword">int</span><span class="token operator">*</span> ArrayAddr<span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u9996\u5730\u5740</span>
<span class="token keyword">int</span> capacity<span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u5BB9\u91CF</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span> <span class="token comment">//\u6570\u636E\u957F\u5EA6</span>
<span class="token punctuation">}</span>MyArray<span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u6570\u7EC4</span>
MyArray<span class="token operator">*</span> <span class="token function">Init_MyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
MyArray<span class="token operator">*</span> array <span class="token operator">=</span> <span class="token punctuation">(</span>MyArray<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>MyArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7ED9\u6570\u7EC4\u7ED3\u6784\u4F53\u5206\u914D\u5185\u5B58</span>
array<span class="token operator">-&gt;</span>ArrayAddr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CB\u5316\u5206\u914D\u5185\u5B58 20 \u4E2A int \u7C7B\u578B\u957F\u5EA6</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>ArrayAddr <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u7533\u8BF7\u5185\u5B58\u5931\u8D25!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token function">memset</span><span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CB\u5316\u5185\u5B58\u7A7A\u95F4</span>
array<span class="token operator">-&gt;</span>capacity <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CB\u5316\u6570\u636E\u5BB9\u91CF</span>
array<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CB\u5316\u957F\u5EA6\u4E3A 0</span>
<span class="token keyword">return</span> array<span class="token punctuation">;</span> <span class="token comment">//\u6210\u529F\u8FD4\u56DE\u6570\u7EC4\u6307\u9488</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u6570\u7EC4\u662F\u5426\u4E3A\u7A7A 0:false \u4E0D\u4E3A\u7A7A 1:true \u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmpty_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> MYARRAY_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> MYARRAY_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u6E05\u7A7A\u6570\u7EC4</span>
<span class="token keyword">int</span> <span class="token function">Clear_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>ArrayAddr <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">memset</span><span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> array<span class="token operator">-&gt;</span>capacity<span class="token operator">*</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u91CD\u65B0\u521D\u59CB\u5316\u5185\u5B58\u7A7A\u95F4</span>
<span class="token punctuation">}</span>
array<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u6307\u5B9A\u4F4D\u7F6E\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">GetElement_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">,</span><span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> array<span class="token operator">-&gt;</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u8BBF\u95EE\u8D8A\u754C!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5411\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">InsertElement_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span><span class="token keyword">int</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u662F\u5426\u63D2\u5165\u8D8A\u754C</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> array<span class="token operator">-&gt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5143\u7D20\u63D2\u5165\u4F4D\u7F6E\u4E0D\u5408\u6CD5!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u5F53\u524D\u662F\u5426\u8FD8\u6709\u5BB9\u91CF\uFF0C\u6CA1\u6709\u7684\u8BDD\uFF0C\u91CD\u65B0\u7533\u8BF7\u5185\u5B58\u7A7A\u95F4</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>length <span class="token operator">==</span> array<span class="token operator">-&gt;</span>capacity<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u7533\u8BF7\u65B0\u7684\u5185\u5B58\u7A7A\u95F4</span>
<span class="token keyword">int</span><span class="token operator">*</span> newSpaceAddr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>capacity <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5C06\u539F\u5185\u5B58\u7A7A\u95F4\u6570\u636E\u62F7\u8D1D\u5230\u65B0\u7684\u7A7A\u95F4</span>
<span class="token function">memcpy</span><span class="token punctuation">(</span>newSpaceAddr<span class="token punctuation">,</span>array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">,</span>array<span class="token operator">-&gt;</span>length<span class="token operator">*</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u91CA\u653E\u65E7\u5185\u5B58\u7A7A\u95F4\u7684\u5185\u5B58</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">!=</span> array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">free</span><span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8BA9 ArrayAddr \u91CD\u65B0\u6307\u5411\u65B0\u7684\u5185\u5B58\u7A7A\u95F4</span>
array<span class="token operator">-&gt;</span>ArrayAddr <span class="token operator">=</span> newSpaceAddr<span class="token punctuation">;</span>
<span class="token comment">//\u66F4\u65B0\u5BB9\u91CF</span>
array<span class="token operator">-&gt;</span>capacity <span class="token operator">=</span> array<span class="token operator">-&gt;</span>capacity <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u63D2\u5165\u5143\u7D20</span>
<span class="token comment">//\u7B2C\u4E00\u6B65 \u79FB\u52A8\u5143\u7D20</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> array<span class="token operator">-&gt;</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> pos<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7B2C\u4E8C\u90E8 \u5728 Pos \u4F4D\u7F6E\u63D2\u5165\u5143\u7D20</span>
array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
array<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5220\u9664\u6307\u5B9A\u4F4D\u7F6E\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">RemoevElement_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u79FB\u52A8\u5143\u7D20</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> pos<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
array<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLength_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> array<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u94FE\u8868\u5BB9\u91CF</span>
<span class="token keyword">int</span> <span class="token function">GetCapacity_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> array<span class="token operator">-&gt;</span>capacity<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6253\u5370\u6570\u7EC4\u5185\u5BB9</span>
<span class="token keyword">void</span> <span class="token function">PrintArray_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span>array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u6570\u7EC4</span>
<span class="token keyword">int</span> <span class="token function">DestroyArray_MyArray</span><span class="token punctuation">(</span>MyArray<span class="token operator">*</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token operator">-&gt;</span>ArrayAddr <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
delete array<span class="token operator">-&gt;</span>ArrayAddr<span class="token punctuation">;</span>
array<span class="token operator">-&gt;</span>ArrayAddr <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
array<span class="token operator">-&gt;</span>capacity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
array<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u6570\u7EC4</span>
delete array<span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6D4B\u8BD5 API</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
MyArray<span class="token operator">*</span> array <span class="token operator">=</span> <span class="token function">Init_MyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CB\u5316\u6570\u7EC4</span>
<span class="token comment">//\u6253\u5370\u6570\u7EC4\u5BB9\u91CF\u548C\u957F\u5EA6</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u521D\u59CB\u5316\u957F\u5EA6:%d ,\u5BB9 \u91CF:%d\\n&quot;</span><span class="token punctuation">,</span><span class="token function">GetLength_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">GetCapacity_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5FAA\u73AF\u5411\u6570\u7EC4\u4E2D\u63D2\u5165\u5143\u7D20</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">300</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">InsertElement_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u63D2\u5165\u5143\u7D20\u957F\u5EA6:%d ,\u5BB9\u91CF:%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">GetLength_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token function">GetCapacity_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u6570\u7EC4</span>
<span class="token function">PrintArray_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5220\u9664\u4F4D\u7F6E 10 \u7684\u5143\u7D20</span>
<span class="token function">RemoevElement_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u6570\u7EC4</span>
<span class="token function">PrintArray_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u63D2\u5165\u5143\u7D20\u957F\u5EA6:%d ,\u5BB9\u91CF:%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">GetLength_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token function">GetCapacity_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u6570\u7EC4</span>
<span class="token function">DestroyArray_MyArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br></div></div><h2 id="_4-6\u4F18\u70B9\u548C\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-6\u4F18\u70B9\u548C\u7F3A\u70B9" aria-hidden="true">#</a> 4.6\u4F18\u70B9\u548C\u7F3A\u70B9</h2><p>\u4F18\u70B9\uFF1A</p><ul><li>\u65E0\u9700\u4E3A\u7EBF\u6027\u8868\u4E2D\u7684\u903B\u8F91\u5173\u7CFB\u589E\u52A0\u989D\u5916\u7684\u7A7A\u95F4\u3002</li><li>\u53EF\u4EE5\u5FEB\u901F\u7684\u83B7\u53D6\u8868\u4E2D\u5408\u6CD5\u4F4D\u7F6E\u7684\u5143\u7D20\u3002</li></ul><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C\u9700\u8981\u79FB\u52A8\u5927\u91CF\u5143\u7D20\u3002</li></ul><h2 id="_4-7-\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8-\u5355\u5411\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_4-7-\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8-\u5355\u5411\u94FE\u8868" aria-hidden="true">#</a> 4.7 \u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8(\u5355\u5411\u94FE\u8868)</h2><p>\u524D\u9762\u6211\u4EEC\u5199\u7684\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u5B58\u50A8(\u52A8\u6001\u6570\u7EC4)\u7684\u6848\u4F8B\uFF0C\u6700\u5927\u7684\u7F3A\u70B9\u662F\u63D2\u5165\u548C\u5220\u9664\u65F6\u9700\u8981\u79FB\u52A8\u5927\u91CF\u5143\u7D20\uFF0C\u8FD9\u663E\u7136\u9700\u8981\u8017\u8D39\u65F6\u95F4\uFF0C\u80FD\u4E0D\u80FD\u60F3\u529E\u6CD5\u89E3\u51B3\u5462\uFF1F\u94FE\u8868\u3002</p><p>\u94FE\u8868\u4E3A\u4E86\u8868\u793A\u6BCF\u4E2A\u6570\u636E\u5143\u7D20\u4E0E\u5176\u76F4\u63A5\u540E\u7EE7\u5143\u7D20\u4E4B\u95F4\u7684\u903B\u8F91\u5173\u7CFB\uFF0C\u6BCF\u4E2A\u5143\u7D20\u9664\u4E86\u5B58\u50A8\u672C\u8EAB\u7684\u4FE1\u606F\u5916\uFF0C\u8FD8\u9700\u8981\u5B58\u50A8\u6307\u793A\u5176\u76F4\u63A5\u540E\u7EE7\u7684\u4FE1\u606F\u3002</p><p><img src="`+k+'" alt="wps462.tmp.jpg"></p><p><strong>\u5355\u94FE\u8868</strong></p><ul><li><p>\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8\u7ED3\u6784\u4E2D\uFF0C\u6BCF\u4E2A\u8282\u70B9\u4E2D\u53EA\u5305\u542B\u4E00\u4E2A\u6307\u9488\u57DF\uFF0C\u8FD9\u6837\u7684\u94FE\u8868\u53EB\u5355\u94FE\u8868\u3002</p></li><li><p>\u901A\u8FC7\u6BCF\u4E2A\u8282\u70B9\u7684\u6307\u9488\u57DF\u5C06\u7EBF\u6027\u8868\u7684\u6570\u636E\u5143\u7D20\u6309\u5176\u903B\u8F91\u6B21\u5E8F\u94FE\u63A5\u5728\u4E00\u8D77\uFF08\u5982\u56FE\uFF09\u3002</p></li></ul><p><img src="'+b+'" alt="wps50ED.tmp.jpg"></p><p><strong>\u6982\u5FF5\u89E3\u91CA\uFF1A</strong></p><ul><li>\u8868\u5934\u7ED3\u70B9</li></ul><p>\u94FE\u8868\u4E2D\u7684\u7B2C\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u5305\u542B\u6307\u5411\u7B2C\u4E00\u4E2A\u6570\u636E\u5143\u7D20\u7684\u6307\u9488\u4EE5\u53CA\u94FE\u8868\u81EA\u8EAB\u7684\u4E00\u4E9B\u4FE1\u606F</p><ul><li>\u6570\u636E\u7ED3\u70B9</li></ul><p>\u94FE\u8868\u4E2D\u4EE3\u8868\u6570\u636E\u5143\u7D20\u7684\u7ED3\u70B9\uFF0C\u5305\u542B\u6307\u5411\u4E0B\u4E00\u4E2A\u6570\u636E\u5143\u7D20\u7684\u6307\u9488\u548C\u6570\u636E\u5143\u7D20\u7684\u4FE1\u606F</p><ul><li>\u5C3E\u7ED3\u70B9</li></ul><p>\u94FE\u8868\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u6570\u636E\u7ED3\u70B9\uFF0C\u5176\u4E0B\u4E00\u5143\u7D20\u6307\u9488\u4E3A\u7A7A\uFF0C\u8868\u793A\u65E0\u540E\u7EE7\u3002</p><p><img src="'+m+'" alt="wps8E45.tmp.jpg"></p><h2 id="_4-8\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8-\u5355\u9879\u94FE\u8868-\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-8\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8-\u5355\u9879\u94FE\u8868-\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> 4.8\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8(\u5355\u9879\u94FE\u8868)\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</h2><ul><li>\u63D2\u5165\u64CD\u4F5C</li></ul><p><img src="'+d+`" alt="wpsCE6C.tmp.jpg"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>node<span class="token operator">-&gt;</span>next <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
current<span class="token operator">-&gt;</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u5220\u9664\u64CD\u4F5C</li></ul><p><img src="`+y+`" alt="wps888.tmp.jpg"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>current<span class="token operator">-&gt;</span>next <span class="token operator">=</span> ret<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-8-1-\u4F18\u70B9\u4E0E\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-8-1-\u4F18\u70B9\u4E0E\u7F3A\u70B9" aria-hidden="true">#</a> 4.8.1 \u4F18\u70B9\u4E0E\u7F3A\u70B9</h3><p><strong>\u4F18\u70B9\uFF1A</strong></p><p>\u65E0\u9700\u4E00\u6B21\u6027\u5B9A\u5236\u94FE\u8868\u7684\u5BB9\u91CF</p><p>\u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C\u65E0\u9700\u79FB\u52A8\u6570\u636E\u5143\u7D20</p><p><strong>\u7F3A\u70B9\uFF1A</strong></p><p>\u6570\u636E\u5143\u7D20\u5FC5\u987B\u4FDD\u5B58\u540E\u7EE7\u5143\u7D20\u7684\u4F4D\u7F6E\u4FE1\u606F</p><p>\u83B7\u53D6\u6307\u5B9A\u6570\u636E\u7684\u5143\u7D20\u64CD\u4F5C\u9700\u8981\u987A\u5E8F\u8BBF\u95EE\u4E4B\u524D\u7684\u5143\u7D20</p><h3 id="_4-8-2-\u94FE\u8868\u6280\u672F\u9886\u57DF\u63A8\u6F14-\u80FD\u529B\u63D0\u9AD8" tabindex="-1"><a class="header-anchor" href="#_4-8-2-\u94FE\u8868\u6280\u672F\u9886\u57DF\u63A8\u6F14-\u80FD\u529B\u63D0\u9AD8" aria-hidden="true">#</a> 4.8.2 \u94FE\u8868\u6280\u672F\u9886\u57DF\u63A8\u6F14(\u80FD\u529B\u63D0\u9AD8)</h3><p><img src="`+g+`" alt="image-20220329224805639"></p><h3 id="_4-8-4-\u4F01\u4E1A\u94FE\u8868-\u901A\u7528\u94FE\u8868-\u5355\u5411\u94FE\u8868-\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-8-4-\u4F01\u4E1A\u94FE\u8868-\u901A\u7528\u94FE\u8868-\u5355\u5411\u94FE\u8868-\u6848\u4F8B" aria-hidden="true">#</a> 4.8.4 \u4F01\u4E1A\u94FE\u8868/\u901A\u7528\u94FE\u8868(\u5355\u5411\u94FE\u8868)\u6848\u4F8B</h3><ul><li>\u5934\u6587\u4EF6LinkList.h</li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">LINKLIST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LINKLIST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LINK_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LINK_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token comment">//\u94FE\u8868\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_ListNode</span><span class="token punctuation">{</span>
<span class="token keyword">struct</span> <span class="token class-name">_ListNode</span><span class="token operator">*</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>ListNode<span class="token punctuation">;</span>
<span class="token comment">//\u8868\u5934\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_LinkList</span><span class="token punctuation">{</span>
ListNode header<span class="token punctuation">;</span> <span class="token comment">//\u5934\u7ED3\u70B9</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span> <span class="token comment">//\u94FE\u8868\u957F\u5EA6</span>
<span class="token punctuation">}</span>LinkList<span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u56DE\u8C03\u51FD\u6570</span>
<span class="token keyword">typedef</span> <span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>PrintLinkListData<span class="token punctuation">)</span><span class="token punctuation">(</span>ListNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u8868</span>
LinkList<span class="token operator">*</span> <span class="token function">InitLinkList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">DestroyLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u94FE\u8868\u4E2D\u5728\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">InsertLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span> ListNode<span class="token operator">*</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5220\u9664\u6307\u5B9A\u4F4D\u7F6E\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">DeleteLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD4\u56DE\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6E05\u7A7A\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">ClearLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868\u7ED3\u70B9</span>
<span class="token keyword">void</span> <span class="token function">PrintLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> PrintLinkListData print<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u6307\u5B9A\u4F4D\u7F6E\u7684\u7ED3\u70B9</span>
ListNode<span class="token operator">*</span> <span class="token function">GetNodeLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><ul><li>c\u6587\u4EF6LinkList.c</li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkList.h&quot;</span></span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u8868</span>
LinkList<span class="token operator">*</span> <span class="token function">InitLinkList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
LinkList<span class="token operator">*</span> list <span class="token operator">=</span> <span class="token punctuation">(</span>LinkList<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LinkList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
list<span class="token operator">-&gt;</span>header<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
list<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">DestroyLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">!=</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
list<span class="token operator">-&gt;</span>header<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
list<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token function">free</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token comment">//\u94FE\u8868\u4E2D\u5728\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">InsertLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span> ListNode<span class="token operator">*</span> node<span class="token punctuation">)</span><span class="token punctuation">{</span>
ListNode<span class="token operator">*</span> current <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>list<span class="token operator">-&gt;</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5982\u679C pos \u4F4D\u7F6E\u8D85\u51FA\u94FE\u8868\u957F\u5EA6\uFF0C\u90A3\u4E48\u5C31\u63D2\u5165\u5230\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> list<span class="token operator">-&gt;</span>length<span class="token punctuation">)</span> pos <span class="token operator">=</span> list<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token comment">//\u627E\u5230\u63D2\u5165\u7684\u4F4D\u7F6E</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pos<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
current <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u65B0\u8282\u70B9\u63D2\u5165\u5230 pos \u4F4D\u7F6E</span>
node<span class="token operator">-&gt;</span>next <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
current<span class="token operator">-&gt;</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
list<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5220\u9664\u6307\u5B9A\u4F4D\u7F6E\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">DeleteLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> list<span class="token operator">-&gt;</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5220\u9664\u4F4D\u7F6E%d \u4E0D\u5408\u6CD5!\\n&quot;</span><span class="token punctuation">,</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
ListNode<span class="token operator">*</span> current <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>list<span class="token operator">-&gt;</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u627E\u5230\u8981\u5220\u9664\u7684\u4F4D\u7F6E</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pos<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
current <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8981\u5220\u9664\u7684\u7ED3\u70B9</span>
ListNode<span class="token operator">*</span> delNode <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token comment">//\u5220\u9664\u7ED3\u70B9</span>
current<span class="token operator">-&gt;</span>next <span class="token operator">=</span> delNode<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
list<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> LINK_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> LINK_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u8FD4\u56DE\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> list<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6E05\u7A7A\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">ClearLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
list<span class="token operator">-&gt;</span>header<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
list<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868\u7ED3\u70B9</span>
<span class="token keyword">void</span> <span class="token function">PrintLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> PrintLinkListData print<span class="token punctuation">)</span><span class="token punctuation">{</span>
ListNode<span class="token operator">*</span> current <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>list<span class="token operator">-&gt;</span>header<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">print</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
current <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u6307\u5B9A\u4F4D\u7F6E\u7684\u7ED3\u70B9</span>
ListNode<span class="token operator">*</span> <span class="token function">GetNodeLinkList</span><span class="token punctuation">(</span>LinkList<span class="token operator">*</span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> list<span class="token operator">-&gt;</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F4D\u7F6E%d \u4E0D\u5408\u6CD5!\\n&quot;</span><span class="token punctuation">,</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
ListNode<span class="token operator">*</span> current <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>list<span class="token operator">-&gt;</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pos<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
current <span class="token operator">=</span> current<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> current<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u6D4B\u8BD5\u6587\u4EF6</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkList.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_Teacher</span><span class="token punctuation">{</span>
ListNode node<span class="token punctuation">;</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">PrintTeacher</span><span class="token punctuation">(</span>ListNode<span class="token operator">*</span> node<span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span>node<span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span> teacher<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span> teacher<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6D4B\u8BD5\u94FE\u8868 API</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u8868</span>
LinkList<span class="token operator">*</span> list <span class="token operator">=</span> <span class="token function">InitLinkList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6570\u636E</span>
Teacher t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">;</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
t2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
t3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t3<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u94FE\u8868\u4E2D\u63D2\u5165\u6570\u636E</span>
<span class="token function">InsertLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ListNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">InsertLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ListNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">InsertLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ListNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868\u5185\u5BB9</span>
<span class="token function">PrintLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> PrintTeacher<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5220\u9664\u4F4D\u7F6E 1 \u7684\u7ED3\u70B9</span>
<span class="token function">DeleteLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868\u5185\u5BB9</span>
<span class="token function">PrintLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> PrintTeacher<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u4F4D\u7F6E 1 \u7684\u7ED3\u70B9</span>
Teacher<span class="token operator">*</span> node <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">GetNodeLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F4D\u7F6E 1 \u7ED3\u70B9\u4E3A:\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span> node<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span> node<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token function">DestroyLinkList</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="_4-9-\u5FAA\u73AF\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_4-9-\u5FAA\u73AF\u94FE\u8868" aria-hidden="true">#</a> 4.9 \u5FAA\u73AF\u94FE\u8868</h2><h3 id="_4-9-1-\u5FAA\u73AF\u94FE\u8868\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_4-9-1-\u5FAA\u73AF\u94FE\u8868\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 4.9.1 \u5FAA\u73AF\u94FE\u8868\u57FA\u672C\u6982\u5FF5</h3><p>\u94FE\u8868\u4E2D\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u7684\u6307\u9488\u57DF\u6307\u5411\u5934\u7ED3\u70B9\uFF0C\u6574\u4E2A\u94FE\u8868\u5F62\u6210\u4E00\u4E2A\u73AF\u3002</p><p><img src="`+h+'" alt="image-20220329224855703"></p><h3 id="_4-9-2-\u5FAA\u73AF\u94FE\u8868\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-9-2-\u5FAA\u73AF\u94FE\u8868\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> 4.9.2 \u5FAA\u73AF\u94FE\u8868\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</h3><ul><li><p>\u63D2\u5165\u5143\u7D20\u5206\u6790</p><ul><li>\u666E\u901A\u63D2\u5165\u5143\u7D20(\u548C\u5355\u94FE\u8868\u662F\u4E00\u6837\u7684) <img src="'+L+'" alt="image-20220329224909190"></li><li>\u5C3E\u63D2\u6CD5\uFF08\u548C\u5355\u94FE\u8868\u662F\u4E00\u6837\u7684\uFF0C\u5355\u94FE\u8868\u7684\u5199\u6CD5\u652F\u6301\u5C3E\u63D2\u6CD5\uFF09 <img src="'+w+'" alt="image-20220329224920811"></li></ul></li></ul><p>\u200B <strong>\u5206\u6790\uFF1A\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u7684 next \u6307\u9488\u6307\u5411\u65B0\u6DFB\u52A0\u7684\u7ED3\u70B9\uFF0C\u65B0\u7ED3\u70B9\u7684 next \u6307\u5411\u7B2C\u4E00\u4E2A\u7ED3\u70B9\u3002</strong></p><ul><li>\u5934\u63D2\u6CD5 \u5206\u6790\uFF1A\u65B0\u8282\u70B9\u6307\u5411\u5F53\u524D\u7684\u7B2C\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u5C3E\u7ED3\u70B9\u6307\u5411\u65B0\u8282\u70B9<br><img src="'+f+'" alt="image-20220329224935627"></li><li>\u7B2C\u4E00\u6B21\u63D2\u5165\u8282\u70B9 \u5C3E\u8282\u70B9\u6307\u9488\u6307\u5411\u7B2C\u4E00\u4E2A\u6570\u636E\u8282\u70B9\uFF08\u5373\u81EA\u5DF1\u6307\u5411\u81EA\u5DF1\uFF09</li><li><img src="'+v+'" alt="image-20220329224944097"></li></ul><p><strong>\u5220\u9664\u8282\u70B9\u5206\u6790</strong></p><ul><li><p>\u5220\u9664\u666E\u901A\u8282\u70B9</p><p><img src="'+S+'" alt="image-20220329225128532"></p></li><li><p>\u5220\u9664\u5934\u8282\u70B9</p></li></ul><p>\u200B <img src="'+_+`" alt="image-20220329225141056"></p><p><strong>\u66F4\u65B0 head \u7ED3\u70B9\uFF0C\u5E76\u4E14\u5C3E\u7ED3\u70B9\u91CD\u65B0\u8FDE\u63A5\u65B0\u7684\u5934\u7ED3\u70B9</strong></p><h3 id="_4-9-3-\u5FAA\u73AF\u94FE\u8868\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-9-3-\u5FAA\u73AF\u94FE\u8868\u6848\u4F8B" aria-hidden="true">#</a> 4.9.3 \u5FAA\u73AF\u94FE\u8868\u6848\u4F8B</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5934\u6587\u4EF6 CircleLinkList.h</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">CIRCLELINKLIST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CIRCLELINKLIST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>CIRCLEPRINT<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CIRCLE_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CIRCLE_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_CircleLinkNode</span><span class="token punctuation">{</span>
<span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">_CircleLinkNode</span><span class="token operator">*</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>CircleLinkNode<span class="token punctuation">;</span>
<span class="token comment">//\u94FE\u8868</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_DoubleLinkList</span><span class="token punctuation">{</span>
CircleLinkNode<span class="token operator">*</span> head<span class="token punctuation">;</span> <span class="token comment">//\u5934\u7ED3\u70B9</span>
CircleLinkNode<span class="token operator">*</span> rear<span class="token punctuation">;</span> <span class="token comment">//\u5C3E\u8282\u70B9</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>CircleLinkList<span class="token punctuation">;</span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u521D\u59CB\u5316</span>
CircleLinkNode<span class="token operator">*</span> <span class="token function">CircleLinkList_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u63D2\u5165\u6570\u636E</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u5220\u9664\u6570\u636E</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Delete</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Destroy</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Print</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> CIRCLEPRINT print<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">CircleLinkList_Length</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">CircleLinkList_Length</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6E05\u7A7A\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Clear</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//C \u6587\u4EF6 CircleLinkList.c</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;CircleLinkList.h&quot;</span></span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u521D\u59CB\u5316</span>
CircleLinkNode<span class="token operator">*</span> <span class="token function">CircleLinkList_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u94FE\u8868\u7ED3\u6784\u4F53\u5206\u914D\u5185\u5B58</span>
CircleLinkList<span class="token operator">*</span> dlist <span class="token operator">=</span> <span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>CircleLinkList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u521B\u5EFA\u5934\u7ED3\u70B9 \u521B\u5EFA\u5934\u7ED3\u70B9 \u662F\u4E3A\u4E86\u7A7A\u94FE\u8868\u548C\u975E\u7A7A\u94FE\u8868\u5904\u7406\u4E00\u81F4</span>
CircleLinkNode<span class="token operator">*</span> head <span class="token operator">=</span> <span class="token punctuation">(</span>CircleLinkNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>CircleLinkNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">free</span><span class="token punctuation">(</span>dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
head<span class="token operator">-&gt;</span>data <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
head<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u8868</span>
dlist<span class="token operator">-&gt;</span>head <span class="token operator">=</span> head<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear <span class="token operator">=</span> head<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> dlist<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u63D2\u5165\u6570\u636E</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist <span class="token operator">==</span> <span class="token constant">NULL</span> <span class="token operator">||</span> data <span class="token operator">==</span> <span class="token constant">NULL</span> <span class="token operator">||</span> pos <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> dlist<span class="token operator">-&gt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
pos <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8F85\u52A9\u6307\u9488</span>
CircleLinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pos<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u521B\u5EFA\u65B0\u8282\u70B9</span>
CircleLinkNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token punctuation">(</span>CircleLinkNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>CircleLinkNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>newnode <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
newnode<span class="token operator">-&gt;</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//\u5C06\u65B0\u7ED3\u70B9\u63D2\u5165\u5230\u94FE\u8868\u4E2D</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
pCurrent<span class="token operator">-&gt;</span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u662F\u5426\u5728\u5C3E\u90E8\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pCurrent <span class="token operator">==</span> dlist<span class="token operator">-&gt;</span>rear<span class="token punctuation">)</span><span class="token punctuation">{</span>
dlist<span class="token operator">-&gt;</span>rear <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear<span class="token operator">-&gt;</span>next <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
dlist<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5FAA\u73AF\u94FE\u8868\u5220\u9664\u6570\u636E</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Delete</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist <span class="token operator">==</span> <span class="token constant">NULL</span> <span class="token operator">||</span> pos <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;=</span> dlist<span class="token operator">-&gt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u8D4B\u503C\u6307\u9488</span>
CircleLinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pos<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7F13\u5B58\u88AB\u5220\u9664\u7ED3\u70B9</span>
CircleLinkNode<span class="token operator">*</span> pDel <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token comment">//\u91CD\u65B0\u5EFA\u7ACB\u524D\u540E\u7ED3\u70B9\u5173\u7CFB</span>
pCurrent<span class="token operator">-&gt;</span>next <span class="token operator">=</span> pDel<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token comment">//\u91CA\u653E\u88AB\u5220\u9664\u7ED3\u70B9\u5185\u5B58</span>
<span class="token function">free</span><span class="token punctuation">(</span>pDel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u94FE\u8868\u7ED3\u70B9\u6570\u91CF\u51CF 1</span>
dlist<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Print</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> CIRCLEPRINT print<span class="token punctuation">)</span><span class="token punctuation">{</span>
CircleLinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent <span class="token operator">!=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">print</span><span class="token punctuation">(</span>pCurrent<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Destroy</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
CircleLinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent<span class="token operator">!=</span>dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u7F13\u5B58\u88AB\u5220\u9664\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
CircleLinkNode<span class="token operator">*</span> pNext <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token function">free</span><span class="token punctuation">(</span>pCurrent<span class="token punctuation">)</span><span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pNext<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">free</span><span class="token punctuation">(</span>dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">CircleLinkList_Length</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> dlist<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">CircleLinkList_Length</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> CIRCLE_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> CIRCLE_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u6E05\u7A7A\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">CircleLinkList_Clear</span><span class="token punctuation">(</span>CircleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
CircleLinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent <span class="token operator">!=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>
CircleLinkNode<span class="token operator">*</span> pNext <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token function">free</span><span class="token punctuation">(</span>pCurrent<span class="token punctuation">)</span><span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pNext<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
dlist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br></div></div><ul><li>\u6D4B\u8BD5\u6587\u4EF6</li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;CircleLinkList.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_Teacher</span><span class="token punctuation">{</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token keyword">double</span> salary<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u56DE\u8C03\u51FD\u6570</span>
<span class="token keyword">void</span> <span class="token function">ShowLinkList</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span>data<span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;age:%d salay:%f \\n&quot;</span><span class="token punctuation">,</span> t<span class="token operator">-&gt;</span>age<span class="token punctuation">,</span> t<span class="token operator">-&gt;</span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u5FAA\u73AF\u94FE\u8868</span>
CircleLinkList<span class="token operator">*</span> clist <span class="token operator">=</span> <span class="token function">CircleLinkList_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6D4B\u8BD5\u6570\u636E</span>
Teacher t1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200.0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Teacher t2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">300.0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Teacher t3 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">400.0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u5FAA\u73AF\u94FE\u8868\u4E2D\u63D2\u5165\u6570\u636E</span>
<span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868</span>
<span class="token function">CircleLinkList_Print</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> ShowLinkList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5220\u9664\u94FE\u8868\u7ED3\u70B9</span>
<span class="token function">CircleLinkList_Delete</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">CircleLinkList_Print</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> ShowLinkList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token function">CircleLinkList_Destroy</span><span class="token punctuation">(</span>clist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="_4-9-4-\u5FAA\u73AF\u94FE\u8868\u5E94\u7528-\u7EA6\u745F\u592B\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_4-9-4-\u5FAA\u73AF\u94FE\u8868\u5E94\u7528-\u7EA6\u745F\u592B\u95EE\u9898" aria-hidden="true">#</a> 4.9.4 \u5FAA\u73AF\u94FE\u8868\u5E94\u7528(\u7EA6\u745F\u592B\u95EE\u9898)</h3><ul><li>\u7EA6\u745F\u592B\u95EE\u9898-\u5FAA\u73AF\u94FE\u8868\u5178\u578B\u5E94\u7528</li></ul><p>**\u4F8B\u9898\uFF1A**n \u4E2A\u4EBA\u56F4\u6210\u4E00\u4E2A\u5706\u5708\uFF0C\u9996\u5148\u7B2C 1 \u4E2A\u4EBA\u4ECE 1 \u5F00\u59CB\u4E00\u4E2A\u4EBA\u4E00\u4E2A\u4EBA\u987A\u65F6\u9488\u62A5\u6570\uFF0C\u62A5</p><p>\u5230\u7B2C m \u4E2A\u4EBA\uFF0C\u4EE4\u5176\u51FA\u5217\u3002\u7136\u540E\u518D\u4ECE\u4E0B\u4E00 \u4E2A\u4EBA\u5F00\u59CB\u4ECE 1 \u987A\u65F6\u9488\u62A5\u6570\uFF0C\u62A5\u5230\u7B2C m \u4E2A\u4EBA\uFF0C</p><p>\u518D\u4EE4\u5176\u51FA\u5217\uFF0C\u2026\uFF0C\u5982\u6B64\u4E0B\u53BB\uFF0C\u6C42\u51FA\u5217\u987A\u5E8F\u3002</p><p><strong>\u5047\u8BBE\uFF1A</strong> m = 8\uFF0Cn=3</p><p><img src="`+q+`" alt="image-20220329225242298"></p><p><strong>\u5B9E\u73B0\u4EE3\u7801(\u901A\u8FC7\u6211\u4EEC\u81EA\u5DF1\u7F16\u5199\u7684\u5FAA\u73AF\u94FE\u8868\u5E93):</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;CircleLinkList.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_Teacher</span><span class="token punctuation">{</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token keyword">double</span> salary<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u56DE\u8C03\u51FD\u6570</span>
<span class="token keyword">void</span> <span class="token function">ShowLinkList</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span>data<span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;age:%d salay:%f \\n&quot;</span><span class="token punctuation">,</span> t<span class="token operator">-&gt;</span>age<span class="token punctuation">,</span> t<span class="token operator">-&gt;</span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">ShowData</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7EA6\u745F\u592B\u95EE\u9898</span>
<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//m \u8868\u793A 8 \u4E2A\u4EBA n \u8868\u793A\u7B2C\u51E0\u4E2A\u51FA\u5217</span>
<span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u5FAA\u73AF\u94FE\u8868</span>
CircleLinkList<span class="token operator">*</span> clist <span class="token operator">=</span> <span class="token function">CircleLinkList_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">CircleLinkList_Insert</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6253\u5370\u5FAA\u73AF\u94FE\u8868</span>
<span class="token function">CircleLinkList_Print</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> ShowData<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
CircleLinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> clist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>pCurrent<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u7F13\u5B58\u5220\u9664\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
CircleLinkNode<span class="token operator">*</span> pNext <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pNext <span class="token operator">==</span> clist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>
pNext <span class="token operator">=</span> pNext<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">CircleLinkList_DeleteByValue</span><span class="token punctuation">(</span>clist<span class="token punctuation">,</span> pCurrent<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pNext<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CircleLinkList_Length</span><span class="token punctuation">(</span>clist<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>pCurrent<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pCurrent <span class="token operator">==</span> clist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
index<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token function">CircleLinkList_Destroy</span><span class="token punctuation">(</span>clist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//test01();</span>
<span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><h3 id="_4-9-5-\u4F18\u7F3A\u70B9\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-9-5-\u4F18\u7F3A\u70B9\u5206\u6790" aria-hidden="true">#</a> 4.9.5 \u4F18\u7F3A\u70B9\u5206\u6790</h3><ul><li><p>\u4F18\u70B9</p><ul><li><p>\u529F\u80FD\u589E\u5F3A\u4E86\uFF08\u5FAA\u73AF\u94FE\u8868\u53EA\u662F\u5728\u5355\u94FE\u8868\u7684\u57FA\u7840\u4E0A\u505A\u4E86\u4E00\u4E2A\u52A0\u5F3A\uFF09</p></li><li><p>\u5FAA\u73AF\u94FE\u8868\u53EF\u4EE5\u5B8C\u5168\u53D6\u4EE3\u5355\u94FE\u8868\u7684\u4F7F\u7528</p></li><li><p>\u5FAA\u73AF\u94FE\u8868\u7684 Next \u548C Current \u64CD\u4F5C\u53EF\u4EE5\u9AD8\u6548\u7684\u904D\u5386\u94FE\u8868\u4E2D\u7684\u6240\u6709\u5143\u7D20</p></li></ul></li><li><p>\u7F3A\u70B9</p><ul><li>\u4EE3\u7801\u590D\u6742\u5EA6\u63D0\u9AD8\u4E86\uFF08\u6210\u4E5F\u8427\u4F55\u8D25\u8427\u4F55\uFF09</li></ul></li></ul><h1 id="_5-\u53CC\u5411\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_5-\u53CC\u5411\u94FE\u8868" aria-hidden="true">#</a> 5.\u53CC\u5411\u94FE\u8868</h1><h2 id="_5-1-\u53CC\u5411\u94FE\u8868\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_5-1-\u53CC\u5411\u94FE\u8868\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 5.1 \u53CC\u5411\u94FE\u8868\u57FA\u672C\u6982\u5FF5</h2><p><strong>\u8BF7\u601D\u8003</strong>\uFF1A \u4E3A\u4EC0\u4E48<strong>\u9700\u8981</strong>\u53CC\u5411\u94FE\u8868\uFF1F</p><ul><li><p>\u5355\u94FE\u8868\u7684\u7ED3\u70B9\u90FD\u53EA\u6709\u4E00\u4E2A\u6307\u5411\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u7684\u6307\u9488</p></li><li><p>\u5355\u94FE\u8868\u7684\u6570\u636E\u5143\u7D20\u65E0\u6CD5\u76F4\u63A5\u8BBF\u95EE\u5176\u524D\u9A71\u5143\u7D20</p></li><li><p><strong>\u9006\u5E8F\u8BBF\u95EE\u5355\u94FE\u8868</strong>\u4E2D\u7684\u5143\u7D20\u662F\u6781\u5176<strong>\u8017\u65F6</strong>\u7684\u64CD\u4F5C\uFF01</p></li></ul><p>\u53CC\u5411\u94FE\u8868\u7684\u5B9A\u4E49</p><p>\u5728\u5355\u94FE\u8868\u7684\u7ED3\u70B9\u4E2D\u589E\u52A0\u4E00\u4E2A\u6307\u5411\u5176\u524D\u9A71\u7684 pre \u6307\u9488\u3002</p><p><img src="`+C+'" alt="image-20220329225309023"></p><h2 id="_5-2\u53CC\u5411\u94FE\u8868\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_5-2\u53CC\u5411\u94FE\u8868\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> 5.2\u53CC\u5411\u94FE\u8868\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</h2><ul><li>\u63D2\u5165\u64CD\u4F5C <ul><li>\u5728\u666E\u901A\u4F4D\u7F6E\u63D2\u5165\u8282\u70B9</li></ul></li></ul><p><img src="'+x+`" alt="image-20220329225319051"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>current<span class="token operator">-&gt;</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
node<span class="token operator">-&gt;</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
next<span class="token operator">-&gt;</span>pre <span class="token operator">=</span> node<span class="token punctuation">;</span>
node<span class="token operator">-&gt;</span>pre <span class="token operator">=</span> current<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><ul><li>\u5728\u7A7A\u94FE\u8868\u4E2D\u63D2\u5165\u8282\u70B9</li></ul></li></ul><p><img src="`+N+'" alt="image-20220329225327634"></p><p><strong>\u63D2\u5165\u64CD\u4F5C\u5F02\u5E38\u5904\u7406</strong></p><ul><li><strong>\u5728\u7A7A\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u7684\u5143\u7D20</strong></li></ul><p><strong>\u7A7A\u8282\u70B9\uFF08NULL\uFF09\u6CA1\u6709\u524D\u9A71\u6307\u9488\uFF1B</strong></p><p><strong>\u65B0\u8282\u70B9\u7684\u524D\u9A71\u6307\u9488\uFF0C\u9700\u8981\u6307\u5411 NULL</strong>\uFF1B</p><p>\u5220\u9664\u64CD\u4F5C</p><p><img src="'+A+`" alt="image-20220329225336931"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>current<span class="token operator">-&gt;</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
next<span class="token operator">-&gt;</span>pre <span class="token operator">=</span> current<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u5220\u9664\u64CD\u4F5C\u5F02\u5E38\u5904\u7406\uFF1A\u5F53\u53CC\u5411\u94FE\u8868\u4EC5\u6709\u4E00\u4E2A\u8282\u70B9\u7684\u65F6\u5019</strong></p><p><img src="`+E+`" alt="image-20220329225347292"></p><p><strong>\u5982\u679C\u8F85\u52A9\u6307\u9488\u53D8\u91CF pNext == NULL\uFF0C\u90A3\u4E48pNext \u662F\u6CA1\u6709\u524D\u9A71\u64CD\u4F5C\u7684\u3002\u7A7A\u6307\u9488\u65E2\u6CA1\u6709\u524D\u9A71\u4E5F\u6CA1\u6709\u540E\u7EE7\u3002</strong></p><h2 id="_5-3\u53CC\u5411\u94FE\u8868\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_5-3\u53CC\u5411\u94FE\u8868\u6848\u4F8B" aria-hidden="true">#</a> 5.3\u53CC\u5411\u94FE\u8868\u6848\u4F8B</h2><p>DoubleLinkList.h</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DOUBLELINKLIST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DOUBLELINKLIST_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DOUBLE_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DOUBLE_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token comment">//\u94FE\u8868\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_DOUBLELISTNODE</span><span class="token punctuation">{</span>
<span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">_DOUBLELISTNODE</span><span class="token operator">*</span> next<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">_DOUBLELISTNODE</span><span class="token operator">*</span> prev<span class="token punctuation">;</span>
<span class="token punctuation">}</span>DoubleListNode<span class="token punctuation">;</span>
<span class="token comment">//\u5934\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_DOUBLELINKLIST</span><span class="token punctuation">{</span>
DoubleListNode<span class="token operator">*</span> head<span class="token punctuation">;</span> <span class="token comment">//\u9996\u7ED3\u70B9</span>
DoubleListNode<span class="token operator">*</span> rear<span class="token punctuation">;</span> <span class="token comment">//\u5C3E\u7ED3\u70B9</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span> <span class="token comment">//\u94FE\u8868\u957F\u5EA6</span>
<span class="token punctuation">}</span>DoubleLinkList<span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u56DE\u8C03\u51FD\u6570</span>
<span class="token keyword">typedef</span> <span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>PrintDoubleLinkListNode<span class="token punctuation">)</span><span class="token punctuation">(</span>DoubleListNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u53CC\u5411\u94FE\u8868\u521D\u59CB\u5316</span>
DoubleLinkList<span class="token operator">*</span> <span class="token function">InitDoubleLinkList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u53CC\u5411\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">DestroyDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u94FE\u8868\u4E2D\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">InsertDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">PrintDoubleListNode</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> PrintDoubleLinkListNode<span class="token operator">*</span> print<span class="token punctuation">,</span><span class="token keyword">int</span>
IsReverse<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>DoubleLinkList.c</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;DoubleLinkList.h&quot;</span></span>
<span class="token comment">//\u53CC\u5411\u94FE\u8868\u521D\u59CB\u5316</span>
DoubleLinkList<span class="token operator">*</span> <span class="token function">InitDoubleLinkList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
DoubleLinkList<span class="token operator">*</span> dlist <span class="token operator">=</span> <span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>DoubleLinkList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
dlist<span class="token operator">-&gt;</span>head <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> dlist<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u53CC\u5411\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">DestroyDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5411\u94FE\u8868\u4E2D\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">InsertDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u65B0\u7684\u7ED3\u70B9</span>
DoubleListNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token punctuation">(</span>DoubleListNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>DoubleListNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//\u7B2C\u4E00\u6B21\u63D2\u5165</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>dlist<span class="token operator">-&gt;</span>head <span class="token operator">==</span> <span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span> dlist<span class="token operator">-&gt;</span>rear <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
dlist<span class="token operator">-&gt;</span>head <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316 head \u7ED3\u70B9\u524D\u9A71\u548C\u540E\u7EE7\u7ED3\u70B9</span>
dlist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316 rear \u7ED3\u70B9\u7684\u524D\u9A71\u548C\u540E\u7EE7\u7ED3\u70B9</span>
dlist<span class="token operator">-&gt;</span>rear<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5934\u63D2\u6CD5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>head <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5C3E\u5DEE\u6CD5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;=</span> dlist<span class="token operator">-&gt;</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
dlist<span class="token operator">-&gt;</span>rear<span class="token operator">-&gt;</span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>rear<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>rear <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5176\u4ED6\u63D2\u5165</span>
DoubleListNode<span class="token operator">*</span> pPrev <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
DoubleListNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> pPrev<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pos<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
pPrev <span class="token operator">=</span> pCurrent<span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pPrev<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> pCurrent<span class="token punctuation">;</span>
pCurrent<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
pPrev<span class="token operator">-&gt;</span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> pPrev<span class="token punctuation">;</span>
dlist<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6253\u5370\u94FE\u8868</span>
<span class="token keyword">void</span> <span class="token function">PrintDoubleListNode</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">,</span> PrintDoubleLinkListNode print<span class="token punctuation">,</span> <span class="token keyword">int</span>
IsReverse<span class="token punctuation">)</span><span class="token punctuation">{</span>
DoubleListNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//true \u8868\u793A \u9006\u5E8F\u904D\u5386</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>IsReverse <span class="token operator">==</span> DOUBLE_TRUE<span class="token punctuation">)</span><span class="token punctuation">{</span>
pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>rear<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">print</span><span class="token punctuation">(</span>pCurrent<span class="token punctuation">)</span><span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>prev<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span><span class="token punctuation">{</span>
pCurrent <span class="token operator">=</span> dlist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">print</span><span class="token punctuation">(</span>pCurrent<span class="token punctuation">)</span><span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u94FE\u8868\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> dlist<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyDoubleLinkList</span><span class="token punctuation">(</span>DoubleLinkList<span class="token operator">*</span> dlist<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> DOUBLE_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div><p>\u6D4B\u8BD5\u6587\u4EF6</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;DoubleLinkList.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_TEAHCER</span><span class="token punctuation">{</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">PrintNode</span><span class="token punctuation">(</span>DoubleListNode<span class="token operator">*</span> node<span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>node<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6D4B\u8BD5\u53CC\u5411\u94FE\u8868\u51FD\u6570</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u53CC\u5411\u94FE\u8868</span>
DoubleLinkList<span class="token operator">*</span> dlist <span class="token operator">=</span> <span class="token function">InitDoubleLinkList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6570\u636E</span>
Teacher t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">;</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
t2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
t3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t3<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u63D2\u5165\u6570\u636E</span>
<span class="token function">InsertDoubleLinkList</span><span class="token punctuation">(</span>dlist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">InsertDoubleLinkList</span><span class="token punctuation">(</span>dlist<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">InsertDoubleLinkList</span><span class="token punctuation">(</span>dlist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u6570\u636E</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;----------\u6B63\u5411\u904D\u5386----------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PrintDoubleListNode</span><span class="token punctuation">(</span>dlist<span class="token punctuation">,</span> PrintNode<span class="token punctuation">,</span> DOUBLE_FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;----------\u9006\u5E8F\u904D\u5386----------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PrintDoubleListNode</span><span class="token punctuation">(</span>dlist<span class="token punctuation">,</span> PrintNode<span class="token punctuation">,</span>DOUBLE_TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="_5-4-\u4F18\u70B9\u548C\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_5-4-\u4F18\u70B9\u548C\u7F3A\u70B9" aria-hidden="true">#</a> 5.4 \u4F18\u70B9\u548C\u7F3A\u70B9</h2><p><strong>\u4F18\u70B9\uFF1A</strong></p><ul><li><p>\u53CC\u5411\u94FE\u8868\u5728\u5355\u94FE\u8868\u7684\u57FA\u7840\u4E0A\u589E\u52A0\u4E86\u6307\u5411\u524D\u9A71\u7684\u6307\u9488</p></li><li><p>\u529F\u80FD\u4E0A\u53CC\u5411\u94FE\u8868\u53EF\u4EE5\u5B8C\u5168\u53D6\u4EE3\u5355\u94FE\u8868\u7684\u4F7F\u7528</p></li><li><p>\u53CC\u5411\u94FE\u8868\u7684 Next\uFF0CPre \u548C Current \u64CD\u4F5C\u53EF\u4EE5\u9AD8\u6548\u7684\u904D\u5386\u94FE\u8868\u4E2D\u7684\u6240\u6709\u5143\u7D20</p></li></ul><p><strong>\u7F3A\u70B9\uFF1A</strong></p><ul><li>\u4EE3\u7801\u590D\u6742</li></ul><h1 id="_6-\u53D7\u9650\u7EBF\u6027\u8868" tabindex="-1"><a class="header-anchor" href="#_6-\u53D7\u9650\u7EBF\u6027\u8868" aria-hidden="true">#</a> 6.\u53D7\u9650\u7EBF\u6027\u8868</h1><h2 id="_6-1\u6808-stack" tabindex="-1"><a class="header-anchor" href="#_6-1\u6808-stack" aria-hidden="true">#</a> 6.1\u6808(Stack)</h2><h3 id="_6-1-1-\u6808\u7684\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_6-1-1-\u6808\u7684\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 6.1.1 \u6808\u7684\u57FA\u672C\u6982\u5FF5</h3><ul><li>\u6982\u5FF5\uFF1A</li></ul><p>\u9996\u5148\u5B83\u662F\u4E00\u4E2A\u7EBF\u6027\u8868\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6808\u5143\u7D20\u5177\u6709\u7EBF\u6027\u5173\u7CFB\uFF0C\u5373\u524D\u9A71\u540E\u7EE7\u5173\u7CFB\u3002\u53EA\u4E0D\u8FC7<strong>\u5B83\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7EBF\u6027\u8868</strong>\u800C\u5DF2\u3002\u5B9A\u4E49\u4E2D\u8BF4\u662F\u5728\u7EBF\u6027\u8868\u7684\u8868\u5C3E\u8FDB\u884C\u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C\uFF0C\u8FD9\u91CC\u8868\u5C3E\u662F\u6307\u6808\u9876\uFF0C\u800C\u4E0D\u662F\u6808\u5E95\u3002</p><ul><li>\u7279\u6027</li></ul><p><strong>\u5B83\u7684\u7279\u6B8A\u4E4B\u5904\u5728\u4E8E\u9650\u5236\u4E86\u8FD9\u4E2A\u7EBF\u6027\u8868\u7684\u63D2\u5165\u548C\u5220\u9664\u7684\u4F4D\u7F6E\uFF0C\u5B83\u59CB\u7EC8\u53EA\u5728\u6808\u9876\u8FDB\u884C\u3002\u8FD9\u4E5F\u5C31\u4F7F\u5F97\uFF1A\u6808\u5E95\u662F\u56FA\u5B9A\u7684\uFF0C\u6700\u5148\u8FDB\u6808\u7684\u53EA\u80FD\u5728\u6808\u5E95\u3002</strong></p><ul><li>\u64CD\u4F5C <ul><li>\u6808\u7684\u63D2\u5165\u64CD\u4F5C\uFF0C\u53EB\u505A\u8FDB\u6808\uFF0C\u4E5F\u6210\u538B\u6808\u3002\u7C7B\u4F3C\u5B50\u5F39\u5165\u5F39\u5939\uFF08\u5982\u4E0B\u56FE\u6240\u793A\uFF09</li><li>\u6808\u7684\u5220\u9664\u64CD\u4F5C\uFF0C\u53EB\u505A\u51FA\u6808\uFF0C\u4E5F\u6709\u7684\u53EB\u505A\u5F3E\u6808\uFF0C\u9000\u6808\u3002\u5982\u540C\u5F39\u5939\u4E2D\u7684\u5B50\u5F39\u51FA\u5939\uFF08\u5982\u4E0B\u56FE\u6240\u793A\uFF09</li></ul></li></ul><p><img src="`+U+`" alt="image-20220329225444126"></p><p>\u6808\u7684\u62BD\u8C61\u6570\u636E\u7C7B\u578B</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//ADT \u6808\uFF08stack\uFF09</span>
Data
\u901A\u7EBF\u6027\u8868\u3002\u5143\u7D20\u5177\u6709\u76F8\u540C\u7684\u7C7B\u578B\uFF0C\u76F8\u90BB\u7684\u5143\u7D20\u5177\u6709\u524D\u9A71\u548C\u540E\u7EE7\u5173\u7CFB\u3002
Operation
<span class="token comment">// \u521D\u59CB\u5316\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u7A7A\u6808 S</span>
<span class="token function">InitStack</span><span class="token punctuation">(</span><span class="token operator">*</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u6808\u5B58\u5728\uFF0C\u5219\u9500\u6BC1\u5B83</span>
<span class="token function">DestroyStack</span><span class="token punctuation">(</span><span class="token operator">*</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5C06\u6808\u6E05\u7A7A</span>
<span class="token function">ClearStack</span><span class="token punctuation">(</span><span class="token operator">*</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u6808\u4E3A\u7A7A\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false</span>
<span class="token function">StackEmpty</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u6808\u5B58\u5728\u4E14\u975E\u7A7A\uFF0C\u7528 e \u8FD4\u56DE S \u7684\u6808\u9876\u5143\u7D20</span>
<span class="token function">GetTop</span><span class="token punctuation">(</span>S\uFF0C<span class="token operator">*</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u6808 S \u5B58\u5728\uFF0C\u63D2\u5165\u65B0\u5143\u7D20 e \u5230\u6808 S \u4E2D\u5E76\u6210\u4E3A\u5176\u6808\u9876\u5143\u7D20</span>
<span class="token function">Push</span><span class="token punctuation">(</span><span class="token operator">*</span>S\uFF0Ce<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5220\u9664\u6808 S \u4E2D\u7684\u6808\u9876\u5143\u7D20\uFF0C\u5E76\u7528 e \u8FD4\u56DE\u5176\u503C</span>
Pop\uFF08<span class="token operator">*</span>S<span class="token punctuation">,</span> <span class="token operator">*</span>e\uFF09<span class="token punctuation">;</span>
<span class="token comment">// \u8FD4\u56DE\u6808 S \u7684\u5143\u7D20\u4E2A\u6570</span>
<span class="token function">StackLength</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>
endADT
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><img src="`+Q+`" alt="image-20220329225458310"></p><h3 id="_6-1-2\u6808\u7684\u987A\u5E8F\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_6-1-2\u6808\u7684\u987A\u5E8F\u5B58\u50A8" aria-hidden="true">#</a> 6.1.2\u6808\u7684\u987A\u5E8F\u5B58\u50A8</h3><ul><li>\u57FA\u672C\u6982\u5FF5</li></ul><p>\u6808\u7684\u987A\u5E8F\u5B58\u50A8\u7ED3\u6784\u7B80\u79F0\u987A\u5E8F\u6808\uFF0C\u5B83\u662F\u8FD0\u7B97\u53D7\u9650\u5236\u7684\u987A\u5E8F\u8868\u3002\u987A\u5E8F\u6808\u7684\u5B58\u50A8\u7ED3\u6784\u662F\uFF1A<strong>\u5229\u7528\u4E00\u7EC4\u5730\u5740\u8FDE\u7EED\u7684\u7684\u5B58\u50A8\u5355\u5143\u4F9D\u6B21\u5B58\u653E\u81EA\u6808\u5E95\u5230\u6808\u9876\u7684\u6570\u636E\u5143\u7D20</strong>\uFF0C\u540C\u65F6\u9644\u8BBE\u6307\u9488top\u53EA\u662F\u6808\u9876\u5143\u7D20\u5728\u987A\u5E8F\u8868\u4E2D\u7684\u4F4D\u7F6E\u3002</p><ul><li>\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</li></ul><p><strong>\u56E0\u4E3A\u6808\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7EBF\u6027\u8868\uFF0C\u6240\u4EE5\u6808\u7684\u987A\u5E8F\u5B58\u50A8\u53EF\u4EE5\u901A\u8FC7\u987A\u5E8F\u7EBF\u6027\u8868\u6765\u5B9E\u73B0\u3002</strong></p><p>//SqStack.h</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">SQSTACK_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SQSTACK_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">STACK_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">STACK_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">256</span></span></span>
<span class="token comment">//\u6808\u7ED3\u6784\u4F53</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_SQSTACK</span><span class="token punctuation">{</span>
<span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">[</span>MAX<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>SqStack<span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u987A\u5E8F\u6808</span>
SqStack<span class="token operator">*</span> <span class="token function">InitSqStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u6808</span>
<span class="token keyword">void</span> <span class="token function">DestroySqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5F39\u51FA\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">PopSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">TopSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u6808\u4E2D\u5143\u7D20\u4E2A\u6570</span>
<span class="token keyword">int</span> <span class="token function">GetLengthSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6808\u4E2D\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptySqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u6808\u4E2D\u6DFB\u52A0\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">PushSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>//SqStack.c</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;SqStack.h&quot;</span></span>
<span class="token comment">//\u521D\u59CB\u5316\u987A\u5E8F\u6808</span>
SqStack<span class="token operator">*</span> <span class="token function">InitSqStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
SqStack<span class="token operator">*</span> stack <span class="token operator">=</span> <span class="token punctuation">(</span>SqStack<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>SqStack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>stack <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u521D\u59CB\u5316</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> MAX<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
stack<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
stack<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> stack<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u6808</span>
<span class="token keyword">void</span> <span class="token function">DestroySqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">!=</span> stack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">free</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
stack <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token comment">//\u5F39\u51FA\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">PopSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">{</span>
stack<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>stack<span class="token operator">-&gt;</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
stack<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">TopSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> stack<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>stack<span class="token operator">-&gt;</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u6808\u4E2D\u5143\u7D20\u4E2A\u6570</span>
<span class="token keyword">int</span> <span class="token function">GetLengthSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> stack<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6808\u4E2D\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptySqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>stack<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> STACK_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> STACK_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u5411\u6808\u4E2D\u6DFB\u52A0\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">PushSqStack</span><span class="token punctuation">(</span>SqStack<span class="token operator">*</span> stack<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>stack<span class="token operator">-&gt;</span>length <span class="token operator">&gt;</span> MAX<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
stack<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>stack<span class="token operator">-&gt;</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
stack<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>\u6D4B\u8BD5\u6587\u4EF6</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;SqStack.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_TEAHCER</span><span class="token punctuation">{</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u7A7A\u6808</span>
SqStack<span class="token operator">*</span> stack <span class="token operator">=</span> <span class="token function">InitSqStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6570\u636E</span>
Teacher t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">;</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
t2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
t3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t3<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u6808\u4E2D\u6DFB\u52A0\u5143\u7D20</span>
<span class="token function">PushSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u6808\u4E2D\u5143\u7D20\u4E2A\u6570</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6808\u5143\u7D20\u4E2A\u6570:%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">GetLengthSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u904D\u5386\u6808\u4E2D\u5143\u7D20</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">GetLengthSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">TopSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PopSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6253\u5370\u6808\u4E2D\u5143\u7D20\u4E2A\u6570</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6808\u5143\u7D20\u4E2A\u6570:%d\\n&quot;</span><span class="token punctuation">,</span><span class="token function">GetLengthSqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u6808</span>
<span class="token function">DestroySqStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h3 id="_6-1-3\u6808\u7684\u94FE\u5F0F\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_6-1-3\u6808\u7684\u94FE\u5F0F\u5B58\u50A8" aria-hidden="true">#</a> 6.1.3\u6808\u7684\u94FE\u5F0F\u5B58\u50A8</h3><ul><li>\u57FA\u672C\u6982\u5FF5</li></ul><p>\u6808\u7684\u94FE\u5F0F\u5B58\u50A8\u7ED3\u6784\u7B80\u79F0\u94FE\u6808\u3002</p><p><strong>\u601D\u8003\u5982\u4E0B\u95EE\u9898</strong>\uFF1A</p><p>\u200B \u6808\u53EA\u662F\u6808\u9876\u6765\u505A\u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C\uFF0C\u6808\u9876\u653E\u5728\u94FE\u8868\u7684\u5934\u90E8\u8FD8\u662F\u5C3E\u90E8\u5462\uFF1F</p><p>\u7531\u4E8E\u5355\u94FE\u8868\u6709\u5934\u6307\u9488\uFF0C\u800C\u6808\u9876\u6307\u9488\u4E5F\u662F\u5FC5\u987B\u7684\uFF0C\u90A3\u5E72\u561B\u4E0D\u8BA9\u4ED6\u4FE9\u5408\u4E8C\u4E3A\u4E00\u5462\uFF0C\u6240\u4EE5\u6BD4\u8F83\u597D\u7684\u529E\u6CD5\u5C31\u662F\u628A\u6808\u9876\u653E\u5728\u5355\u94FE\u8868\u7684\u5934\u90E8\u3002\u53E6\u5916\u90FD\u5DF2\u7ECF\u6709\u4E86\u6808\u9876\u5728\u5934\u90E8\u4E86\uFF0C\u5355\u94FE\u8868\u4E2D\u6BD4\u8F83\u5E38\u7528\u7684\u5934\u7ED3\u70B9\u4E5F\u5C31\u5931\u53BB\u4E86\u610F\u4E49\uFF0C\u901A\u5E38\u5BF9\u4E8E\u94FE\u6808\u6765\u8BF4\uFF0C\u662F\u4E0D\u9700\u8981\u5934\u7ED3\u70B9\u7684\u3002</p><ul><li>\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</li></ul><p>\u94FE\u6808\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7EBF\u6027\u8868\uFF0C\u94FE\u6808\u53EF\u4EE5\u901A\u8FC7\u94FE\u5F0F\u7EBF\u6027\u8868\u6765\u5B9E\u73B0\u3002</p><p>//LinkStack.h</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">LINKSTACK_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LINKSTACK_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">STACK_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">STACK_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token comment">//\u94FE\u6808\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_LINKNODE</span><span class="token punctuation">{</span>
<span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">_LINKNODE</span><span class="token operator">*</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>LinkNode<span class="token punctuation">;</span>
<span class="token comment">//\u5934\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_LINKSTACK</span><span class="token punctuation">{</span>
LinkNode<span class="token operator">*</span> head<span class="token punctuation">;</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>LinkStack<span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u6808</span>
LinkStack<span class="token operator">*</span> <span class="token function">InitLinkStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u6808</span>
<span class="token keyword">void</span> <span class="token function">DestroyLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">TopLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5F39\u51FA\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">PopLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u6808\u5143\u7D20\u4E2A\u6570</span>
<span class="token keyword">int</span> <span class="token function">GetLengthLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u6808\u4E2D\u52A0\u5165\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">PushLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u6808\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>//LinkStack.c</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkStack.h&quot;</span></span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u6808</span>
LinkStack<span class="token operator">*</span> <span class="token function">InitLinkStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
LinkStack<span class="token operator">*</span> lstack <span class="token operator">=</span> <span class="token punctuation">(</span>LinkStack<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LinkStack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lstack <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u521D\u59CB\u5316</span>
lstack<span class="token operator">-&gt;</span>head <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
lstack<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> lstack<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u6808</span>
<span class="token keyword">void</span> <span class="token function">DestroyLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmptyLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">PopLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">free</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">TopLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> lstack<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5F39\u51FA\u6808\u9876\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">PopLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lstack<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u7F13\u5B58\u8981\u5220\u9664\u7684\u7ED3\u70B9</span>
LinkNode<span class="token operator">*</span> pDel <span class="token operator">=</span> lstack<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token comment">//\u5C06\u88AB\u5220\u9664\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u4F5C\u4E3A head \u7ED3\u70B9</span>
lstack<span class="token operator">-&gt;</span>head <span class="token operator">=</span> pDel<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token comment">//\u91CA\u653E\u88AB\u5220\u9664\u7ED3\u70B9\u5185\u5B58</span>
<span class="token function">free</span><span class="token punctuation">(</span>pDel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u7ED3\u70B9\u6570\u91CF\u51CF 1</span>
lstack<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u6808\u5143\u7D20\u4E2A\u6570</span>
<span class="token keyword">int</span> <span class="token function">GetLengthLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> lstack<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5411\u6808\u4E2D\u52A0\u5165\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">PushLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u7ED3\u70B9</span>
LinkNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token punctuation">(</span>LinkNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LinkNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//\u662F\u5426\u7B2C\u4E00\u6B21\u63D2\u5165\u5143\u7D20</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lstack<span class="token operator">-&gt;</span>head <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
lstack<span class="token operator">-&gt;</span>head <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
lstack<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5176\u4ED6\u63D2\u5165\u60C5\u51B5</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> lstack<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
lstack<span class="token operator">-&gt;</span>head <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
lstack<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u6808\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyLinkStack</span><span class="token punctuation">(</span>LinkStack<span class="token operator">*</span> lstack<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lstack<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> STACK_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> STACK_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p>\u6D4B\u8BD5\u6587\u4EF6</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkStack.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_TEAHCER</span><span class="token punctuation">{</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u94FE\u6808</span>
LinkStack<span class="token operator">*</span> lstack <span class="token operator">=</span> <span class="token function">InitLinkStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6570\u636E</span>
Teacher t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">;</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
t2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
t3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t3<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u6808\u4E2D\u6DFB\u52A0\u5143\u7D20</span>
<span class="token function">PushLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u6808\u6570\u636E</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmptyLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">TopLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PopLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u8868</span>
<span class="token function">DestroyLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_6-1-4\u6808\u7684\u5E94\u7528-\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_6-1-4\u6808\u7684\u5E94\u7528-\u6848\u4F8B" aria-hidden="true">#</a> 6.1.4\u6808\u7684\u5E94\u7528(\u6848\u4F8B)</h3><h4 id="_6-1-4-1-\u5C31\u8FD1\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_6-1-4-1-\u5C31\u8FD1\u5339\u914D" aria-hidden="true">#</a> 6.1.4.1 \u5C31\u8FD1\u5339\u914D</h4><p>\u51E0\u4E4E\u6240\u6709\u7684\u7F16\u8BD1\u5668\u90FD\u5177\u6709\u68C0\u6D4B\u62EC\u53F7\u662F\u5426\u5339\u914D\u7684\u80FD\u529B\uFF0C\u90A3\u4E48\u5982\u4F55\u5B9E\u73B0\u7F16\u8BD1\u5668\u4E2D\u7684\u7B26\u53F7\u6210\u5BF9\u68C0\u6D4B\uFF1F\u5982\u4E0B\u5B57\u7B26\u4E32:</p><p>5+5(6)+9/3*1)-(1+3(</p><p>\u7B97\u6CD5\u601D\u8DEF</p><ul><li><p>\u4ECE\u7B2C\u4E00\u4E2A\u5B57\u7B26\u5F00\u59CB\u626B\u63CF</p></li><li><p>\u5F53\u9047\u89C1\u666E\u901A\u5B57\u7B26\u65F6\u5FFD\u7565\uFF0C</p></li><li><p>\u5F53\u9047\u89C1\u5DE6\u7B26\u53F7\u65F6\u538B\u5165\u6808\u4E2D</p></li><li><p>\u5F53\u9047\u89C1\u53F3\u7B26\u53F7\u65F6\u4ECE\u6808\u4E2D\u5F39\u51FA\u6808\u9876\u7B26\u53F7\uFF0C\u5E76\u8FDB\u884C\u5339\u914D</p></li><li><p>\u5339\u914D\u6210\u529F\uFF1A\u7EE7\u7EED\u8BFB\u5165\u4E0B\u4E00\u4E2A\u5B57\u7B26</p></li><li><p>\u5339\u914D\u5931\u8D25\uFF1A\u7ACB\u5373\u505C\u6B62\uFF0C\u5E76\u62A5\u9519</p></li><li><p>\u7ED3\u675F\uFF1A</p></li><li><p>\u6210\u529F: \u6240\u6709\u5B57\u7B26\u626B\u63CF\u5B8C\u6BD5\uFF0C\u4E14\u6808\u4E3A\u7A7A</p></li><li><p>\u5931\u8D25\uFF1A\u5339\u914D\u5931\u8D25\u6216\u6240\u6709\u5B57\u7B26\u626B\u63CF\u5B8C\u6BD5\u4F46\u6808\u975E\u7A7A</p></li><li><p>\u603B\u7ED3</p></li><li><p><strong>\u5F53\u9700\u8981\u68C0\u6D4B\u6210\u5BF9\u51FA\u73B0\u4F46\u53C8\u4E92\u4E0D\u76F8\u90BB\u7684\u4E8B\u7269\u65F6\u53EF\u4EE5\u4F7F\u7528\u6808\u201C\u540E\u8FDB\u5148\u51FA\u201D\u7684\u7279\u6027</strong></p></li><li><p><strong>\u6808\u975E\u5E38\u9002\u5408\u4E8E\u9700\u8981\u201C\u5C31\u8FD1\u5339\u914D\u201D\u7684\u573A\u5408</strong></p></li></ul><p>\u6848\u4F8B\u4EE3\u7801</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkStack.h&quot;</span></span>
<span class="token comment">//\u6848\u4F8B\u4E00 \u5C31\u8FD1\u5339\u914D</span>
<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">char</span><span class="token operator">*</span> str <span class="token operator">=</span> <span class="token string">&quot;5+5(6)+9/3*1)-(1+3(&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u6808</span>
LinkStack<span class="token operator">*</span> lstack <span class="token operator">=</span> <span class="token function">InitLinkStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5339\u914D\u62EC\u53F7</span>
<span class="token keyword">char</span><span class="token operator">*</span> pCurrent <span class="token operator">=</span> str<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">*</span>pCurrent <span class="token operator">!=</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>pCurrent <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">PushLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">,</span> pCurrent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>pCurrent <span class="token operator">==</span> <span class="token char">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">char</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">TopLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>p <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">PopLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">}</span>
pCurrent<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">GetLengthLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5339\u914D\u5931\u8D25!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u6808</span>
<span class="token function">DestroyLinkStack</span><span class="token punctuation">(</span>lstack<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="_6-1-4-2-\u4E2D\u7F00\u8868\u8FBE\u5F0F\u548C\u540E\u7F00\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_6-1-4-2-\u4E2D\u7F00\u8868\u8FBE\u5F0F\u548C\u540E\u7F00\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 6.1.4.2 \u4E2D\u7F00\u8868\u8FBE\u5F0F\u548C\u540E\u7F00\u8868\u8FBE\u5F0F</h4><ul><li><p>\u540E\u7F00\u8868\u8FBE\u5F0F\uFF08\u7531\u6CE2\u5170\u79D1\u5B66\u5BB6\u572820\u4E16\u7EAA50\u5E74\u4EE3\u63D0\u51FA\uFF09</p></li><li><p><strong>\u5C06\u8FD0\u7B97\u7B26\u653E\u5728\u6570\u5B57\u540E\u9762 ===\u300B \u7B26\u5408\u8BA1\u7B97\u673A\u8FD0\u7B97</strong></p></li><li><p>\u6211\u4EEC\u4E60\u60EF\u7684\u6570\u5B66\u8868\u8FBE\u5F0F\u53EB\u505A\u4E2D\u7F00\u8868\u8FBE\u5F0F===\u300B\u7B26\u5408\u4EBA\u7C7B\u601D\u8003\u4E60\u60EF</p></li><li><p>\u5B9E\u4F8B</p></li><li><p>5 + 4 =&gt; 5 4 +</p></li><li><p>1 + 2 * 3 =&gt; 1 2 3 * +</p></li><li><p>8 +( 3 \u2013 1 ) * 5 =&gt; 8 3 1 \u2013 5 * +</p></li><li><p>\u4E2D\u7F00\u8F6C\u540E\u7F00\u7B97\u6CD5\uFF1A</p></li></ul><p>\u904D\u5386\u4E2D\u7F00\u8868\u8FBE\u5F0F\u4E2D\u7684\u6570\u5B57\u548C\u7B26\u53F7\uFF1A</p><ul><li><p>\u5BF9\u4E8E\u6570\u5B57\uFF1A\u76F4\u63A5\u8F93\u51FA</p></li><li><p>\u5BF9\u4E8E\u7B26\u53F7\uFF1A</p></li><li><p>\u5DE6\u62EC\u53F7\uFF1A\u8FDB\u6808</p></li><li><p>\u8FD0\u7B97\u7B26\u53F7\uFF1A\u4E0E\u6808\u9876\u7B26\u53F7\u8FDB\u884C\u4F18\u5148\u7EA7\u6BD4\u8F83</p></li><li><p>\u82E5\u6808\u9876\u7B26\u53F7\u4F18\u5148\u7EA7\u4F4E\uFF1A\u6B64\u7B26\u53F7\u8FDB\u6808\uFF08\u9ED8\u8BA4\u6808\u9876\u82E5\u662F\u5DE6\u62EC\u53F7\uFF0C\u5DE6\u62EC\u53F7\u4F18\u5148\u7EA7\u6700\u4F4E\uFF09</p></li><li><p>\u82E5\u6808\u9876\u7B26\u53F7\u4F18\u5148\u7EA7\u4E0D\u4F4E\uFF1A\u5C06\u6808\u9876\u7B26\u53F7\u5F39\u51FA\u5E76\u8F93\u51FA\uFF0C\u4E4B\u540E\u8FDB\u6808</p></li><li><p>\u53F3\u62EC\u53F7\uFF1A\u5C06\u6808\u9876\u7B26\u53F7\u5F39\u51FA\u5E76\u8F93\u51FA\uFF0C\u76F4\u5230\u5339\u914D\u5DE6\u62EC\u53F7,\u5C06\u5DE6\u62EC\u53F7\u548C\u53F3\u62EC\u53F7\u540C\u65F6\u820D\u5F03</p></li></ul><p>\u904D\u5386\u7ED3\u675F\uFF1A\u5C06\u6808\u4E2D\u7684\u6240\u6709\u7B26\u53F7\u5F39\u51FA\u5E76\u8F93\u51FA</p><p>\u4E2D\u7F00\u8F6C\u540E\u7F00\u4F2A\u4EE3\u7801 priority</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">transform</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
\u521B\u5EFA\u6808 S\uFF1B
i<span class="token operator">=</span> <span class="token number">0</span>\uFF1B
<span class="token keyword">while</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> \u2018\\<span class="token number">0</span>\u2019<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> \u4E3A\u6570\u5B57<span class="token punctuation">)</span> <span class="token punctuation">{</span>
Output\uFF08exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\uFF09<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> \u4E3A\u7B26\u53F7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\u4F18\u5148\u7EA7 <span class="token operator">&lt;=</span> \u6808\u9876\u7B26\u53F7\u4F18\u5148\u7EA7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
output\uFF08\u6808\u9876\u7B26\u53F7\uFF09\uFF1B
Pop\uFF08S\uFF09<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token function">Push</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span> exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> \u4E3A\u5DE6\u62EC\u53F7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token function">Push</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span> exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> \u4E3A\u53F3\u62EC\u53F7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>\u6808\u9876\u7B26\u53F7\u4E0D\u4E3A\u5DE6\u62EC\u53F7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
output\uFF08\u6808\u9876\u7B26\u53F7\uFF09\uFF1B
Pop\uFF08S\uFF09<span class="token punctuation">;</span> <span class="token punctuation">}</span>\u4ECE S \u4E2D\u5F39\u51FA\u5DE6\u62EC\u53F7\uFF1B <span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
\u62A5\u9519\uFF0C\u505C\u6B62\u5FAA\u73AF\uFF1B
<span class="token punctuation">}</span>
i<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> \u2018\\<span class="token number">0</span>\u2019<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token function">output</span><span class="token punctuation">(</span>\u6808\u9876\u7B26\u53F7<span class="token punctuation">)</span>\uFF1B
Pop\uFF08S\uFF09<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="_6-1-4-3-\u8BA1\u7B97\u673A\u5982\u4F55\u57FA\u4E8E\u540E\u7F00\u8868\u8FBE\u5F0F\u8BA1\u7B97" tabindex="-1"><a class="header-anchor" href="#_6-1-4-3-\u8BA1\u7B97\u673A\u5982\u4F55\u57FA\u4E8E\u540E\u7F00\u8868\u8FBE\u5F0F\u8BA1\u7B97" aria-hidden="true">#</a> 6.1.4.3 \u8BA1\u7B97\u673A\u5982\u4F55\u57FA\u4E8E\u540E\u7F00\u8868\u8FBE\u5F0F\u8BA1\u7B97</h4><ul><li>\u601D\u8003</li></ul><p>\u8BA1\u7B97\u673A\u662F\u5982\u4F55\u57FA\u4E8E\u540E\u7F00\u8868\u8FBE\u5F0F\u8BA1\u7B97\u7684\uFF1F</p><p>\u4F8B\u5982\uFF1A8 3 1 \u2013 5 * +</p><ul><li>\u8BA1\u7B97\u89C4\u5219</li></ul><p>\u904D\u5386\u540E\u7F00\u8868\u8FBE\u5F0F\u4E2D\u7684\u6570\u5B57\u548C\u7B26\u53F7</p><ul><li><p>\u5BF9\u4E8E\u6570\u5B57\uFF1A\u8FDB\u6808</p></li><li><p>\u5BF9\u4E8E\u7B26\u53F7\uFF1A</p></li><li><p>\u4ECE\u6808\u4E2D\u5F39\u51FA\u53F3\u64CD\u4F5C\u6570</p></li><li><p>\u4ECE\u6808\u4E2D\u5F39\u51FA\u5DE6\u64CD\u4F5C\u6570</p></li><li><p>\u6839\u636E\u7B26\u53F7\u8FDB\u884C\u8FD0\u7B97</p></li><li><p>\u5C06\u8FD0\u7B97\u7ED3\u679C\u538B\u5165\u6808\u4E2D</p></li></ul><p>\u904D\u5386\u7ED3\u675F\uFF1A\u6808\u4E2D\u7684\u552F\u4E00\u6570\u5B57\u4E3A\u8BA1\u7B97\u7ED3\u679C</p><p>\u4EE3\u7801\u5B9E\u73B0\uFF08\u4F2A\u4EE3\u7801\uFF09 express</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">compute</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u6808\uFF1B</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span> exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> \u2018\\<span class="token number">0</span>\u2019<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span>\uFF08exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\u4E3A\u6570\u5B57\uFF09
<span class="token punctuation">{</span>
Push\uFF08S<span class="token punctuation">,</span> exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\uFF09<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\u4E3A\u7B26\u53F7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//1. \u4ECE\u6808\u9876\u5F39\u51FA\u53F3\u64CD\u4F5C\u6570\uFF1B</span>
<span class="token comment">//2. \u4ECE\u6808\u4E2D\u5F39\u51FA\u5DE6\u64CD\u4F5C\u6570\uFF1B</span>
<span class="token comment">//3. \u6839\u636E\u7B26\u53F7\u8FDB\u884C\u8FD0\u7B97\uFF1B</span>
<span class="token comment">//4. Push\uFF08stack\uFF0C \u7ED3\u679C\uFF09\uFF1B</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
<span class="token comment">//\u62A5\u9519\uFF0C\u505C\u6B62\u5FAA\u73AF\uFF1B</span>
<span class="token punctuation">}</span>
i<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">Size</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> exp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> \u2018\\<span class="token number">0</span>\u2019<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token comment">//\u6808\u4E2D\u552F\u4E00\u7684\u6570\u5B57\u4E3A\u8FD0\u7B97\u7ED3\u679C\uFF1B</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8FD4\u56DE\u7ED3\u679C\uFF1B</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="_6-2\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_6-2\u961F\u5217" aria-hidden="true">#</a> 6.2\u961F\u5217</h2><h3 id="_6-2-1-\u961F\u5217\u7684\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_6-2-1-\u961F\u5217\u7684\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 6.2.1 \u961F\u5217\u7684\u57FA\u672C\u6982\u5FF5</h3><p>\u961F\u5217\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u53D7\u9650\u5236\u7684\u7EBF\u6027\u8868\u3002</p><p><strong>\u961F\u5217\uFF08queue\uFF09\u662F\u53EA\u5141\u8BB8\u5728\u4E00\u7AEF\u8FDB\u884C\u63D2\u5165\u64CD\u4F5C\uFF0C\u800C\u5728\u53E6\u4E00\u7AEF\u8FDB\u884C\u5220\u9664\u64CD\u4F5C\u7684\u7EBF\u6027\u8868\u3002</strong></p><p>\u961F\u5217\u662F\u4E00\u79CD\u5148\u8FDB\u5148\u51FA\u7684\uFF08First In First Out\uFF09\u7684\u7EBF\u6027\u8868\uFF0C\u7B80\u79F0 FIFO\u3002\u5141\u8BB8\u63D2\u5165\u7684\u4E00\u7AEF\u4E3A\u961F\u5C3E\uFF0C\u5141\u8BB8\u5220\u9664\u7684\u4E00\u7AEF\u4E3A\u961F\u5934\u3002\u961F\u5217\u4E0D\u5141\u8BB8\u5728\u4E2D\u95F4\u90E8\u4F4D\u8FDB\u884C\u64CD\u4F5C\uFF01\u5047\u8BBE\u961F\u5217\u662F q=\uFF08a1\uFF0Ca2\uFF0C\u2026\u2026\uFF0Can\uFF09\uFF0C\u90A3\u4E48 a1 \u5C31\u662F\u961F\u5934\u5143\u7D20\uFF0C\u800C an \u662F\u961F\u5C3E\u5143\u7D20\u3002\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u5220\u9664\u65F6\uFF0C\u603B\u662F\u4ECE a1 \u5F00\u59CB\uFF0C\u800C\u63D2\u5165\u65F6\uFF0C\u603B\u662F\u5728\u961F\u5217\u6700\u540E\u3002\u8FD9\u4E5F\u6BD4\u8F83\u7B26\u5408\u6211\u4EEC\u901A\u5E38\u751F\u6D3B\u4E2D\u7684\u4E60\u60EF\uFF0C\u6392\u5728\u7B2C\u4E00\u4E2A\u7684\u4F18\u5148\u51FA\u5217\uFF0C\u6700\u540E\u6765\u7684\u5F53\u7136\u6392\u5728\u961F\u4F0D\u6700\u540E\u3002\u5982\u4E0B\u56FE\uFF1A</p><p><img src="`+D+`" alt="image-20220329225602778"></p><h3 id="_6-2-2-\u961F\u5217\u7684\u5E38\u7528\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_6-2-2-\u961F\u5217\u7684\u5E38\u7528\u64CD\u4F5C" aria-hidden="true">#</a> 6.2.2 \u961F\u5217\u7684\u5E38\u7528\u64CD\u4F5C</h3><p>\u521B\u5EFA\u961F\u5217</p><p>\u9500\u6BC1\u961F\u5217</p><p>\u6E05\u7A7A\u961F\u5217</p><p>\u8FDB\u961F\u5217</p><p>\u51FA\u961F\u5217</p><p>\u83B7\u53D6\u961F\u5934\u5143\u7D20</p><p>\u83B7\u53D6\u961F\u5217\u7684\u957F\u5EA6</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>ADT \u961F\u5217\uFF08Queue\uFF09
Data
\u901A\u7EBF\u6027\u8868\u3002\u5143\u7D20\u5177\u6709\u76F8\u540C\u7684\u7C7B\u578B\uFF0C\u76F8\u90BB\u5143\u7D20\u5177\u6709\u524D\u9A71\u540E\u7EE7\u5173\u7CFB\u3002
Operation
<span class="token comment">// \u521D\u59CB\u5316\u64CD\u4F5C\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u7A7A\u961F\u5217 Q</span>
InitQueue\uFF08<span class="token operator">*</span>Q\uFF09\uFF1B
<span class="token comment">// \u82E5\u961F\u5217 Q \u5B58\u50A8\uFF0C\u5219\u9500\u6BC1\u5B83\u3002</span>
<span class="token function">DestroyQueue</span><span class="token punctuation">(</span><span class="token operator">*</span>Q<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5C06\u961F\u5217 Q \u6E05\u7A7A</span>
<span class="token function">ClearQueue</span><span class="token punctuation">(</span><span class="token operator">*</span>Q<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u961F\u5217\u4E3A\u7A7A\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false</span>
<span class="token function">QueueEmpty</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u961F\u5217 Q \u5B58\u5728\u4E14\u975E\u7A7A\uFF0C\u7528 e \u8FD4\u56DE\u961F\u5217 Q \u7684\u961F\u5934\u5143\u7D20</span>
<span class="token function">GetHead</span><span class="token punctuation">(</span>Q<span class="token punctuation">,</span> <span class="token operator">*</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u961F\u5217 Q \u5B58\u5728\uFF0C\u63D2\u5165\u65B0\u5143\u7D20 e \u5230\u961F\u5217 Q \u4E2D\u5E76\u6210\u4E3A\u961F\u5C3E\u5143\u7D20\u3002</span>
<span class="token function">EnQueue</span><span class="token punctuation">(</span><span class="token operator">*</span>Q<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5220\u9664\u961F\u5217 Q \u4E2D\u7684\u961F\u5934\u5143\u7D20\uFF0C\u5E76\u7528 e \u8FD4\u56DE\u5176\u503C</span>
<span class="token function">DeQueue</span><span class="token punctuation">(</span><span class="token operator">*</span>Q<span class="token punctuation">,</span> <span class="token operator">*</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD4\u56DE\u961F\u5217 Q \u7684\u5143\u7D20\u4E2A\u6570</span>
<span class="token function">QueueLength</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span><span class="token punctuation">;</span>
endADT
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><img src="`+I+`" alt="image-20220329225620458"></p><h3 id="_6-2-3-\u961F\u5217\u7684\u987A\u5E8F\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_6-2-3-\u961F\u5217\u7684\u987A\u5E8F\u5B58\u50A8" aria-hidden="true">#</a> 6.2.3 \u961F\u5217\u7684\u987A\u5E8F\u5B58\u50A8</h3><ul><li>\u57FA\u672C\u6982\u5FF5</li></ul><p><strong>\u961F\u5217\u4E5F\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7EBF\u6027\u8868\uFF1B\u53EF\u4EE5\u7528\u7EBF\u6027\u8868\u987A\u5E8F\u5B58\u50A8\u6765\u6A21\u62DF\u961F\u5217</strong></p><p>//SqQueue.h</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">SQQUEUE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SQQUEUE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">256</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUEUE_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUEUE_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token comment">//\u961F\u5217\u5934\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_SQQUEUE</span><span class="token punctuation">{</span>
<span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">[</span>MAX<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>SqQueue<span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u7A7A\u961F\u5217</span>
SqQueue<span class="token operator">*</span> <span class="token function">InitSqQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u961F\u5217</span>
<span class="token keyword">void</span> <span class="token function">DestroySqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u961F\u5217\u4E2D\u63D2\u5165\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">PushSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u961F\u5217\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u5F97\u5BF9\u5934\u5143\u7D20</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">FrontSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u4ECE\u5BF9\u5934\u5F39\u51FA\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">PopSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptySqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>//SqQueue.c</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;SqQueue.h&quot;</span></span>
<span class="token comment">//\u521D\u59CB\u5316\u7A7A\u961F\u5217</span>
SqQueue<span class="token operator">*</span> <span class="token function">InitSqQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
SqQueue<span class="token operator">*</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>SqQueue<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>SqQueue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>queue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u521D\u59CB\u5316</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> MAX<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
queue<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
queue<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> queue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u961F\u5217</span>
<span class="token keyword">void</span> <span class="token function">DestroySqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>queue <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">free</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token comment">//\u5411\u961F\u5217\u4E2D\u63D2\u5165\u5143\u7D20</span>
<span class="token keyword">int</span> <span class="token function">PushSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token operator">-&gt;</span>length <span class="token operator">&gt;=</span> MAX<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
queue<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>queue<span class="token operator">-&gt;</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
queue<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u961F\u5217\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> queue<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u83B7\u5F97\u5BF9\u5934\u5143\u7D20</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">FrontSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> queue<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u4ECE\u5BF9\u5934\u5F39\u51FA\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">PopSqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> queue<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
queue<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> queue<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
queue<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptySqQueue</span><span class="token punctuation">(</span>SqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> QUEUE_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> QUEUE_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u6D4B\u8BD5\u6587\u4EF6</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;SqQueue.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_TEAHCER</span><span class="token punctuation">{</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u961F\u5217</span>
SqQueue<span class="token operator">*</span> queue <span class="token operator">=</span> <span class="token function">InitSqQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6570\u636E</span>
Teacher t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">;</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
t2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
t3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t3<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u961F\u5217\u4E2D\u63D2\u5165\u6570\u636E</span>
<span class="token function">PushSqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushSqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushSqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u961F\u5217\u6570\u636E</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmptySqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">FrontSqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PopSqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u961F\u5217</span>
<span class="token function">DestroySqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_6-2-4\u961F\u5217\u7684\u94FE\u5F0F\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#_6-2-4\u961F\u5217\u7684\u94FE\u5F0F\u5B58\u50A8" aria-hidden="true">#</a> 6.2.4\u961F\u5217\u7684\u94FE\u5F0F\u5B58\u50A8</h3><ul><li><p>\u57FA\u672C\u6982\u5FF5</p><p><strong>\u961F\u5217\u4E5F\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7EBF\u6027\u8868\uFF1B\u53EF\u4EE5\u7528\u7EBF\u6027\u8868\u94FE\u5F0F\u5B58\u50A8\u6765\u6A21\u62DF\u961F\u5217\u7684\u94FE\u5F0F\u5B58\u50A8\u3002</strong></p></li></ul><p>//<strong>LinkQueue.h</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">LINKQUEUE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LINKQUEUE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUEUE_FALSE</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QUEUE_TRUE</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token comment">//\u94FE\u8868\u961F\u5217\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_LINKNODE</span><span class="token punctuation">{</span>
<span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">_LINKNODE</span><span class="token operator">*</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>LinkNode<span class="token punctuation">;</span>
<span class="token comment">//\u94FE\u5F0F\u961F\u5217\u5934\u7ED3\u70B9</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_LINKQUEUE</span><span class="token punctuation">{</span>
LinkNode<span class="token operator">*</span> head<span class="token punctuation">;</span>
<span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>LinkQueue<span class="token punctuation">;</span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u5F0F\u961F\u5217</span>
LinkQueue<span class="token operator">*</span> <span class="token function">InitLinkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u5F0F\u961F\u5217</span>
<span class="token keyword">void</span> <span class="token function">DestroyLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5411\u961F\u5C3E\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">PushLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD4\u56DE\u5BF9\u5934\u6570\u636E</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">FrontLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5F39\u51FA\u5BF9\u5934\u7ED3\u70B9</span>
<span class="token keyword">void</span> <span class="token function">PopLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD4\u56DE\u961F\u5217\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>//<strong>LinkQueue.c</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkQueue.h&quot;</span></span>
<span class="token comment">//\u521D\u59CB\u5316\u94FE\u5F0F\u961F\u5217</span>
LinkQueue<span class="token operator">*</span> <span class="token function">InitLinkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
LinkQueue<span class="token operator">*</span> lqueue <span class="token operator">=</span> <span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LinkQueue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lqueue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
lqueue<span class="token operator">-&gt;</span>head <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> lqueue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u5F0F\u961F\u5217</span>
<span class="token keyword">void</span> <span class="token function">DestroyLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmptyLinkQueue</span><span class="token punctuation">(</span>lqueue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">PopLinkQueue</span><span class="token punctuation">(</span>lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">free</span><span class="token punctuation">(</span>lqueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5411\u961F\u5C3E\u63D2\u5165\u7ED3\u70B9</span>
<span class="token keyword">int</span> <span class="token function">PushLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u65B0\u7ED3\u70B9</span>
LinkNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token punctuation">(</span>LinkNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LinkNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token comment">//\u7B2C\u4E00\u6B21\u63D2\u5165</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lqueue<span class="token operator">-&gt;</span>head <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
lqueue<span class="token operator">-&gt;</span>head <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5176\u4ED6\u63D2\u5165</span>
newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> lqueue<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>head <span class="token operator">=</span> newnode<span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8FD4\u56DE\u5BF9\u5934\u6570\u636E</span>
<span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">FrontLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">{</span>
LinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> lqueue<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent<span class="token operator">-&gt;</span>next <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
pCurrent <span class="token operator">=</span> pCurrent<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> pCurrent<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5F39\u51FA\u5BF9\u5934\u7ED3\u70B9</span>
<span class="token keyword">void</span> <span class="token function">PopLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u5982\u679C\u53EA\u6709\u4E00\u4E2A\u7ED3\u70B9</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lqueue<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">free</span><span class="token punctuation">(</span>lqueue<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>head <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">//\u591A\u4E8E\u4E00\u4E2A\u7ED3\u70B9</span>
LinkNode<span class="token operator">*</span> pPrev <span class="token operator">=</span> lqueue<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>
LinkNode<span class="token operator">*</span> pCurrent <span class="token operator">=</span> pPrev<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>pCurrent<span class="token operator">-&gt;</span>next <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
pPrev <span class="token operator">=</span> pCurrent<span class="token punctuation">;</span>
pCurrent <span class="token operator">=</span> pPrev<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">free</span><span class="token punctuation">(</span>pCurrent<span class="token punctuation">)</span><span class="token punctuation">;</span>
pPrev<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
lqueue<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8FD4\u56DE\u961F\u5217\u957F\u5EA6</span>
<span class="token keyword">int</span> <span class="token function">GetLengthLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> lqueue<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</span>
<span class="token keyword">int</span> <span class="token function">IsEmptyLinkQueue</span><span class="token punctuation">(</span>LinkQueue<span class="token operator">*</span> lqueue<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lqueue<span class="token operator">-&gt;</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">return</span> QUEUE_TRUE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">return</span> QUEUE_FALSE<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><p>\u6D4B\u8BD5\u6587\u4EF6</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;LinkQueue.h&quot;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_TEAHCER</span><span class="token punctuation">{</span>
<span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>Teacher<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u94FE\u5F0F\u961F\u5217</span>
LinkQueue<span class="token operator">*</span> queue <span class="token operator">=</span> <span class="token function">InitLinkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6570\u636E</span>
Teacher t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">;</span>
t1<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
t2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
t3<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>t3<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u94FE\u5F0F\u961F\u5217\u63D2\u5165\u6570\u636E</span>
<span class="token function">PushLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PushLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6253\u5370\u94FE\u5F0F\u961F\u5217</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u94FE\u5F0F\u961F\u5217\u957F\u5EA6:%d\\n&quot;</span><span class="token punctuation">,</span><span class="token function">GetLengthLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsEmptyLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">FrontLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Name:%s Age:%d\\n&quot;</span><span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span>teacher<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PopLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u94FE\u5F0F\u961F\u5217\u957F\u5EA6:%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">GetLengthLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9500\u6BC1\u94FE\u5F0F\u961F\u5217</span>
<span class="token function">DestroyLinkQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div>`,318);function P(G,J){return j}var M=s(T,[["render",P]]);export{M as default};
