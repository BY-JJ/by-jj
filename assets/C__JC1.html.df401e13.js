import{e as n}from"./app.f5f78651.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";var a="/by-jj/C++/wpsC57E.tmp.jpg";const p={},t=n('<h2 id="_1-c-\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#_1-c-\u6982\u8FF0" aria-hidden="true">#</a> 1.c++\u6982\u8FF0</h2><h3 id="_1-1c-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-1c-\u7B80\u4ECB" aria-hidden="true">#</a> 1.1c++\u7B80\u4ECB</h3><p>\u201Cc++\u201D\u4E2D\u7684++\u6765\u81EA\u4E8Ec\u8BED\u8A00\u4E2D\u7684\u9012\u589E\u8FD0\u7B97\u7B26++\uFF0C\u8BE5\u8FD0\u7B97\u7B26\u5C06\u53D8\u91CF\u52A01\u3002c++\u8D77\u521D\u4E5F\u53EB\u201Dc with class\u201D.\u901A\u8FC7\u540D\u79F0\u8868\u660E\uFF0Cc++\u662F\u5BF9C\u7684\u6269\u5C55\uFF0C\u56E0\u6B64c++\u662Fc\u8BED\u8A00\u7684\u8D85\u96C6\uFF0C\u8FD9\u610F\u5473\u7740\u4EFB\u4F55\u6709\u6548\u7684c\u7A0B\u5E8F\u90FD\u662F\u6709\u6548\u7684c++\u7A0B\u5E8F\u3002c++\u7A0B\u5E8F\u53EF\u4EE5\u4F7F\u7528\u5DF2\u6709\u7684c\u7A0B\u5E8F\u5E93\u3002</p><p><strong>\u5E93\u662F\u7F16\u7A0B\u6A21\u5757\u7684\u96C6\u5408\uFF0C\u53EF\u4EE5\u5728\u7A0B\u5E8F\u4E2D\u8C03\u7528\u5B83\u4EEC\u3002\u5E93\u5BF9\u5F88\u591A\u5E38\u89C1\u7684\u7F16\u7A0B\u95EE\u9898\u63D0\u4F9B\u4E86\u53EF\u9760\u7684\u89E3\u51B3\u65B9\u6CD5\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8282\u7701\u7A0B\u5E8F\u5458\u5927\u91CF\u7684\u65F6\u95F4\u548C\u5DE5\u4F5C\u91CF\u3002</strong></p><p>c++\u8BED\u8A00\u5728c\u8BED\u8A00\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E86<strong>\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B</strong>\u548C<strong>\u6CDB\u578B\u7F16\u7A0B</strong>\u7684\u652F\u6301\u3002c++\u7EE7\u627F\u4E86c\u8BED\u8A00\u9AD8\u6548\uFF0C\u7B80\u6D01\uFF0C\u5FEB\u901F\u548C\u53EF\u79FB\u690D\u7684\u4F20\u7EDF\u3002</p><p>c++\u878D\u5408\u4E863\u79CD\u4E0D\u540C\u7684\u7F16\u7A0B\u65B9\u5F0F:</p><p>c\u8BED\u8A00\u4EE3\u8868\u7684\u8FC7\u7A0B\u6027\u8BED\u8A00.</p><p>c++\u5728c\u8BED\u8A00\u57FA\u7840\u4E0A\u6DFB\u52A0\u7684\u7C7B\u4EE3\u8868\u7684\u9762\u5411\u5BF9\u8C61\u8BED\u8A00.</p><p>c++\u6A21\u677F\u652F\u6301\u7684\u6CDB\u578B\u7F16\u7A0B\u3002</p><p><strong>c\u8BED\u8A00\u548Cc++\u8BED\u8A00\u7684\u5173\u7CFB:</strong></p><p>c++\u8BED\u8A00\u662F\u5728C\u8BED\u8A00\u7684\u57FA\u7840\u4E0A\uFF0C\u6DFB\u52A0\u4E86\u9762\u5411\u5BF9\u8C61\u3001\u6A21\u677F\u7B49\u73B0\u4EE3\u7A0B\u5E8F\u8BBE\u8BA1\u8BED\u8A00\u7684\u7279\u6027\u800C\u53D1\u5C55\u8D77\u6765\u7684\u3002\u4E24\u8005\u65E0\u8BBA\u662F\u4ECE\u8BED\u6CD5\u89C4\u5219\u4E0A\uFF0C\u8FD8\u662F\u4ECE\u8FD0\u7B97\u7B26\u7684\u6570\u91CF\u548C\u4F7F\u7528\u4E0A\uFF0C\u90FD\u975E\u5E38\u76F8\u4F3C\uFF0C\u6240\u4EE5\u6211\u4EEC\u5E38\u5E38\u5C06\u8FD9\u4E24\u95E8\u8BED\u8A00\u7EDF\u79F0\u4E3A\u201C<strong>C/C++</strong>\u201D\u3002</p><p><strong>C\u8BED\u8A00\u548CC++\u5E76\u4E0D\u662F\u5BF9\u7ACB\u7684\u7ADE\u4E89\u5173\u7CFB\uFF1A</strong></p><p>C++\u662FC\u8BED\u8A00\u7684\u52A0\u5F3A\uFF0C\u662F\u4E00\u79CD\u66F4\u597D\u7684C\u8BED\u8A00\u3002</p><p>C++\u662F\u4EE5C\u8BED\u8A00\u4E3A\u57FA\u7840\u7684\uFF0C\u5E76\u4E14\u5B8C\u5168\u517C\u5BB9C\u8BED\u8A00\u7684\u7279\u6027\u3002</p><p>c\u8BED\u8A00\u548CC++\u8BED\u8A00\u7684\u5B66\u4E60\u662F\u53EF\u4EE5\u76F8\u4E92\u4FC3\u8FDB\u3002\u5B66\u597DC\u8BED\u8A00\uFF0C\u53EF\u4EE5\u4E3A\u6211\u4EEC\u5C06\u6765\u8FDB\u4E00\u6B65\u5730\u5B66\u4E60C++\u8BED\u8A00\u6253\u597D\u57FA\u7840\uFF0C\u800CC++\u8BED\u8A00\u7684\u5B66\u4E60\uFF0C\u4E5F\u4F1A\u4FC3\u8FDB\u6211\u4EEC\u5BF9\u4E8EC\u8BED\u8A00\u7684\u7406\u89E3\uFF0C\u4ECE\u800C\u66F4\u597D\u5730\u8FD0\u7528C\u8BED\u8A00\u3002</p><h3 id="_1-2c-\u8D77\u6E90" tabindex="-1"><a class="header-anchor" href="#_1-2c-\u8D77\u6E90" aria-hidden="true">#</a> 1.2c++\u8D77\u6E90</h3><p>\u4E0Ec\u8BED\u8A00\u4E00\u6837\uFF0Cc++\u4E5F\u662F\u5728\u8D1D\u5C14\u5B9E\u9A8C\u5BA4\u8BDE\u751F\u7684\uFF0CBjarne Stroustrup(\u672C\u8D3E\u5C3C\xB7\u65AF\u7279\u52B3\u65AF\u7279\u5362\u666E)\u572820\u4E16\u7EAA80\u5E74\u4EE3\u5728\u8FD9\u91CC\u5F00\u53D1\u4E86\u8FD9\u79CD\u8BED\u8A00\u3002</p><p><img src="'+a+`" alt="wpsC57E.tmp.jpg"></p><p><strong>(C++\u4E4B\u7236\u672C\u8D3E\u5C3C\xB7\u65AF\u7279\u52B3\u65AF\u7279\u5362\u666E)</strong></p><p>Stroustrup\u5173\u5FC3\u7684\u662F\u8BA9c++\u66F4\u6709\u7528\uFF0C\u800C\u4E0D\u662F\u5B9E\u65BD\u7279\u5B9A\u7684\u7F16\u7A0B\u539F\u7406\u6216\u98CE\u683C\u3002\u5728\u786E\u5B9A\u8BED\u8A00\u7279\u6027\u65B9\u9762\uFF0C\u771F\u6B63\u7684\u7F16\u7A0B\u6BD4\u7EAF\u7CB9\u7684\u539F\u7406\u66F4\u91CD\u8981\u3002Stroustrup\u4E4B\u6240\u4EE5\u5728c\u7684\u57FA\u7840\u4E0A\u521B\u5EFAc++,\u662F\u56E0\u4E3Ac\u8BED\u8A00\u7B80\u6D01\u3001\u9002\u5408\u7CFB\u7EDF\u7F16\u7A0B\u3001\u4F7F\u7528\u5E7F\u6CDB\u4E14\u4E0EUNIX\u64CD\u4F5C\u7CFB\u7EDF\u8054\u7CFB\u7D27\u5BC6\u3002</p><p>\u7528\u4ED6\u81EA\u5DF1\u7684\u8BDD\u6765\u8BF4\uFF0C\u201CC++\u4E3B\u8981\u662F\u4E3A\u4E86\u6211\u7684\u670B\u53CB\u548C\u6211\u4E0D\u5FC5\u518D\u4F7F\u7528\u6C47\u7F16\u8BED\u8A00\u3001C\u8BED\u8A00\u6216\u8005\u5176\u4ED6\u73B0\u4EE3\u9AD8\u7EA7\u8BED\u8A00\u6765\u7F16\u7A0B\u800C\u8BBE\u8BA1\u7684\u3002\u5B83\u7684\u4E3B\u8981\u529F\u80FD\u662F\u53EF\u4EE5\u66F4\u65B9\u4FBF\u5F97\u7F16\u5199\u51FA\u597D\u7A0B\u5E8F\uFF0C\u8BA9\u6BCF\u4E2A\u7A0B\u5E8F\u5458\u66F4\u52A0\u5FEB\u4E50\u201D\u3002</p><h3 id="_1-3-\u53EF\u79FB\u690D\u6027\u548C\u6807\u51C6" tabindex="-1"><a class="header-anchor" href="#_1-3-\u53EF\u79FB\u690D\u6027\u548C\u6807\u51C6" aria-hidden="true">#</a> 1.3 \u53EF\u79FB\u690D\u6027\u548C\u6807\u51C6</h3><p>\u5047\u8BBE\u4E3A\u8FD0\u884Cwindows 2000\u7684\u8001\u5F0F\u5954\u817Epc\u7F16\u5199\u4E86\u4E00\u4E2A\u5F88\u597D\u7528\u7684c++\u7A0B\u5E8F\uFF0C\u800C\u7BA1\u7406\u5458\u51B3\u5B9A\u4F7F\u7528\u4E0D\u540C\u64CD\u4F5C\u7CFB\u7EDF(\u6BD4\u5982\u8BF4Mac OS \u6216 Linux)\u548C\u5904\u7406\u5668\u7684\u8BA1\u7B97\u673A\u66FF\u6362\u5B83\u3002\u8BE5\u7A0B\u5E8F\u662F\u5426\u53EF\u5728\u65B0\u5E73\u53F0\u8FD0\u884C\u5462\uFF1F\u5F53\u7136\uFF0C\u4F46\u662F\u5FC5\u987B\u4F7F\u7528\u4E3A\u65B0\u5E73\u53F0\u8BBE\u8BA1\u7684c++\u7F16\u8BD1\u5668\u91CD\u65B0\u7F16\u8BD1\u3002\u4F46\u662F\u662F\u5426\u9700\u8981\u4FEE\u6539\u5199\u597D\u7684\u4EE3\u7801\uFF1F\u5982\u679C\u4E0D\u9700\u8981\u4FEE\u6539\u4EE3\u7801\u7684\u60C5\u51B5\u4E0B\uFF0C\u91CD\u65B0\u7F16\u8BD1\u7A0B\u5E8F\u540E\uFF0C\u7A0B\u5E8F\u4F9D\u7136\u8FD0\u884C\u826F\u597D\uFF0C\u8BE5\u7A0B\u5E8F\u662F\u53EF\u79FB\u690D\u7684\u3002</p><p>\u7A0B\u5E8F\u662F\u5426\u53EF\u79FB\u690D\u6027\u6709\u4E24\u4E2A\u95EE\u9898\u9700\u8981\u89E3\u51B3\u3002\u7B2C\u4E00\u662F\u786C\u4EF6\uFF0C\u9488\u5BF9\u7279\u5B9A\u786C\u4EF6\u7F16\u7A0B\u7684\u7A0B\u5E8F\u662F\u4E0D\u53EF\u79FB\u690D\u7684\u3002\u7B2C\u4E8C\uFF0C\u8BED\u8A00\u7684\u5B9E\u73B0\uFF0Cwindows xp c++ \u548C Redhat Linux \u6216 Mac OS X\u5BF9c++\u7684\u5B9E\u73B0\u4E0D\u4E00\u5B9A\u76F8\u540C\u3002\u867D\u7136\u6211\u4EEC\u5E0C\u671Bc++\u7248\u672C\u4E0E\u5176\u4ED6\u7248\u672C\u517C\u5BB9\uFF0C\u4F46\u662F\u5982\u679C\u6CA1\u6709\u4E00\u4E2A\u516C\u5F00\u7684\u6807\u51C6\uFF0C\u5F88\u96BE\u505A\u5230\u3002\u56E0\u6B64\uFF0C\u7F8E\u56FD\u56FD\u5BB6\u6807\u51C6\u5C40(American National Standards Institute,ANSI)\u57281990\u5E74\u8BBE\u7ACB\u4E00\u4E2A\u59D4\u5458\u4F1A\u4E13\u95E8\u8D1F\u8D23\u5236\u5B9Ac++\u6807\u51C6(ANSI\u5236\u5B9A\u4E86c\u8BED\u8A00\u7684\u6807\u51C6)\u3002\u56FD\u9645\u6807\u51C6\u5316\u7EC4\u7EC7(International Organization for Standardization\uFF0CISO)\u5F88\u5FEB\u901A\u8FC7\u81EA\u5DF1\u7684\u59D4\u5458\u4F1A\u52A0\u5165\u5230\u8FD9\u4E2A\u884C\u5217\uFF0C\u521B\u5EFA\u4E86\u8054\u5408\u7EC4\u7EC7ANSI/ISO,\u5236\u5B9Ac++\u6807\u51C6\u3002</p><p>\u7ECF\u8FC7\u591A\u5E74\u7684\u52AA\u529B\uFF0C\u5236\u5B9A\u51FA\u4E86\u4E00\u4E2A\u56FD\u9645\u6807\u51C6ISO/IEC 14882:1998 \uFF0C\u5E76\u4E8E1998\u5E74\u83B7\u5F97\u4E86ISO\u3001IEC(International Electrotechnical Committee,\u56FD\u9645\u7535\u5DE5\u6280\u672F\u59D4\u5458\u4F1A)\u548CANSI\u7684\u6279\u51C6\u3002\u8FD9\u4E2A\u6807\u51C6\u5C31\u662F\u6211\u4EEC\u7ECF\u5E38\u6240\u8BF4\u7684c++98\u3002\u5B83\u4E0D\u4EC5\u63CF\u8FF0\u4E86\u5DF2\u6709\u7684c++\u7279\u6027\uFF0C\u8FD8\u5BF9\u8BED\u8A00\u8FDB\u884C\u4E86\u6269\u5C55\uFF0C\u6DFB\u52A0\u4E86\u5F02\u5E38\u3001\u8FD0\u884C\u9636\u6BB5\u7C7B\u578B\u8BC6\u522B(RTTI)\u3001\u6A21\u677F\u548C\u6807\u51C6\u6A21\u677F\u5E93(STL).</p><p>2003\u5E74\uFF0C\u53D1\u5E03\u4E86c++\u6807\u51C6\u7B2C\u4E8C\u7248(IOS/IEC 14882:2003),\u8FD9\u4E00\u7248\u672C\u5BF9\u7B2C\u4E00\u7248\u4FEE\u8BA2\u4E86\u4E00\u4E9B\u9519\u8BEF\uFF0C\u4F46\u5E76\u6CA1\u6709\u6539\u53D8\u8BED\u8A00\u7279\u6027\uFF0C\u56E0\u6B64c++98\u8868\u793Ac++98/c++2003.</p><p>c++\u4E0D\u65AD\u53D1\u5C55\u3002IOS\u6807\u51C6\u59D4\u5458\u4F1A\u4E8E2011\u5E748\u6708\u6279\u51C6\u4E86\u65B0\u6807\u51C6ISO/IEC 14882:2011,\u8BE5\u6807\u51C6\u88AB\u79F0\u4E3Ac++11,\u4E0Ec++98\u4E00\u6837c++11\u4E5F\u65B0\u589E\u4E86\u8BB8\u591A\u7279\u6027\u3002</p><p>ISO c++\u6807\u51C6\u8FD8\u5438\u6536\u4E86ANSI c\u8BED\u8A00\u6807\u51C6\uFF0Cc++\u5C3D\u91CF\u505A\u5230\u662Fc\u7684\u8D85\u96C6\u3002\u610F\u5473\u7740\u5728\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C\u4EFB\u4F55\u6709\u6548\u7684c\u7A0B\u5E8F\u90FD\u5E94\u8BE5\u662F\u6709\u6548\u7684c++\u7A0B\u5E8F\u3002</p><p>ANSI\u4E0D\u4EC5\u5B9A\u4E49\u4E86c\u8BED\u8A00\uFF0C\u8FD8 \u5B9A\u4E49\u4E86\u4E00\u4E2AANSI c\u5FC5\u987B\u5B9E\u73B0\u7684\u6807\u51C6c\u5E93\u3002c++\u4E5F\u5728\u4F7F\u7528\u8FD9\u4E2A\u5E93\uFF0C\u53E6\u5916ANSI/ISO c++\u6807\u51C6\u8FD8\u63D0\u4F9B\u4E86\u4E00\u4E2Ac++\u6807\u51C6\u7C7B\u5E93\u3002</p><h3 id="_1-4-\u4E3A\u4EC0\u4E48c-\u4F1A\u6210\u529F" tabindex="-1"><a class="header-anchor" href="#_1-4-\u4E3A\u4EC0\u4E48c-\u4F1A\u6210\u529F" aria-hidden="true">#</a> 1.4 \u4E3A\u4EC0\u4E48C++\u4F1A\u6210\u529F</h3><p>c++\u6700\u521D\u7684\u76EE\u7684\u662F\u5C06c\u8BED\u8A00\u8F6C\u53D8\u4E3AOOP\uFF08\u9762\u5411\u5BF9\u8C61\u7A0B\u5E8F\u8BBE\u8BA1\uFF09\u8BED\u8A00\uFF0C\u4F46\u662Fc++\u540E\u6765\u5E76\u6CA1\u6709\u8FD9\u4E48\u505A\uFF0C\u800C\u662F\u7ACB\u8DB3\u4E8E\u7A0B\u5E8F\u7684\u5B9E\u9645\u3002\u56E0\u4E3A\u5728c\u8BED\u8A00\u65B9\u9762\u5927\u91CF\u6295\u5165\u7684\u7A0B\u5E8F\u5458\u4F7F\u5176\u5B8C\u5168\u4E22\u6389c\u8BED\u8A00\u90A3\u79CD\u7F16\u7A0B\u7684\u601D\u8003\u65B9\u5F0F\uFF0C\u8F6C\u800C\u53BB\u63A5\u53D7\u4E00\u79CD\u65B0\u7684\u8BED\u8A00\uFF0C\u65B0\u7684\u601D\u7EF4\uFF0C\u90A3\u4E48\u5C06\u4F1A\u5BFC\u81F4\u8FD9\u4E9B\u7A0B\u5E8F\u5458\u4E2D\u5927\u90E8\u5206\u4EBA\u5728\u77ED\u65F6\u95F4\u5185\u53EF\u80FD\u6BEB\u65E0\u6210\u679C\uFF0C\u4F7F\u5176\u751F\u4EA7\u7387\u964D\u4F4E\u3002\u4F46\u662F\u5982\u679C\u8BA9\u8FD9\u4E9Bc\u7A0B\u5E8F\u5458\u5728\u5DF2\u6709\u77E5\u8BC6\u7684\u57FA\u7840\u4E0A\uFF0C\u518D\u53BB\u5B66\u4E60c++\u8BED\u8A00\uFF0C\u7406\u89E3\u8FD0\u7528OOP\uFF0C\u90A3\u4E48\u4E5F\u53EA\u662F\u5728\u5176\u5DF2\u6709\u601D\u7EF4\u7684\u57FA\u7840\u4E0A\u8FDB\u884C\u6269\u5C55\u800C\u5DF2\uFF0C\u8FD9\u6837\u53EF\u4EE5\u4FDD\u6301\u5176\u66F4\u597D\u7684\u751F\u4EA7\u7387\u3002</p><p>\u7B80\u800C\u8A00\u4E4B\uFF0C\u5F3A\u8FEB\u7A0B\u5E8F\u5458\u653E\u5F03c\u8BED\u8A00\u548Cc\u8BED\u8A00\u7684\u601D\u8003\u65B9\u5F0F\uFF0C\u800C\u53BB\u8F6C\u5230OOP\u4E0A\u662F\u9700\u8981\u4EE3\u4EF7\u7684\uFF0C\u4F46\u662F\u4ECEc\u8BED\u8A00\u8F6C\u5230c++\u6240\u82B1\u8D39\u7684\u4EE3\u4EF7\u5C31\u4F1A\u5C0F\u5F88\u591A\u3002\u6240\u4EE5\u4E5F\u53EF\u4EE5\u7406\u89E3\u4E3Ac++\u7684\u51FA\u73B0\u5E76\u4E0D\u662F\u53BB\u66FF\u4EE3c,\u800C\u662F\u5BF9c\u7684\u6269\u5C55\uFF0C\u6240\u4EE5\u5728c++\u4E2D\u65E2\u53EF\u4EE5\u4F7F\u7528c++\u65B0\u7279\u6027\uFF0C\u5E76\u4E14\u53EF\u4EE5\u4F7F\u7528c\u7684\u8FC7\u7A0B\u5F0F\u601D\u7EF4\u6765\u7F16\u5199\u7A0B\u5E8F\u3002</p><p><strong>\u5BF9\u4E8E\u4F20\u7EDF\u7684\u7ED3\u6784\u5316\u8BED\u8A00\uFF0C\u6211\u4EEC\u5411\u6765\u6CA1\u6709\u592A\u591A\u7684\u7591\u60D1\uFF0C\u51FD\u6570\u8C03\u7528\u90A3\u4E48\u81EA\u7136\u800C\u660E\u663E\uFF0C\u53EA\u662F\u4ECE\u7A0B\u5E8F\u7684\u67D0\u4E00\u4E2A\u5730\u70B9\u8C03\u5230\u53E6\u4E00\u4E2A\u5730\u70B9\u53BB\u6267\u884C\u3002\u4F46\u662F\u5BF9\u4E8E\u9762\u5411\u5BF9\u8C61(OO)\u8BED\u8A00\uFF0C\u6211\u4EEC\u7591\u60D1\u5C31\u4F1A\u5F88\u591A\u3002\u5176\u539F\u56E0\u5C31\u662Fc++\u7F16\u8BD1\u5668\u4E3A\u6211\u4EEC\u7A0B\u5E8F\u5458\u505A\u4E86\u592A\u591A\u9690\u85CF\u7684\u5DE5\u4F5C\uFF1A\u6784\u9020\u51FD\u6570\uFF0C\u6790\u6784\u51FD\u6570\u3001\u865A\u51FD\u6570\u3001\u7EE7\u627F\u3001\u591A\u6001....\u6709\u65F6\u5019\u5B83\u4E3A\u6211\u4EEC\u5408\u6210\u51FA\u4E00\u4E9B\u989D\u5916\u7684\u51FD\u6570,\u6709\u65F6\u5019\u5B83\u53C8\u5077\u5077\u5728\u6211\u4EEC\u5199\u7684\u51FD\u6570\u91CC\uFF0C\u653E\u8FDB\u66F4\u591A\u7684\u64CD\u4F5C\u3002\u6709\u65F6\u5019\u4E5F\u4F1A\u7ED9\u6211\u4EEC\u7684\u5BF9\u8C61\u91CC\u653E\u8FDB\u4E00\u4E9B\u5947\u5999\u7684\u4E1C\u897F\uFF0C\u4F7F\u5F97\u6211\u4EECsizeof\u7684\u65F6\u5019\u7ED3\u679C\u53EF\u6211\u4EEC\u9884\u671F\u4E0D\u4E00\u6837\u3002</strong></p><h2 id="_2-c-\u521D\u8BC6" tabindex="-1"><a class="header-anchor" href="#_2-c-\u521D\u8BC6" aria-hidden="true">#</a> 2.c++\u521D\u8BC6</h2><h3 id="_2-1-1-c-hello-world" tabindex="-1"><a class="header-anchor" href="#_2-1-1-c-hello-world" aria-hidden="true">#</a> 2.1.1 c++ hello world</h3><p>\u8BF7\u6253\u5F00\u4EE5\u4E0B\u793A\u4F8B\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
using namespace std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello world&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>\u5206\u6790:</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token operator">-</span> #include<span class="token operator">&lt;</span>iostream<span class="token operator">&gt;</span><span class="token punctuation">;</span> \u9884\u7F16\u8BD1\u6307\u4EE4\uFF0C\u5F15\u5165\u5934\u6587\u4EF6iostream<span class="token punctuation">.</span>

<span class="token operator">-</span> using namespace std<span class="token punctuation">;</span> \u4F7F\u7528\u6807\u51C6\u547D\u540D\u7A7A\u95F4

<span class="token operator">-</span> cout <span class="token operator">&lt;&lt;</span> \u201Chello world\u201D<span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> \u548Cprintf\u529F\u80FD\u4E00\u6837\uFF0C\u8F93\u51FA\u5B57\u7B26\u4E32\u201Dhello wrold\u201D
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>\u95EE\u98981</strong>\uFF1Ac++\u5934\u6587\u4EF6\u4E3A\u4EC0\u4E48\u6CA1\u6709.h\uFF1F</p><p>\u5728c\u8BED\u8A00\u4E2D\u5934\u6587\u4EF6\u4F7F\u7528\u6269\u5C55\u540D.h,\u5C06\u5176\u4F5C\u4E3A\u4E00\u79CD\u901A\u8FC7\u540D\u79F0\u6807\u8BC6\u6587\u4EF6\u7C7B\u578B\u7684\u7B80\u5355\u65B9\u5F0F\u3002\u4F46\u662Fc++\u5F97\u7528\u6CD5\u6539\u53D8\u4E86\uFF0Cc++\u5934\u6587\u4EF6\u6CA1\u6709\u6269\u5C55\u540D\u3002\u4F46\u662F\u6709\u4E9Bc\u8BED\u8A00\u7684\u5934\u6587\u4EF6\u88AB\u8F6C\u6362\u4E3Ac++\u7684\u5934\u6587\u4EF6\uFF0C\u8FD9\u4E9B\u6587\u4EF6\u88AB\u91CD\u65B0\u547D\u540D\uFF0C\u4E22\u6389\u4E86\u6269\u5C55\u540D.h(\u4F7F\u4E4B\u6210\u4E3Ac++\u98CE\u683C\u5934\u6587\u4EF6)\uFF0C\u5E76\u5728\u6587\u4EF6\u540D\u79F0\u524D\u9762\u52A0\u4E0A\u524D\u7F00c(\u8868\u660E\u6765\u81EAc\u8BED\u8A00)\u3002\u4F8B\u5982c++\u7248\u672C\u7684math.h\u4E3Acmath.</p><p>\u7531\u4E8EC\u4F7F\u7528\u4E0D\u540C\u7684\u6269\u5C55\u540D\u6765\u8868\u793A\u4E0D\u540C\u6587\u4EF6\u7C7B\u578B\uFF0C\u56E0\u6B64\u7528\u4E00\u4E9B\u7279\u6B8A\u7684\u6269\u5C55\u540D(\u5982hpp\u6216hxx)\u8868\u793Ac++\u7684\u5934\u6587\u4EF6\u4E5F\u662F\u53EF\u4EE5\u7684\uFF0CANSI/IOS\u6807\u51C6\u59D4\u5458\u4F1A\u4E5F\u8BA4\u4E3A\u662F\u53EF\u4EE5\u7684\uFF0C\u4F46\u662F\u5173\u952E\u95EE\u9898\u662F\u7528\u54EA\u4E2A\u6BD4\u8F83\u597D\uFF0C\u6700\u540E\u4E00\u81F4\u540C\u610F\u4E0D\u9002\u7528\u4EFB\u4F55\u6269\u5C55\u540D\u3002</p><table><thead><tr><th>\u5934\u6587\u4EF6\u7C7B\u578B</th><th>\u7EA6\u5B9A</th><th>\u793A\u4F8B</th><th style="text-align:left;">\u8BF4\u660E</th></tr></thead><tbody><tr><td>c++\u65E7\u5F0F\u98CE\u683C</td><td>\u4EE5.h\u7ED3\u5C3E</td><td>iostream.h</td><td style="text-align:left;">c++\u7A0B\u5E8F\u53EF\u7528</td></tr><tr><td>c\u65E7\u5F0F\u98CE\u683C</td><td>\u4EE5.h\u7ED3\u5C3E</td><td>math.h</td><td style="text-align:left;">c/c++\u7A0B\u5E8F\u53EF\u7528</td></tr><tr><td>c++\u65B0\u5F0F\u98CE\u683C</td><td>\u65E0\u6269\u5C55\u540D</td><td>iostream</td><td style="text-align:left;">c++\u7A0B\u5E8F\u53EF\u7528\uFF0C\u4F7F\u7528namespace std</td></tr><tr><td>\u8F6C\u6362\u540E\u7684c</td><td>\u52A0\u4E0A\u524D\u7F00c,\u65E0\u6269\u5C55\u540D</td><td>cmath</td><td style="text-align:left;">c++\u7A0B\u5E8F\u53EF\u7528\uFF0C\u53EF\u4F7F\u7528\u975Ec\u7279\u6027\uFF0C\u5982namespace std</td></tr></tbody></table><p><strong>\u95EE\u98982</strong>\uFF1Ausing namespace std \u662F\u4EC0\u4E48?</p><p>namespace\u662F\u6307\u6807\u8BC6\u7B26\u7684\u5404\u79CD\u53EF\u89C1\u8303\u56F4\u3002\u547D\u540D\u7A7A\u95F4\u7528\u5173\u952E\u5B57namespace \u6765\u5B9A\u4E49\u3002\u547D\u540D\u7A7A\u95F4\u662FC++\u7684\u4E00\u79CD\u673A\u5236\uFF0C\u7528\u6765\u628A\u5355\u4E2A\u6807\u8BC6\u7B26\u4E0B\u7684\u5927\u91CF\u6709\u903B\u8F91\u8054\u7CFB\u7684\u7A0B\u5E8F\u5B9E\u4F53\u7EC4\u5408\u5230\u4E00\u8D77\u3002\u6B64\u6807\u8BC6\u7B26\u4F5C\u4E3A\u6B64\u7EC4\u7FA4\u7684\u540D\u5B57\u3002</p><p><strong>\u95EE\u98983</strong>\uFF1Acout \u3001endl \u662F\u4EC0\u4E48\uFF1F</p><p>cout\u662Fc++\u4E2D\u7684\u6807\u51C6\u8F93\u51FA\u6D41\uFF0Cendl\u662F\u8F93\u51FA\u6362\u884C\u5E76\u5237\u65B0\u7F13\u51B2\u533A\u3002</p><h3 id="_2-1-3-\u9762\u5411\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#_2-1-3-\u9762\u5411\u8FC7\u7A0B" aria-hidden="true">#</a> 2.1.3 \u9762\u5411\u8FC7\u7A0B</h3><p>\u9762\u5411\u8FC7\u7A0B\u662F\u4E00\u79CD\u4EE5\u8FC7\u7A0B\u4E3A\u4E2D\u5FC3\u7684\u7F16\u7A0B\u601D\u60F3\u3002</p><p>\u901A\u8FC7\u5206\u6790\u51FA\u89E3\u51B3\u95EE\u9898\u6240\u9700\u8981\u7684\u6B65\u9AA4\uFF0C\u7136\u540E\u7528\u51FD\u6570\u628A\u8FD9\u4E9B\u6B65\u9AA4\u4E00\u6B65\u4E00\u6B65\u5B9E\u73B0\uFF0C\u4F7F\u7528\u7684\u65F6\u5019\u4E00\u4E2A\u4E00\u4E2A\u4F9D\u6B21\u8C03\u7528\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u9762\u5411\u8FC7\u7A0B\u7F16\u7A0B\u601D\u60F3\u7684\u6838\u5FC3\uFF1A\u529F\u80FD\u5206\u89E3\uFF0C\u81EA\u9876\u5411\u4E0B\uFF0C\u9010\u5C42\u7EC6\u5316**\uFF08\u7A0B\u5E8F=\u6570\u636E\u7ED3\u6784+\u7B97\u6CD5\uFF09**\u3002</p><p>\u9762\u5411\u8FC7\u7A0B\u7F16\u7A0B\u8BED\u8A00\u5B58\u5728\u7684\u4E3B\u8981\u7F3A\u70B9\u662F\u4E0D\u7B26\u5408\u4EBA\u7684\u601D\u7EF4\u4E60\u60EF\uFF0C\u800C\u662F\u8981\u7528\u8BA1\u7B97\u673A\u7684\u601D\u7EF4\u65B9\u5F0F\u53BB\u5904\u7406\u95EE\u9898\uFF0C\u800C\u4E14\u9762\u5411\u8FC7\u7A0B\u7F16\u7A0B\u8BED\u8A00\u91CD\u7528\u6027\u4F4E\uFF0C\u7EF4\u62A4\u56F0\u96BE\u3002</p><h3 id="_2-1-4-\u9762\u5411\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-1-4-\u9762\u5411\u5BF9\u8C61" aria-hidden="true">#</a> 2.1.4 \u9762\u5411\u5BF9\u8C61</h3><p><strong>\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B</strong>\uFF08Object-Oriented Programming\uFF09\u7B80\u79F0 OOP \u6280\u672F\uFF0C\u662F\u5F00\u53D1\u8BA1\u7B97\u673A\u5E94\u7528\u7A0B\u5E8F\u7684\u4E00\u79CD\u65B0\u65B9\u6CD5\u3001\u65B0\u601D\u60F3\u3002\u8FC7\u53BB\u7684\u9762\u5411\u8FC7\u7A0B\u7F16\u7A0B\u5E38\u5E38\u4F1A\u5BFC\u81F4\u6240\u6709\u7684\u4EE3\u7801\u90FD\u5305\u542B\u5728\u51E0\u4E2A\u6A21\u5757\u4E2D\uFF0C\u4F7F\u7A0B\u5E8F\u96BE\u4EE5\u9605\u8BFB\u548C\u7EF4\u62A4\u3002\u5728\u505A\u4E00\u4E9B\u4FEE\u6539\u65F6\u5E38\u5E38\u7275\u4E00\u52A8\u767E\uFF0C\u4F7F\u4EE5\u540E\u7684\u5F00\u53D1\u548C\u7EF4\u62A4\u96BE\u4EE5\u4E3A\u7EE7\u3002\u800C\u4F7F\u7528 OOP \u6280\u672F\uFF0C\u5E38\u5E38\u8981\u4F7F\u7528\u8BB8\u591A\u4EE3\u7801\u6A21\u5757\uFF0C\u6BCF\u4E2A\u6A21\u5757\u90FD\u53EA\u63D0\u4F9B\u7279\u5B9A\u7684\u529F\u80FD\uFF0C\u5B83\u4EEC\u662F\u5F7C\u6B64\u72EC\u7ACB\u7684\uFF0C\u8FD9\u6837\u5C31\u589E\u5927\u4E86\u4EE3\u7801\u91CD\u7528\u7684\u51E0\u7387\uFF0C\u66F4\u52A0\u6709\u5229\u4E8E\u8F6F\u4EF6\u7684\u5F00\u53D1\u3001\u7EF4\u62A4\u548C\u5347\u7EA7\u3002</p><p>\u5728\u9762\u5411\u5BF9\u8C61\u4E2D\uFF0C<strong>\u7B97\u6CD5\u4E0E\u6570\u636E\u7ED3\u6784\u88AB\u770B\u505A\u662F\u4E00\u4E2A\u6574\u4F53\uFF0C\u79F0\u4F5C\u5BF9\u8C61</strong>\uFF0C\u73B0\u5B9E\u4E16\u754C\u4E2D\u4EFB\u4F55\u7C7B\u7684\u5BF9\u8C61\u90FD\u5177\u6709\u4E00\u5B9A\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\uFF0C\u4E5F\u603B\u80FD\u7528\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5\u4E24\u8005\u5408\u4E00\u5730\u6765\u63CF\u8FF0\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u7B49\u5F0F\u6765\u5B9A\u4E49\u5BF9\u8C61\u548C\u7A0B\u5E8F\uFF1A</p><p><strong>\u5BF9\u8C61 = \u7B97\u6CD5 + \u6570\u636E\u7ED3\u6784</strong></p><p><strong>\u7A0B\u5E8F = \u5BF9\u8C61 + \u5BF9\u8C61 + \u2026\u2026</strong></p><p>\u4ECE\u4E0A\u9762\u7684\u7B49\u5F0F\u53EF\u4EE5\u770B\u51FA\uFF0C\u7A0B\u5E8F\u5C31\u662F\u8BB8\u591A\u5BF9\u8C61\u5728\u8BA1\u7B97\u673A\u4E2D\u76F8\u7EE7\u8868\u73B0\u81EA\u5DF1\uFF0C\u800C\u5BF9\u8C61\u5219\u662F\u4E00\u4E2A\u4E2A\u7A0B\u5E8F\u5B9E\u4F53\u3002</p><p>\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u601D\u60F3\u7684\u6838\u5FC3\uFF1A\u5E94\u5BF9\u53D8\u5316\uFF0C\u63D0\u9AD8\u590D\u7528\u3002</p><h3 id="_2-1-5-\u9762\u5411\u5BF9\u8C61\u4E09\u5927\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_2-1-5-\u9762\u5411\u5BF9\u8C61\u4E09\u5927\u7279\u6027" aria-hidden="true">#</a> 2.1.5 \u9762\u5411\u5BF9\u8C61\u4E09\u5927\u7279\u6027</h3><ul><li>\u5C01\u88C5</li></ul><p>\u628A\u5BA2\u89C2\u4E8B\u7269\u5C01\u88C5\u6210\u62BD\u8C61\u7684\u7C7B\uFF0C\u5E76\u4E14\u7C7B\u53EF\u4EE5\u628A\u81EA\u5DF1\u7684\u6570\u636E\u548C\u65B9\u6CD5\u53EA\u8BA9\u53EF\u4FE1\u7684\u7C7B\u6216\u8005\u5BF9\u8C61\u64CD\u4F5C\uFF0C\u5BF9\u4E0D\u53EF\u4FE1\u7684\u8FDB\u884C\u4FE1\u606F\u9690\u85CF\u3002</p><p>\u7C7B\u5C06\u6210\u5458\u53D8\u91CF\u548C\u6210\u5458\u51FD\u6570\u5C01\u88C5\u5728\u7C7B\u7684\u5185\u90E8\uFF0C\u6839\u636E\u9700\u8981\u8BBE\u7F6E\u8BBF\u95EE\u6743\u9650\uFF0C\u901A\u8FC7\u6210\u5458\u51FD\u6570\u7BA1\u7406\u5185\u90E8\u72B6\u6001\u3002</p><ul><li>\u7EE7\u627F</li></ul><p>\u7EE7\u627F\u6240\u8868\u8FBE\u7684\u662F\u7C7B\u4E4B\u95F4\u76F8\u5173\u7684\u5173\u7CFB\uFF0C\u8FD9\u79CD\u5173\u7CFB\u4F7F\u5F97\u5BF9\u8C61\u53EF\u4EE5\u7EE7\u627F\u53E6\u5916\u4E00\u7C7B\u5BF9\u8C61\u7684\u7279\u5F81\u548C\u80FD\u529B\u3002</p><p>\u7EE7\u627F\u7684\u4F5C\u7528\uFF1A\u907F\u514D\u516C\u7528\u4EE3\u7801\u7684\u91CD\u590D\u5F00\u53D1\uFF0C\u51CF\u5C11\u4EE3\u7801\u548C\u6570\u636E\u5197\u4F59\u3002</p><ul><li>\u591A\u6001</li></ul><p>\u591A\u6001\u6027\u53EF\u4EE5\u7B80\u5355\u5730\u6982\u62EC\u4E3A\u201C\u4E00\u4E2A\u63A5\u53E3\uFF0C\u591A\u79CD\u65B9\u6CD5\u201D\uFF0C\u5B57\u9762\u610F\u601D\u4E3A\u591A\u79CD\u5F62\u6001\u3002\u7A0B\u5E8F\u5728\u8FD0\u884C\u65F6\u624D\u51B3\u5B9A\u8C03\u7528\u7684\u51FD\u6570\uFF0C\u5B83\u662F\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u9886\u57DF\u7684\u6838\u5FC3\u6982\u5FF5\u3002</p><h2 id="_3-c-\u5BF9c\u7684\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_3-c-\u5BF9c\u7684\u6269\u5C55" aria-hidden="true">#</a> 3.c++\u5BF9c\u7684\u6269\u5C55</h2><h3 id="_3-1-\u4F5C\u7528\u57DF\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4F5C\u7528\u57DF\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 3.1 ::\u4F5C\u7528\u57DF\u8FD0\u7B97\u7B26</h3><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u6709\u4E24\u4E2A\u540C\u540D\u53D8\u91CF\uFF0C\u4E00\u4E2A\u662F\u5168\u5C40\u53D8\u91CF\uFF0C\u53E6\u4E00\u4E2A\u662F\u5C40\u90E8\u53D8\u91CF\uFF0C\u90A3\u4E48\u5C40\u90E8\u53D8\u91CF\u5728\u5176\u4F5C\u7528\u57DF\u5185\u5177\u6709\u8F83\u9AD8\u7684\u4F18\u5148\u6743\uFF0C\u5B83\u5C06\u5C4F\u853D\u5168\u5C40\u53D8\u91CF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5168\u5C40\u53D8\u91CF</span>
<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u5C40\u90E8\u53D8\u91CF</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5168\u5C40a\u88AB\u9690\u85CF</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7A0B\u5E8F\u7684\u8F93\u51FA\u7ED3\u679C\u662Fa:20\u3002\u5728test\u51FD\u6570\u7684\u8F93\u51FA\u8BED\u53E5\u4E2D\uFF0C\u4F7F\u7528\u7684\u53D8\u91CFa\u662Ftest\u51FD\u6570\u5185\u5B9A\u4E49\u7684\u5C40\u90E8\u53D8\u91CF\uFF0C\u56E0\u6B64\u8F93\u51FA\u7684\u7ED3\u679C\u4E3A\u5C40\u90E8\u53D8\u91CFa\u7684\u503C\u3002</p><p>**\u4F5C\u7528\u57DF\u8FD0\u7B97\u7B26\u53EF\u4EE5\u7528\u6765\u89E3\u51B3\u5C40\u90E8\u53D8\u91CF\u4E0E\u5168\u5C40\u53D8\u91CF\u7684\u91CD\u540D\u95EE\u9898 **</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5168\u5C40\u53D8\u91CF</span>
<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment">//1. \u5C40\u90E8\u53D8\u91CF\u548C\u5168\u5C40\u53D8\u91CF\u540C\u540D</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6253\u5370\u5C40\u90E8\u53D8\u91CFa</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5C40\u90E8\u53D8\u91CFa:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u6253\u5370\u5168\u5C40\u53D8\u91CFa</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5168\u5C40\u53D8\u91CFa:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u4EE5\u770B\u51FA\uFF0C\u4F5C\u7528\u57DF\u8FD0\u7B97\u7B26\u53EF\u4EE5\u7528\u6765\u89E3\u51B3\u5C40\u90E8\u53D8\u91CF\u4E0E\u5168\u5C40\u53D8\u91CF\u7684\u91CD\u540D\u95EE\u9898\uFF0C\u5373\u5728\u5C40\u90E8\u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u5185\uFF0C\u53EF\u7528::\u5BF9\u88AB\u5C4F\u853D\u7684\u540C\u540D\u7684\u5168\u5C40\u53D8\u91CF\u8FDB\u884C\u8BBF\u95EE\u3002</p><h3 id="_3-2-\u540D\u5B57\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#_3-2-\u540D\u5B57\u63A7\u5236" aria-hidden="true">#</a> 3.2 \u540D\u5B57\u63A7\u5236</h3><p>\u521B\u5EFA\u540D\u5B57\u662F\u7A0B\u5E8F\u8BBE\u8BA1\u8FC7\u7A0B\u4E2D\u4E00\u9879\u6700\u57FA\u672C\u7684\u6D3B\u52A8\uFF0C\u5F53\u4E00\u4E2A\u9879\u76EE\u5F88\u5927\u65F6\uFF0C\u5B83\u4F1A\u4E0D\u53EF\u907F\u514D\u5730\u5305\u542B\u5927\u91CF\u540D\u5B57\u3002c++\u5141\u8BB8\u6211\u4EEC\u5BF9\u540D\u5B57\u7684\u4EA7\u751F\u548C\u540D\u5B57\u7684\u53EF\u89C1\u6027\u8FDB\u884C\u63A7\u5236\u3002</p><p>\u6211\u4EEC\u4E4B\u524D\u5728\u5B66\u4E60c\u8BED\u8A00\u53EF\u4EE5\u901A\u8FC7static\u5173\u952E\u5B57\u6765\u4F7F\u5F97\u540D\u5B57\u53EA\u5F97\u5728\u672C\u7F16\u8BD1\u5355\u5143\u5185\u53EF\u89C1\uFF0C\u5728c++\u4E2D\u6211\u4EEC\u5C06\u901A\u8FC7\u4E00\u79CD\u901A\u8FC7\u547D\u540D\u7A7A\u95F4\u6765\u63A7\u5236\u5BF9\u540D\u5B57\u7684\u8BBF\u95EE\u3002</p><h4 id="_3-2-1-c-\u547D\u540D\u7A7A\u95F4-namespace" tabindex="-1"><a class="header-anchor" href="#_3-2-1-c-\u547D\u540D\u7A7A\u95F4-namespace" aria-hidden="true">#</a> 3.2.1 c++\u547D\u540D\u7A7A\u95F4\uFF08namespace\uFF09</h4><p>\u5728c++\u4E2D\uFF0C\u540D\u79F0\uFF08name\uFF09\u53EF\u4EE5\u662F\u7B26\u53F7\u5E38\u91CF\u3001\u53D8\u91CF\u3001\u51FD\u6570\u3001\u7ED3\u6784\u3001\u679A\u4E3E\u3001\u7C7B\u548C\u5BF9\u8C61\u7B49\u7B49\u3002\u5DE5\u7A0B\u8D8A\u5927\uFF0C\u540D\u79F0\u4E92\u76F8\u51B2\u7A81\u6027\u7684\u53EF\u80FD\u6027\u8D8A\u5927\u3002\u53E6\u5916\u4F7F\u7528\u591A\u4E2A\u5382\u5546\u7684\u7C7B\u5E93\u65F6\uFF0C\u4E5F\u53EF\u80FD\u5BFC\u81F4\u540D\u79F0\u51B2\u7A81\u3002\u4E3A\u4E86\u907F\u514D\uFF0C\u5728\u5927\u89C4\u6A21\u7A0B\u5E8F\u7684\u8BBE\u8BA1\u4E2D\uFF0C\u4EE5\u53CA\u5728\u7A0B\u5E8F\u5458\u4F7F\u7528\u5404\u79CD\u5404\u6837\u7684C++\u5E93\u65F6\uFF0C\u8FD9\u4E9B\u6807\u8BC6\u7B26\u7684\u547D\u540D\u53D1\u751F\u51B2\u7A81\uFF0C\u6807\u51C6C++\u5F15\u5165\u5173\u952E\u5B57namespace\uFF08\u547D\u540D\u7A7A\u95F4/\u540D\u5B57\u7A7A\u95F4/\u540D\u79F0\u7A7A\u95F4\uFF09\uFF0C\u53EF\u4EE5\u66F4\u597D\u5730\u63A7\u5236\u6807\u8BC6\u7B26\u7684\u4F5C\u7528\u57DF\u3002</p><h4 id="_3-2-2-\u547D\u540D\u7A7A\u95F4\u4F7F\u7528\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-2-\u547D\u540D\u7A7A\u95F4\u4F7F\u7528\u8BED\u6CD5" aria-hidden="true">#</a> 3.2.2 \u547D\u540D\u7A7A\u95F4\u4F7F\u7528\u8BED\u6CD5</h4><p>\u521B\u5EFA\u4E00\u4E2A\u547D\u540D\u7A7A\u95F4:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	namespace A<span class="token punctuation">{</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	namespace B<span class="token punctuation">{</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A::a : &quot;</span> <span class="token operator">&lt;&lt;</span> A<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;B::a : &quot;</span> <span class="token operator">&lt;&lt;</span> B<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u547D\u540D\u7A7A\u95F4\u53EA\u80FD\u5168\u5C40\u8303\u56F4\u5185\u5B9A\u4E49\uFF08<em><strong>*\u4EE5\u4E0B\u9519\u8BEF\u5199\u6CD5*</strong></em>\uFF09</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	namespace A<span class="token punctuation">{</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	namespace B<span class="token punctuation">{</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A::a : &quot;</span> <span class="token operator">&lt;&lt;</span> A<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;B::a : &quot;</span> <span class="token operator">&lt;&lt;</span> B<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u547D\u540D\u7A7A\u95F4\u53EF\u5D4C\u5957\u547D\u540D\u7A7A\u95F4</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace A<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	namespace B<span class="token punctuation">{</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A::a : &quot;</span> <span class="token operator">&lt;&lt;</span> A<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A::B::a : &quot;</span> <span class="token operator">&lt;&lt;</span> A<span class="token operator">::</span>B<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u547D\u540D\u7A7A\u95F4\u662F\u5F00\u653E\u7684\uFF0C\u5373\u53EF\u4EE5\u968F\u65F6\u628A\u65B0\u7684\u6210\u5458\u52A0\u5165\u5DF2\u6709\u7684\u547D\u540D\u7A7A\u95F4\u4E2D</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace A<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

namespace A<span class="token punctuation">{</span>
	<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello namespace!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A::a : &quot;</span> <span class="token operator">&lt;&lt;</span> A<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	A<span class="token operator">::</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u58F0\u660E\u548C\u5B9E\u73B0\u53EF\u5206\u79BB</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span>

namespace MySpace<span class="token punctuation">{</span>
	<span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">int</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> MySpace<span class="token operator">::</span><span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;MySpace::func1&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> MySpace<span class="token operator">::</span><span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">int</span> param<span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;MySpace::func2 : &quot;</span> <span class="token operator">&lt;&lt;</span> param <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u65E0\u540D\u547D\u540D\u7A7A\u95F4\uFF0C\u610F\u5473\u7740\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u6807\u8BC6\u7B26\u53EA\u80FD\u5728\u672C\u6587\u4EF6\u5185\u8BBF\u95EE\uFF0C\u76F8\u5F53\u4E8E\u7ED9\u8FD9\u4E2A\u6807\u8BC6\u7B26\u52A0\u4E0A\u4E86static\uFF0C\u4F7F\u5F97\u5176\u53EF\u4EE5\u4F5C\u4E3A\u5185\u90E8\u8FDE\u63A5</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace<span class="token punctuation">{</span>
   
   <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
   <span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello namespace&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a : &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
   <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u547D\u540D\u7A7A\u95F4\u522B\u540D</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace veryLongName<span class="token punctuation">{</span>
	
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello namespace&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	namespace shortName <span class="token operator">=</span> veryLongName<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;veryLongName::a : &quot;</span> <span class="token operator">&lt;&lt;</span> shortName<span class="token operator">::</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	veryLongName<span class="token operator">::</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	shortName<span class="token operator">::</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_3-2-3-using-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_3-2-3-using-\u58F0\u660E" aria-hidden="true">#</a> 3.2.3 using \u58F0\u660E</h4><p>using\u58F0\u660E\u53EF\u4F7F\u5F97\u6307\u5B9A\u7684\u6807\u8BC6\u7B26\u53EF\u7528\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace A<span class="token punctuation">{</span>
	<span class="token keyword">int</span> paramA <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> paramB <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello funcA&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">funcB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello funcA&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//1. \u901A\u8FC7\u547D\u540D\u7A7A\u95F4\u57DF\u8FD0\u7B97\u7B26</span>
	cout <span class="token operator">&lt;&lt;</span> A<span class="token operator">::</span>paramA <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	A<span class="token operator">::</span><span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//2. using\u58F0\u660E</span>
	using A<span class="token operator">::</span>paramA<span class="token punctuation">;</span>
	using A<span class="token operator">::</span>funcA<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> paramA <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//cout &lt;&lt; paramB &lt;&lt; endl; //\u4E0D\u53EF\u76F4\u63A5\u8BBF\u95EE</span>
	<span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//3. \u540C\u540D\u51B2\u7A81</span>
	<span class="token comment">//int paramA = 20; //\u76F8\u540C\u4F5C\u7528\u57DF\u6CE8\u610F\u540C\u540D\u51B2\u7A81</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>using\u58F0\u660E\u78B0\u5230\u51FD\u6570\u91CD\u8F7D</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace A<span class="token punctuation">{</span>
	<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token keyword">int</span>  <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	using A<span class="token operator">::</span>func<span class="token punctuation">;</span>
	<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">func</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">func</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5982\u679C\u547D\u540D\u7A7A\u95F4\u5305\u542B\u4E00\u7EC4\u7528\u76F8\u540C\u540D\u5B57\u91CD\u8F7D\u7684\u51FD\u6570\uFF0Cusing\u58F0\u660E\u5C31\u58F0\u660E\u4E86\u8FD9\u4E2A\u91CD\u8F7D\u51FD\u6570\u7684\u6240\u6709\u96C6\u5408\u3002</p><h4 id="_3-2-4-using-\u7F16\u8BD1\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#_3-2-4-using-\u7F16\u8BD1\u6307\u4EE4" aria-hidden="true">#</a> 3.2.4 using \u7F16\u8BD1\u6307\u4EE4</h4><p>using\u7F16\u8BD1\u6307\u4EE4\u4F7F\u6574\u4E2A\u547D\u540D\u7A7A\u95F4\u6807\u8BC6\u7B26\u53EF\u7528.</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace A<span class="token punctuation">{</span>
	<span class="token keyword">int</span> paramA <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> paramB <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello funcA&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">funcB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello funcB&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	using namespace A<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> paramA <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> paramB <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">funcB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//\u4E0D\u4F1A\u4EA7\u751F\u4E8C\u4E49\u6027</span>
	<span class="token keyword">int</span> paramA <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> paramA <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

namespace B<span class="token punctuation">{</span>
	<span class="token keyword">int</span> paramA <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> paramB <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello funcA&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">funcB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hello funcB&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	using namespace A<span class="token punctuation">;</span>
	using namespace B<span class="token punctuation">;</span>
	<span class="token comment">//\u4E8C\u4E49\u6027\u4EA7\u751F\uFF0C\u4E0D\u77E5\u9053\u8C03\u7528A\u8FD8\u662FB\u7684paramA</span>
	<span class="token comment">//cout &lt;&lt; paramA &lt;&lt; endl;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><strong>\u6CE8\u610F\uFF1A\u4F7F\u7528using\u58F0\u660E\u6216using\u7F16\u8BD1\u6307\u4EE4\u4F1A\u589E\u52A0\u547D\u540D\u51B2\u7A81\u7684\u53EF\u80FD\u6027\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u6709\u540D\u79F0\u7A7A\u95F4\uFF0C\u5E76\u5728\u4EE3\u7801\u4E2D\u4F7F\u7528\u4F5C\u7528\u57DF\u89E3\u6790\u8FD0\u7B97\u7B26\uFF0C\u5219\u4E0D\u4F1A\u51FA\u73B0\u4E8C\u4E49\u6027\u3002</strong></p><h4 id="_3-2-5-\u547D\u540D\u7A7A\u95F4\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_3-2-5-\u547D\u540D\u7A7A\u95F4\u4F7F\u7528" aria-hidden="true">#</a> 3.2.5 \u547D\u540D\u7A7A\u95F4\u4F7F\u7528</h4><p>\u8981\u8BB0\u4F4F\u7684\u5173\u952E\u95EE\u9898\u662F\u5F53\u5F15\u5165\u4E00\u4E2A\u5168\u5C40\u7684using\u7F16\u8BD1\u6307\u4EE4\u65F6\uFF0C\u5C31\u4E3A\u8BE5\u6587\u4EF6\u6253\u5F00\u4E86\u8BE5\u547D\u540D\u7A7A\u95F4\uFF0C\u5B83\u4E0D\u4F1A\u5F71\u54CD\u4EFB\u4F55\u5176\u4ED6\u7684\u6587\u4EF6\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5728\u6BCF\u4E00\u4E2A\u5B9E\u73B0\u6587\u4EF6\u4E2D\u8C03\u6574\u5BF9\u547D\u540D\u7A7A\u95F4\u7684\u63A7\u5236\u3002\u6BD4\u5982\uFF0C\u5982\u679C\u53D1\u73B0\u67D0\u4E00\u4E2A\u5B9E\u73B0\u6587\u4EF6\u4E2D\u6709\u592A\u591A\u7684using\u6307\u4EE4\u800C\u4EA7\u751F\u7684\u547D\u540D\u51B2\u7A81\uFF0C\u5C31\u8981\u5BF9\u8BE5\u6587\u4EF6\u505A\u4E2A\u7B80\u5355\u7684\u6539\u53D8\uFF0C\u901A\u8FC7\u660E\u786E\u7684\u9650\u5B9A\u6216\u8005using\u58F0\u660E\u6765\u6D88\u9664\u540D\u5B57\u51B2\u7A81\uFF0C\u8FD9\u6837\u4E0D\u9700\u8981\u4FEE\u6539\u5176\u4ED6\u7684\u5B9E\u73B0\u6587\u4EF6\u3002</p><h3 id="_3-3-\u5168\u5C40\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#_3-3-\u5168\u5C40\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A" aria-hidden="true">#</a> 3.3 \u5168\u5C40\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A</h3><p>c\u8BED\u8A00\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//\u8D4B\u503C\uFF0C\u5F53\u505A\u5B9A\u4E49</span>
<span class="token keyword">int</span> a<span class="token punctuation">;</span> <span class="token comment">//\u6CA1\u6709\u8D4B\u503C\uFF0C\u5F53\u505A\u58F0\u660E</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a:%d\\n&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6B64\u4EE3\u7801\u5728c++\u4E0B\u7F16\u8BD1\u5931\u8D25,\u5728c\u4E0B\u7F16\u8BD1\u901A\u8FC7.</p><h3 id="_3-4-c-\u4E2D\u6240\u6709\u7684\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_3-4-c-\u4E2D\u6240\u6709\u7684\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B" aria-hidden="true">#</a> 3.4 c++\u4E2D\u6240\u6709\u7684\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B</h3><p>c\u8BED\u8A00\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//i\u6CA1\u6709\u5199\u7C7B\u578B\uFF0C\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B</span>
<span class="token keyword">int</span> <span class="token function">fun1</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//i\u6CA1\u6709\u5199\u7C7B\u578B\uFF0C\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B</span>
<span class="token keyword">int</span> <span class="token function">fun2</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6CA1\u6709\u5199\u53C2\u6570\uFF0C\u4EE3\u8868\u53EF\u4EE5\u4F20\u4EFB\u4F55\u7C7B\u578B\u7684\u5B9E\u53C2</span>
<span class="token keyword">int</span> <span class="token function">fun3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;fun33333333333333333\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//C\u8BED\u8A00\uFF0C\u5982\u679C\u51FD\u6570\u6CA1\u6709\u53C2\u6570\uFF0C\u5EFA\u8BAE\u5199void\uFF0C\u4EE3\u8868\u6CA1\u6709\u53C2\u6570</span>
<span class="token keyword">int</span> <span class="token function">fun4</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;fun4444444444444\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token function">fun1</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">fun2</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">fun3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;g = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u4EE5\u4E0Ac\u4EE3\u7801c\u7F16\u8BD1\u5668\u7F16\u8BD1\u53EF\u901A\u8FC7\uFF0Cc++\u7F16\u8BD1\u5668\u65E0\u6CD5\u7F16\u8BD1\u901A\u8FC7\u3002</p><ul><li><p>\u5728C\u8BED\u8A00\u4E2D\uFF0Cint fun() \u8868\u793A\u8FD4\u56DE\u503C\u4E3Aint\uFF0C\u63A5\u53D7\u4EFB\u610F\u53C2\u6570\u7684\u51FD\u6570\uFF0Cint fun(void) \u8868\u793A\u8FD4\u56DE\u503C\u4E3Aint\u7684\u65E0\u53C2\u51FD\u6570\u3002</p></li><li><p>\u5728C++ \u4E2D\uFF0Cint fun() \u548Cint fun(void) \u5177\u6709\u76F8\u540C\u7684\u610F\u4E49\uFF0C\u90FD\u8868\u793A\u8FD4\u56DE\u503C\u4E3Aint\u7684\u65E0\u53C2\u51FD\u6570\u3002</p></li></ul><h3 id="_3-5-\u66F4\u4E25\u683C\u7684\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#_3-5-\u66F4\u4E25\u683C\u7684\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> 3.5 \u66F4\u4E25\u683C\u7684\u7C7B\u578B\u8F6C\u6362</h3><p>\u5728C++\uFF0C\u4E0D\u540C\u7C7B\u578B\u7684\u53D8\u91CF\u4E00\u822C\u662F\u4E0D\u80FD\u76F4\u63A5\u8D4B\u503C\u7684\uFF0C\u9700\u8981\u76F8\u5E94\u7684\u5F3A\u8F6C\u3002</p><p>c\u8BED\u8A00\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token class-name">COLOR</span><span class="token punctuation">{</span> GREEN<span class="token punctuation">,</span> RED<span class="token punctuation">,</span> YELLOW <span class="token punctuation">}</span> color<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	color mycolor <span class="token operator">=</span> GREEN<span class="token punctuation">;</span>
	mycolor <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;mycolor:%d\\n&quot;</span><span class="token punctuation">,</span> mycolor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">char</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4EE5\u4E0Ac\u4EE3\u7801c\u7F16\u8BD1\u5668\u7F16\u8BD1\u53EF\u901A\u8FC7\uFF0Cc++\u7F16\u8BD1\u5668\u65E0\u6CD5\u7F16\u8BD1\u901A\u8FC7\u3002</p><h3 id="_3-6-struct-\u7C7B\u578B\u52A0\u5F3A" tabindex="-1"><a class="header-anchor" href="#_3-6-struct-\u7C7B\u578B\u52A0\u5F3A" aria-hidden="true">#</a> 3.6 struct \u7C7B\u578B\u52A0\u5F3A</h3><ul><li><p>c\u4E2D\u5B9A\u4E49\u7ED3\u6784\u4F53\u53D8\u91CF\u9700\u8981\u52A0\u4E0Astruct\u5173\u952E\u5B57\uFF0Cc++\u4E0D\u9700\u8981\u3002</p></li><li><p>c\u4E2D\u7684\u7ED3\u6784\u4F53\u53EA\u80FD\u5B9A\u4E49\u6210\u5458\u53D8\u91CF\uFF0C\u4E0D\u80FD\u5B9A\u4E49\u6210\u5458\u51FD\u6570\u3002c++\u5373\u53EF\u4EE5\u5B9A\u4E49\u6210\u5458\u53D8\u91CF\uFF0C\u4E5F\u53EF\u4EE5\u5B9A\u4E49\u6210\u5458\u51FD\u6570\u3002</p></li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//1. \u7ED3\u6784\u4F53\u4E2D\u5373\u53EF\u4EE5\u5B9A\u4E49\u6210\u5458\u53D8\u91CF\uFF0C\u4E5F\u53EF\u4EE5\u5B9A\u4E49\u6210\u5458\u51FD\u6570</span>
<span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token punctuation">{</span>
	string mName<span class="token punctuation">;</span>
	<span class="token keyword">int</span> mAge<span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span><span class="token punctuation">{</span> mName <span class="token operator">=</span> name<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span> mAge <span class="token operator">=</span> age<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">showStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Name:&quot;</span> <span class="token operator">&lt;&lt;</span> mName <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; Age:&quot;</span> <span class="token operator">&lt;&lt;</span> mAge <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//2. c++\u4E2D\u5B9A\u4E49\u7ED3\u6784\u4F53\u53D8\u91CF\u4E0D\u9700\u8981\u52A0struct\u5173\u952E\u5B57</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	Student student<span class="token punctuation">;</span>
	student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;John&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	student<span class="token punctuation">.</span><span class="token function">showStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="_3-7-\u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#_3-7-\u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57" aria-hidden="true">#</a> 3.7 \u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57</h3><p>\u6807\u51C6c++\u7684bool\u7C7B\u578B\u6709\u4E24\u79CD\u5185\u5EFA\u7684\u5E38\u91CFtrue(\u8F6C\u6362\u4E3A\u6574\u65701)\u548Cfalse(\u8F6C\u6362\u4E3A\u6574\u65700)\u8868\u793A\u72B6\u6001\u3002\u8FD9\u4E09\u4E2A\u540D\u5B57\u90FD\u662F\u5173\u952E\u5B57\u3002</p><ul><li><p>bool\u7C7B\u578B\u53EA\u6709\u4E24\u4E2A\u503C\uFF0Ctrue(1\u503C)\uFF0Cfalse(0\u503C)</p></li><li><p>bool\u7C7B\u578B\u53601\u4E2A\u5B57\u8282\u5927\u5C0F</p></li><li><p>\u7ED9bool\u7C7B\u578B\u8D4B\u503C\u65F6\uFF0C\u975E0\u503C\u4F1A\u81EA\u52A8\u8F6C\u6362\u4E3Atrue(1),0\u503C\u4F1A\u81EA\u52A8\u8F6C\u6362false(0)</p></li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>	cout <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token comment">//\u4E3A1\uFF0C//bool\u7C7B\u578B\u5360\u4E00\u4E2A\u5B57\u8282\u5927\u5C0F</span>
   bool flag <span class="token operator">=</span> true<span class="token punctuation">;</span> <span class="token comment">// c\u8BED\u8A00\u4E2D\u6CA1\u6709\u8FD9\u79CD\u7C7B\u578B</span>
   flag <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//\u7ED9bool\u7C7B\u578B\u8D4B\u503C\u65F6\uFF0C\u975E0\u503C\u4F1A\u81EA\u52A8\u8F6C\u6362\u4E3Atrue(1),0\u503C\u4F1A\u81EA\u52A8\u8F6C\u6362false(0)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>[c\u8BED\u8A00\u4E2D\u7684bool\u7C7B\u578B]</strong></p><p>c\u8BED\u8A00\u4E2D\u4E5F\u6709bool\u7C7B\u578B\uFF0C\u5728c99\u6807\u51C6\u4E4B\u524D\u662F\u6CA1\u6709bool\u5173\u952E\u5B57\uFF0Cc99\u6807\u51C6\u5DF2\u7ECF\u6709bool\u7C7B\u578B\uFF0C\u5305\u542B\u5934\u6587\u4EF6stdbool.h,\u5C31\u53EF\u4EE5\u4F7F\u7528\u548Cc++\u4E00\u6837\u7684bool\u7C7B\u578B\u3002</p><h3 id="_3-8-\u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#_3-8-\u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A" aria-hidden="true">#</a> 3.8 \u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A</h3><p>c\u8BED\u8A00\u4E09\u76EE\u8FD0\u7B97\u8868\u8FBE\u5F0F\u8FD4\u56DE\u503C\u4E3A\u6570\u636E\u503C\uFF0C\u4E3A\u53F3\u503C\uFF0C\u4E0D\u80FD\u8D4B\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;ret:%d\\n&quot;</span><span class="token punctuation">,</span> a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u601D\u8003\u4E00\u4E2A\u95EE\u9898\uFF0C(a &gt; b ? a : b) \u4E09\u76EE\u8FD0\u7B97\u8868\u8FBE\u5F0F\u8FD4\u56DE\u7684\u662F\u4EC0\u4E48\uFF1F</span>
	
	<span class="token comment">//(a &gt; b ? a : b) = 100;</span>
	<span class="token comment">//\u8FD4\u56DE\u7684\u662F\u53F3\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>c++\u8BED\u8A00\u4E09\u76EE\u8FD0\u7B97\u8868\u8FBE\u5F0F\u8FD4\u56DE\u503C\u4E3A\u53D8\u91CF\u672C\u8EAB(\u5F15\u7528)\uFF0C\u4E3A\u5DE6\u503C\uFF0C\u53EF\u4EE5\u8D4B\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u8FD4\u56DE\u7684\u662F\u5DE6\u503C\uFF0C\u53D8\u91CF\u7684\u5F15\u7528</span>
	<span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">//\u8FD4\u56DE\u7684\u662F\u5DE6\u503C\uFF0C\u53D8\u91CF\u7684\u5F15\u7528</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>[\u5DE6\u503C\u548C\u53F3\u503C\u6982\u5FF5]</strong></p><p>\u5728c++\u4E2D\u53EF\u4EE5\u653E\u5728\u8D4B\u503C\u64CD\u4F5C\u7B26\u5DE6\u8FB9\u7684\u662F\u5DE6\u503C\uFF0C\u53EF\u4EE5\u653E\u5230\u8D4B\u503C\u64CD\u4F5C\u7B26\u53F3\u9762\u7684\u662F\u53F3\u503C\u3002</p><p>\u6709\u4E9B\u53D8\u91CF\u5373\u53EF\u4EE5\u5F53\u5DE6\u503C\uFF0C\u4E5F\u53EF\u4EE5\u5F53\u53F3\u503C\u3002</p><p>\u5DE6\u503C\u4E3ALvalue\uFF0CL\u4EE3\u8868Location\uFF0C\u8868\u793A\u5185\u5B58\u53EF\u4EE5\u5BFB\u5740\uFF0C\u53EF\u4EE5\u8D4B\u503C\u3002</p><p>\u53F3\u503C\u4E3ARvalue\uFF0CR\u4EE3\u8868Read,\u5C31\u662F\u53EF\u4EE5\u77E5\u9053\u5B83\u7684\u503C\u3002</p><p>\u6BD4\u5982:int temp = 10; temp\u5728\u5185\u5B58\u4E2D\u6709\u5730\u5740\uFF0C10\u6CA1\u6709\uFF0C\u4F46\u662F\u53EF\u4EE5Read\u5230\u5B83\u7684\u503C\u3002</p><h3 id="_3-9-c-\u4E2D\u7684const" tabindex="-1"><a class="header-anchor" href="#_3-9-c-\u4E2D\u7684const" aria-hidden="true">#</a> 3.9 c++\u4E2D\u7684const</h3><p><strong>const</strong>\u6982\u8FF0</p><p>const\u5355\u8BCD\u5B57\u9762\u610F\u601D\u4E3A\u5E38\u6570\uFF0C\u4E0D\u53D8\u7684\u3002\u5B83\u662Fc/c++\u4E2D\u7684\u4E00\u4E2A\u5173\u952E\u5B57\uFF0C\u662F\u4E00\u4E2A\u9650\u5B9A\u7B26\uFF0C\u5B83\u7528\u6765\u9650\u5B9A\u4E00\u4E2A\u53D8\u91CF\u4E0D\u5141\u8BB8\u6539\u53D8\uFF0C\u5B83\u5C06\u4E00\u4E2A\u5BF9\u8C61\u8F6C\u6362\u6210\u4E00\u4E2A\u5E38\u91CF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//\u7F16\u8BD1\u9519\u8BEF,const\u662F\u4E00\u4E2A\u5E38\u91CF\uFF0C\u4E0D\u53EF\u4FEE\u6539</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>c/c++\u4E2Dconst\u7684\u533A\u522B</strong></p><p>c\u4E2D\u7684const:</p><p>\u5E38\u91CF\u7684\u5F15\u8FDB\u662F\u5728c++\u65E9\u671F\u7248\u672C\u4E2D\uFF0C\u5F53\u65F6\u6807\u51C6C\u89C4\u8303\u6B63\u5728\u5236\u5B9A\u3002\u90A3\u65F6\uFF0C\u5C3D\u7BA1C\u59D4\u5458\u4F1A\u51B3\u5B9A\u5728C\u4E2D\u5F15\u5165const,\u4F46\u662F\uFF0C\u4ED6\u4EECc\u4E2D\u7684const\u7406\u89E3\u4E3A\u201D\u4E00\u4E2A\u4E0D\u80FD\u6539\u53D8\u7684\u666E\u901A\u53D8\u91CF\u201D\uFF0C\u4E5F\u5C31\u662F\u8BA4\u4E3Aconst\u5E94\u8BE5\u662F\u4E00\u4E2A\u53EA\u8BFB\u53D8\u91CF\uFF0C\u65E2\u7136\u662F\u53D8\u91CF\u90A3\u4E48\u5C31\u4F1A\u7ED9const\u5206\u914D\u5185\u5B58\uFF0C\u5E76\u4E14\u5728c\u4E2Dconst\u662F\u4E00\u4E2A\u5168\u5C40\u53EA\u8BFB\u53D8\u91CF\uFF0Cc\u8BED\u8A00\u4E2Dconst\u4FEE\u9970\u7684\u53EA\u8BFB\u53D8\u91CF\u662F\u5916\u90E8\u8FDE\u63A5\u7684\u3002</p><p>\u5982\u679C\u8FD9\u4E48\u5199:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">int</span> arrSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> arr<span class="token punctuation">[</span>arrSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u770B\u4F3C\u662F\u4E00\u4EF6\u5408\u7406\u7684\u7F16\u7801\uFF0C\u4F46\u662F\u8FD9\u5C06\u5F97\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002 \u56E0\u4E3AarrSize\u5360\u7528\u67D0\u5757\u5185\u5B58\uFF0C\u6240\u4EE5C\u7F16\u8BD1\u5668\u4E0D\u77E5\u9053\u5B83\u5728\u7F16\u8BD1\u65F6\u7684\u503C\u662F\u591A\u5C11\uFF1F</p><p>c++\u4E2D\u7684const:</p><p>**\u5728c++\u4E2D\uFF0C\u4E00\u4E2Aconst\u4E0D\u5FC5\u521B\u5EFA\u5185\u5B58\u7A7A\u95F4\uFF0C\u800C\u5728c\u4E2D\uFF0C\u4E00\u4E2Aconst\u603B\u662F\u9700\u8981\u4E00\u5757\u5185\u5B58\u7A7A\u95F4\u3002**\u5728c++\u4E2D\uFF0C\u662F\u5426\u4E3Aconst\u5E38\u91CF\u5206\u914D\u5185\u5B58\u7A7A\u95F4\u4F9D\u8D56\u4E8E\u5982\u4F55\u4F7F\u7528\u3002\u4E00\u822C\u8BF4\u6765\uFF0C\u5982\u679C\u4E00\u4E2Aconst\u4EC5\u4EC5\u7528\u6765\u628A\u4E00\u4E2A\u540D\u5B57\u7528\u4E00\u4E2A\u503C\u4EE3\u66FF(\u5C31\u50CF\u4F7F\u7528#define\u4E00\u6837)\uFF0C\u90A3\u4E48\u8BE5\u5B58\u50A8\u5C40\u7A7A\u95F4\u5C31\u4E0D\u5FC5\u521B\u5EFA\u3002</p><p>\u5982\u679C\u5B58\u50A8\u7A7A\u95F4\u6CA1\u6709\u5206\u914D\u5185\u5B58\u7684\u8BDD\uFF0C\u5728\u8FDB\u884C\u5B8C\u6570\u636E\u7C7B\u578B\u68C0\u67E5\u540E\uFF0C\u4E3A\u4E86\u4EE3\u7801\u66F4\u52A0\u6709\u6548\uFF0C\u503C\u4E5F\u8BB8\u4F1A\u6298\u53E0\u5230\u4EE3\u7801\u4E2D\u3002</p><p>\u4E0D\u8FC7\uFF0C\u53D6\u4E00\u4E2Aconst\u5730\u5740, \u6216\u8005\u628A\u5B83\u5B9A\u4E49\u4E3Aextern,\u5219\u4F1A\u4E3A\u8BE5const\u521B\u5EFA\u5185\u5B58\u7A7A\u95F4\u3002</p><p>\u5728c++\u4E2D\uFF0C\u51FA\u73B0\u5728\u6240\u6709\u51FD\u6570\u4E4B\u5916\u7684const\u4F5C\u7528\u4E8E\u6574\u4E2A\u6587\u4EF6(\u4E5F\u5C31\u662F\u8BF4\u5B83\u5728\u8BE5\u6587\u4EF6\u5916\u4E0D\u53EF\u89C1)\uFF0C\u9ED8\u8BA4\u4E3A\u5185\u90E8\u8FDE\u63A5\uFF0Cc++\u4E2D\u5176\u4ED6\u7684\u6807\u8BC6\u7B26\u4E00\u822C\u9ED8\u8BA4\u4E3A\u5916\u90E8\u8FDE\u63A5\u3002</p><p><strong>c/c++\u4E2D\u7684const\u5F02\u540C\u603B\u7ED3</strong></p><p>c\u8BED\u8A00\u5168\u5C40const\u4F1A\u88AB\u5B58\u50A8\u5230\u53EA\u8BFB\u6570\u636E\u6BB5\u3002c++\u4E2D\u5168\u5C40const\u5F53\u58F0\u660Eextern\u6216\u8005\u5BF9\u53D8\u91CF\u53D6\u5730\u5740\u65F6\uFF0C\u7F16\u8BD1\u5668\u4F1A\u5206\u914D\u5B58\u50A8\u5730\u5740\uFF0C\u53D8\u91CF\u5B58\u50A8\u5728\u53EA\u8BFB\u6570\u636E\u6BB5\u3002\u4E24\u4E2A\u90FD\u53D7\u5230\u4E86\u53EA\u8BFB\u6570\u636E\u6BB5\u7684\u4FDD\u62A4\uFF0C\u4E0D\u53EF\u4FEE\u6539\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">int</span> constA <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>constA<span class="token punctuation">;</span>
           <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u5728c/c++\u4E2D\u7F16\u8BD1\u901A\u8FC7\uFF0C\u5728\u8FD0\u884C\u671F\uFF0C\u4FEE\u6539constA\u7684\u503C\u65F6\uFF0C\u53D1\u751F\u5199\u5165\u9519\u8BEF\u3002\u539F\u56E0\u662F\u4FEE\u6539\u53EA\u8BFB\u6570\u636E\u6BB5\u7684\u6570\u636E\u3002</p><ul><li>c\u8BED\u8A00\u4E2D\u5C40\u90E8const\u5B58\u50A8\u5728\u5806\u6808\u533A\uFF0C\u53EA\u662F\u4E0D\u80FD\u901A\u8FC7\u53D8\u91CF\u76F4\u63A5\u4FEE\u6539const\u53EA\u8BFB\u53D8\u91CF\u7684\u503C\uFF0C\u4F46\u662F\u53EF\u4EE5\u8DF3\u8FC7\u7F16\u8BD1\u5668\u7684\u68C0\u67E5\uFF0C\u901A\u8FC7\u6307\u9488\u95F4\u63A5\u4FEE\u6539const\u503C\u3002</li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">int</span> constA <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>constA<span class="token punctuation">;</span>
	<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;constA:%d\\n&quot;</span><span class="token punctuation">,</span>constA<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;*p:%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><p>constA = 300</p><p>*p : 300</p><p>c\u8BED\u8A00\u4E2D\uFF0C\u901A\u8FC7\u6307\u9488\u95F4\u63A5\u8D4B\u503C\u4FEE\u6539\u4E86constA\u7684\u503C\u3002</p><p>c++\u4E2D\u5BF9\u4E8E\u5C40\u90E8\u7684const\u53D8\u91CF\u8981\u533A\u522B\u5BF9\u5F85\uFF1A</p><ol><li>\u5BF9\u4E8E\u57FA\u7840\u6570\u636E\u7C7B\u578B\uFF0C\u4E5F\u5C31\u662Fconst int a = 10\u8FD9\u79CD\uFF0C\u7F16\u8BD1\u5668\u4F1A\u628A\u5B83\u653E\u5230\u7B26\u53F7\u8868\u4E2D\uFF0C\u4E0D\u5206\u914D\u5185\u5B58\uFF0C\u5F53\u5BF9\u5176\u53D6\u5730\u5740\u65F6\uFF0C\u4F1A\u5206\u914D\u5185\u5B58\u3002</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">int</span> constA <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>constA<span class="token punctuation">;</span>
	<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;constA:&quot;</span> <span class="token operator">&lt;&lt;</span> constA <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*p:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><p>constA = 10</p><p>*p : 300</p><p>constA\u5728\u7B26\u53F7\u8868\u4E2D\uFF0C\u5F53\u6211\u4EEC\u5BF9constA\u53D6\u5730\u5740\uFF0C\u8FD9\u4E2A\u65F6\u5019\u4E3AconstA\u5206\u914D\u4E86\u65B0\u7684\u7A7A\u95F4\uFF0C*p\u64CD\u4F5C\u7684\u662F\u5206\u914D\u7684\u7A7A\u95F4\uFF0C\u800CconstA\u662F\u4ECE\u7B26\u53F7\u8868\u83B7\u5F97\u7684\u503C\u3002</p><ol start="2"><li>\u5BF9\u4E8E\u57FA\u7840\u6570\u636E\u7C7B\u578B\uFF0C\u5982\u679C\u7528\u4E00\u4E2A\u53D8\u91CF\u521D\u59CB\u5316const\u53D8\u91CF\uFF0C\u5982\u679Cconst int a = b,\u90A3\u4E48\u4E5F\u662F\u4F1A\u7ED9a\u5206\u914D\u5185\u5B58\u3002</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> <span class="token keyword">int</span> constA <span class="token operator">=</span> b<span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>constA<span class="token punctuation">;</span>
	<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;constA:&quot;</span> <span class="token operator">&lt;&lt;</span> constA <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*p:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>p <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><p>constA = 300</p><p>*p : 300</p><p>constA \u5206\u914D\u4E86\u5185\u5B58\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u4FEE\u6539constA\u5185\u5B58\u4E2D\u7684\u503C\u3002</p><ol start="3"><li>\u5BF9\u4E8E\u81EA\u5B9A\u6570\u636E\u7C7B\u578B\uFF0C\u6BD4\u5982\u7C7B\u5BF9\u8C61\uFF0C\u90A3\u4E48\u4E5F\u4F1A\u5206\u914D\u5185\u5B58\u3002</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code> <span class="token keyword">const</span> Person person<span class="token punctuation">;</span> <span class="token comment">//\u672A\u521D\u59CB\u5316age</span>
	<span class="token comment">//person.age = 50; //\u4E0D\u53EF\u4FEE\u6539</span>
	Person<span class="token operator">*</span> pPerson <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>person<span class="token punctuation">;</span>
	<span class="token comment">//\u6307\u9488\u95F4\u63A5\u4FEE\u6539</span>
	pPerson<span class="token operator">-&gt;</span>age <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;pPerson-&gt;age:&quot;</span> <span class="token operator">&lt;&lt;</span> pPerson<span class="token operator">-&gt;</span>age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	pPerson<span class="token operator">-&gt;</span>age <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;pPerson-&gt;age:&quot;</span> <span class="token operator">&lt;&lt;</span> pPerson<span class="token operator">-&gt;</span>age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><p>pPerson-&gt;age:100</p><p>pPerson-&gt;age:200</p><p><strong>\u4E3Aperson\u5206\u914D\u4E86\u5185\u5B58\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u6307\u9488\u7684\u95F4\u63A5\u8D4B\u503C\u4FEE\u6539person\u5BF9\u8C61\u3002</strong></p><p><strong>c\u4E2Dconst\u9ED8\u8BA4\u4E3A\u5916\u90E8\u8FDE\u63A5\uFF0Cc++\u4E2Dconst\u9ED8\u8BA4\u4E3A\u5185\u90E8\u8FDE\u63A5.\u5F53c\u8BED\u8A00\u4E24\u4E2A\u6587\u4EF6\u4E2D\u90FD\u6709const int a\u7684\u65F6\u5019\uFF0C\u7F16\u8BD1\u5668\u4F1A\u62A5\u91CD\u5B9A\u4E49\u7684\u9519\u8BEF\u3002\u800C\u5728c++\u4E2D\uFF0C\u5219\u4E0D\u4F1A\uFF0C\u56E0\u4E3Ac++\u4E2D\u7684const\u9ED8\u8BA4\u662F\u5185\u90E8\u8FDE\u63A5\u7684\u3002\u5982\u679C\u60F3\u8BA9c++\u4E2D\u7684const\u5177\u6709\u5916\u90E8\u8FDE\u63A5\uFF0C\u5FC5\u987B\u663E\u793A\u58F0\u660E\u4E3A: extern const int a = 10;</strong></p><p>const\u7531c++\u91C7\u7528\uFF0C\u5E76\u52A0\u8FDB\u6807\u51C6c\u4E2D\uFF0C\u5C3D\u7BA1\u4ED6\u4EEC\u5F88\u4E0D\u4E00\u6837\u3002\u5728c\u4E2D\uFF0C\u7F16\u8BD1\u5668\u5BF9\u5F85const\u5982\u540C\u5BF9\u5F85\u53D8\u91CF\u4E00\u6837\uFF0C\u53EA\u4E0D\u8FC7\u5E26\u6709\u4E00\u4E2A\u7279\u6B8A\u7684\u6807\u8BB0\uFF0C\u610F\u601D\u662F\u201D\u4F60\u4E0D\u80FD\u6539\u53D8\u6211\u201D\u3002\u5728c++\u4E2D\u5B9A\u4E49const\u65F6\uFF0C\u7F16\u8BD1\u5668\u4E3A\u5B83\u521B\u5EFA\u7A7A\u95F4\uFF0C\u6240\u4EE5\u5982\u679C\u5728\u4E24\u4E2A\u4E0D\u540C\u6587\u4EF6\u5B9A\u4E49\u591A\u4E2A\u540C\u540D\u7684const\uFF0C\u94FE\u63A5\u5668\u5C06\u53D1\u751F\u94FE\u63A5\u9519\u8BEF\u3002\u7B80\u800C\u8A00\u4E4B,const\u5728c++\u4E2D\u7528\u7684\u66F4\u597D\u3002</p><p><strong>\u4E86\u89E3</strong> \u80FD\u5426\u7528\u53D8\u91CF\u5B9A\u4E49\u6570\u7EC4:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*\u5728\u652F\u6301c99\u6807\u51C6\u7684\u7F16\u8BD1\u5668\u4E2D\uFF0C\u53EF\u4EE5\u4F7F\u7528\u53D8\u91CF\u5B9A\u4E49\u6570\u7EC4\u3002
1. \u5FAE\u8F6F\u5B98\u65B9\u63CF\u8FF0vs2013\u7F16\u8BD1\u5668\u4E0D\u652F\u6301c99.\uFF1A
Microsoft C conforms to the standard for the C language as set forth in the 9899:1990 edition of the ANSI C standard. 
2. \u4EE5\u4E0B\u4EE3\u7801\u5728Linux GCC\u652F\u6301c99\u7F16\u8BD1\u5668\u7F16\u8BD1\u901A\u8FC7*/</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> 
	arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>\u5C3D\u91CF\u4EE5const\u66FF\u6362#define</strong></p><p>\u5728\u65E7\u7248\u672CC\u4E2D\uFF0C\u5982\u679C\u60F3\u5EFA\u7ACB\u4E00\u4E2A\u5E38\u91CF\uFF0C\u5FC5\u987B\u4F7F\u7528\u9884\u5904\u7406\u5668\u201D</p><p>#define MAX 1024;</p><p>\u6211\u4EEC\u5B9A\u4E49\u7684\u5B8FMAX\u4ECE\u672A\u88AB\u7F16\u8BD1\u5668\u770B\u5230\u8FC7\uFF0C\u56E0\u4E3A\u5728\u9884\u5904\u7406\u9636\u6BB5\uFF0C\u6240\u6709\u7684MAX\u5DF2\u7ECF\u88AB\u66FF\u6362\u4E3A\u4E861024\uFF0C\u4E8E\u662FMAX\u5E76\u6CA1\u6709\u5C06\u5176\u52A0\u5165\u5230\u7B26\u53F7\u8868\u4E2D\u3002\u4F46\u6211\u4EEC\u4F7F\u7528\u8FD9\u4E2A\u5E38\u91CF\u83B7\u5F97\u4E00\u4E2A\u7F16\u8BD1\u9519\u8BEF\u4FE1\u606F\u65F6\uFF0C\u53EF\u80FD\u4F1A\u5E26\u6765\u4E00\u4E9B\u56F0\u60D1\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u4FE1\u606F\u53EF\u80FD\u4F1A\u63D0\u52301024\uFF0C\u4F46\u662F\u5E76\u6CA1\u6709\u63D0\u5230MAX.\u5982\u679CMAX\u88AB\u5B9A\u4E49\u5728\u4E00\u4E2A\u4E0D\u662F\u4F60\u5199\u7684\u5934\u6587\u4EF6\u4E2D\uFF0C\u4F60\u53EF\u80FD\u5E76\u4E0D\u77E5\u90531024\u4EE3\u8868\u4EC0\u4E48\uFF0C\u4E5F\u8BB8\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u8981\u82B1\u8D39\u5F88\u957F\u65F6\u95F4\u3002</p><p>\u89E3\u51B3\u529E\u6CD5\u5C31\u662F\u7528\u4E00\u4E2A\u5E38\u91CF\u66FF\u6362\u4E0A\u9762\u7684\u5B8F\u3002</p><p>const int max= 1024;</p><p>const\u548C#define\u533A\u522B\u603B\u7ED3:</p><p>1.const\u6709\u7C7B\u578B\uFF0C\u53EF\u8FDB\u884C\u7F16\u8BD1\u5668\u7C7B\u578B\u5B89\u5168\u68C0\u67E5\u3002#define\u65E0\u7C7B\u578B\uFF0C\u4E0D\u53EF\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5.</p><p>2.const\u6709\u4F5C\u7528\u57DF\uFF0C\u800C#define\u4E0D\u91CD\u89C6\u4F5C\u7528\u57DF\uFF0C\u9ED8\u8BA4\u5B9A\u4E49\u5904\u5230\u6587\u4EF6\u7ED3\u5C3E.\u5982\u679C\u5B9A\u4E49\u5728\u6307\u5B9A\u4F5C\u7528\u57DF\u4E0B\u6709\u6548\u7684\u5E38\u91CF\uFF0C\u90A3\u4E48#define\u5C31\u4E0D\u80FD\u7528\u3002</p><ol><li>\u5B8F\u5E38\u91CF\u6CA1\u6709\u7C7B\u578B\uFF0C\u6240\u4EE5\u8C03\u7528\u4E86int\u7C7B\u578B\u91CD\u8F7D\u7684\u51FD\u6570\u3002const\u6709\u7C7B\u578B\uFF0C\u6240\u4EE5\u8C03\u7528\u5E0C\u671B\u7684short\u7C7B\u578B\u51FD\u6570\uFF1F</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PARAM</span> <span class="token expression"><span class="token number">128</span></span></span>
<span class="token keyword">const</span> <span class="token keyword">short</span> param <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">short</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;short!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>\u5B8F\u5E38\u91CF\u4E0D\u91CD\u89C6\u4F5C\u7528\u57DF.</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">A</span> <span class="token expression"><span class="token number">20</span> </span></span>
    <span class="token comment">//#undef A  //\u5378\u8F7D\u5B8F\u5E38\u91CFA</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//cout &lt;&lt; &quot;a:&quot; &lt;&lt; a &lt;&lt; endl; //\u4E0D\u53EF\u8BBF\u95EE\uFF0C\u8D85\u51FA\u4E86const int a\u4F5C\u7528\u57DF</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A:&quot;</span> <span class="token operator">&lt;&lt;</span> A <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token comment">//#define\u4F5C\u7528\u57DF\u4ECE\u5B9A\u4E49\u5230\u6587\u4EF6\u7ED3\u675F\u6216\u8005\u5230#undef\uFF0C\u53EF\u8BBF\u95EE</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>\u95EE\u9898:</strong> \u5B8F\u5E38\u91CF\u53EF\u4EE5\u6709\u547D\u540D\u7A7A\u95F4\u5417\uFF1F</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace MySpace<span class="token punctuation">{</span>
	<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">num</span> <span class="token expression"><span class="token number">1024</span></span></span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//cout &lt;&lt; MySpace::NUM &lt;&lt; endl; //\u9519\u8BEF</span>
	<span class="token comment">//int num = 100; //\u547D\u540D\u51B2\u7A81</span>
	cout <span class="token operator">&lt;&lt;</span> num <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-10\u5F15\u7528-reference" tabindex="-1"><a class="header-anchor" href="#_3-10\u5F15\u7528-reference" aria-hidden="true">#</a> 3.10\u5F15\u7528\uFF08reference\uFF09</h3><p><strong>\u5F15\u7528\u7684\u57FA\u672C\u7528\u6CD5</strong></p><p>**\u5F15\u7528\u662Fc++\u5BF9c\u7684\u91CD\u8981\u6269\u5145\u3002**\u5728c/c++\u4E2D\u6307\u9488\u7684\u4F5C\u7528\u57FA\u672C\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u4F46\u662Fc++\u589E\u52A0\u4E86\u53E6\u5916\u4E00\u79CD\u7ED9\u51FD\u6570\u4F20\u9012\u5730\u5740\u7684\u9014\u5F84\uFF0C\u8FD9\u5C31\u662F\u6309\u5F15\u7528\u4F20\u9012(pass-by-reference)\uFF0C\u5B83\u4E5F\u5B58\u5728\u4E8E\u5176\u4ED6\u4E00\u4E9B\u7F16\u7A0B\u8BED\u8A00\u4E2D\uFF0C\u5E76\u4E0D\u662Fc++\u7684\u53D1\u660E\u3002</p><ul><li><p>\u53D8\u91CF\u540D\u5B9E\u8D28\u4E0A\u662F\u4E00\u6BB5\u8FDE\u7EED\u5185\u5B58\u7A7A\u95F4\u7684\u522B\u540D\uFF0C\u662F\u4E00\u4E2A\u6807\u53F7(\u95E8\u724C\u53F7)</p></li><li><p>\u7A0B\u5E8F\u4E2D\u901A\u8FC7\u53D8\u91CF\u6765\u7533\u8BF7\u5E76\u547D\u540D\u5185\u5B58\u7A7A\u95F4</p></li><li><p>\u901A\u8FC7\u53D8\u91CF\u7684\u540D\u5B57\u53EF\u4EE5\u4F7F\u7528\u5B58\u50A8\u7A7A\u95F4</p></li></ul><p><strong>\u5BF9\u4E00\u6BB5\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\u53EA\u80FD\u53D6\u4E00\u4E2A\u522B\u540D\u5417\uFF1F</strong></p><p>c++\u4E2D\u65B0\u589E\u4E86\u5F15\u7528\u7684\u6982\u5FF5\uFF0C\u5F15\u7528\u53EF\u4EE5\u4F5C\u4E3A\u4E00\u4E2A\u5DF2\u5B9A\u4E49\u53D8\u91CF\u7684\u522B\u540D\u3002</p><p>\u57FA\u672C\u8BED\u6CD5:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>Type<span class="token operator">&amp;</span> ref <span class="token operator">=</span> val<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6CE8\u610F\u4E8B\u9879\uFF1A</p><ul><li><p>&amp;\u5728\u6B64\u4E0D\u662F\u6C42\u5730\u5740\u8FD0\u7B97\uFF0C\u800C\u662F\u8D77\u6807\u8BC6\u4F5C\u7528\u3002</p></li><li><p>\u7C7B\u578B\u6807\u8BC6\u7B26\u662F\u6307\u76EE\u6807\u53D8\u91CF\u7684\u7C7B\u578B</p></li><li><p>\u5FC5\u987B\u5728\u58F0\u660E\u5F15\u7528\u53D8\u91CF\u65F6\u8FDB\u884C\u521D\u59CB\u5316\u3002</p></li><li><p>\u5F15\u7528\u521D\u59CB\u5316\u4E4B\u540E\u4E0D\u80FD\u6539\u53D8\u3002</p></li><li><p>\u4E0D\u80FD\u6709NULL\u5F15\u7528\u3002\u5FC5\u987B\u786E\u4FDD\u5F15\u7528\u662F\u548C\u4E00\u5757\u5408\u6CD5\u7684\u5B58\u50A8\u5355\u5143\u5173\u8054\u3002</p></li><li><p><strong>\u53EF\u4EE5\u5EFA\u7ACB\u5BF9\u6570\u7EC4\u7684\u5F15\u7528\u3002</strong></p></li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//1. \u8BA4\u8BC6\u5F15\u7528</span>
<span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token comment">//\u7ED9\u53D8\u91CFa\u53D6\u4E00\u4E2A\u522B\u540Db</span>
	<span class="token keyword">int</span><span class="token operator">&amp;</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;------------&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u64CD\u4F5Cb\u5C31\u76F8\u5F53\u4E8E\u64CD\u4F5Ca\u672C\u8EAB</span>
	b <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;------------&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u4E00\u4E2A\u53D8\u91CF\u53EF\u4EE5\u6709n\u4E2A\u522B\u540D</span>
	<span class="token keyword">int</span><span class="token operator">&amp;</span> c <span class="token operator">=</span> a<span class="token punctuation">;</span>
	c <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;c:&quot;</span> <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;------------&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//a,b,c\u7684\u5730\u5740\u90FD\u662F\u76F8\u540C\u7684</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;c:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>c <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//2. \u4F7F\u7528\u5F15\u7528\u6CE8\u610F\u4E8B\u9879</span>
<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//1) \u5F15\u7528\u5FC5\u987B\u521D\u59CB\u5316</span>
	<span class="token comment">//int&amp; ref; //\u62A5\u9519:\u5FC5\u987B\u521D\u59CB\u5316\u5F15\u7528</span>
	<span class="token comment">//2) \u5F15\u7528\u4E00\u65E6\u521D\u59CB\u5316\uFF0C\u4E0D\u80FD\u6539\u53D8\u5F15\u7528</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">&amp;</span> ref <span class="token operator">=</span> a<span class="token punctuation">;</span>
	ref <span class="token operator">=</span> b<span class="token punctuation">;</span> <span class="token comment">//\u4E0D\u80FD\u6539\u53D8\u5F15\u7528</span>
	<span class="token comment">//3) \u4E0D\u80FD\u5BF9\u6570\u7EC4\u5EFA\u7ACB\u5F15\u7528</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">//int&amp; ref3[10] = arr;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//1. \u5EFA\u7ACB\u6570\u7EC4\u5F15\u7528\u65B9\u6CD5\u4E00</span>
	<span class="token keyword">typedef</span> <span class="token keyword">int</span> ArrRef<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	ArrRef<span class="token operator">&amp;</span> aRef <span class="token operator">=</span> arr<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		aRef<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//2. \u5EFA\u7ACB\u6570\u7EC4\u5F15\u7528\u65B9\u6CD5\u4E8C</span>
	<span class="token keyword">int</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="_3-10-2-\u51FD\u6570\u4E2D\u7684\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_3-10-2-\u51FD\u6570\u4E2D\u7684\u5F15\u7528" aria-hidden="true">#</a> 3.10.2 \u51FD\u6570\u4E2D\u7684\u5F15\u7528</h4><p>\u6700\u5E38\u89C1\u770B\u89C1\u5F15\u7528\u7684\u5730\u65B9\u662F\u5728\u51FD\u6570\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u4E2D\u3002\u5F53\u5F15\u7528\u88AB\u7528\u4F5C\u51FD\u6570\u53C2\u6570\u7684\u65F6\uFF0C\u5728\u51FD\u6570\u5185\u5BF9\u4EFB\u4F55\u5F15\u7528\u7684\u4FEE\u6539\uFF0C\u5C06\u5BF9\u8FD8\u51FD\u6570\u5916\u7684\u53C2\u6570\u4EA7\u751F\u6539\u53D8\u3002\u5F53\u7136\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F20\u9012\u4E00\u4E2A\u6307\u9488\u6765\u505A\u76F8\u540C\u7684\u4E8B\u60C5\uFF0C\u4F46\u5F15\u7528\u5177\u6709\u66F4\u6E05\u6670\u7684\u8BED\u6CD5\u3002</p><p>\u5982\u679C\u4ECE\u51FD\u6570\u4E2D\u8FD4\u56DE\u4E00\u4E2A\u5F15\u7528\uFF0C\u5FC5\u987B\u50CF\u4ECE\u51FD\u6570\u4E2D\u8FD4\u56DE\u4E00\u4E2A\u6307\u9488\u4E00\u6837\u5BF9\u5F85\u3002\u5F53\u51FD\u6570\u8FD4\u56DE\u503C\u65F6\uFF0C\u5F15\u7528\u5173\u8054\u7684\u5185\u5B58\u4E00\u5B9A\u8981\u5B58\u5728\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u503C\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">ValueSwap</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> temp <span class="token operator">=</span> m<span class="token punctuation">;</span>
	m <span class="token operator">=</span> n<span class="token punctuation">;</span>
	n <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5730\u5740\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">PointerSwap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> m<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token operator">*</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token operator">*</span>m<span class="token punctuation">;</span>
	<span class="token operator">*</span>m <span class="token operator">=</span> <span class="token operator">*</span>n<span class="token punctuation">;</span>
	<span class="token operator">*</span>n <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5F15\u7528\u4F20\u9012</span>
<span class="token keyword">void</span> <span class="token function">ReferenceSwap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span> m<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token operator">&amp;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> temp <span class="token operator">=</span> m<span class="token punctuation">;</span>
	m <span class="token operator">=</span> n<span class="token punctuation">;</span>
	n <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	<span class="token comment">//\u503C\u4F20\u9012</span>
	<span class="token function">ValueSwap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u5730\u5740\u4F20\u9012</span>
	<span class="token function">PointerSwap</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u5F15\u7528\u4F20\u9012</span>
	<span class="token function">ReferenceSwap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u901A\u8FC7\u5F15\u7528\u53C2\u6570\u4EA7\u751F\u7684\u6548\u679C\u540C\u6309\u5730\u5740\u4F20\u9012\u662F\u4E00\u6837\u7684\u3002\u5F15\u7528\u7684\u8BED\u6CD5\u66F4\u6E05\u695A\u7B80\u5355\uFF1A</p><ol><li><p>\u51FD\u6570\u8C03\u7528\u65F6\u4F20\u9012\u7684\u5B9E\u53C2\u4E0D\u5FC5\u52A0\u201C&amp;\u201D\u7B26</p></li><li><p>\u5728\u88AB\u8C03\u51FD\u6570\u4E2D\u4E0D\u5FC5\u5728\u53C2\u6570\u524D\u52A0\u201C*\u201D\u7B26</p></li></ol><p>\u5F15\u7528\u4F5C\u4E3A\u5176\u5B83\u53D8\u91CF\u7684\u522B\u540D\u800C\u5B58\u5728\uFF0C\u56E0\u6B64\u5728\u4E00\u4E9B\u573A\u5408\u53EF\u4EE5\u4EE3\u66FF\u6307\u9488\u3002C++\u4E3B\u5F20\u7528\u5F15\u7528\u4F20\u9012\u53D6\u4EE3\u5730\u5740\u4F20\u9012\u7684\u65B9\u5F0F\uFF0C\u56E0\u4E3A\u5F15\u7528\u8BED\u6CD5\u5BB9\u6613\u4E14\u4E0D\u6613\u51FA\u9519\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u8FD4\u56DE\u5C40\u90E8\u53D8\u91CF\u5F15\u7528</span>
<span class="token keyword">int</span><span class="token operator">&amp;</span> <span class="token function">TestFun01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//\u5C40\u90E8\u53D8\u91CF</span>
	<span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8FD4\u56DE\u9759\u6001\u53D8\u91CF\u5F15\u7528</span>
<span class="token keyword">int</span><span class="token operator">&amp;</span> <span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	
	<span class="token keyword">static</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;static int a : &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u4E0D\u80FD\u8FD4\u56DE\u5C40\u90E8\u53D8\u91CF\u7684\u5F15\u7528</span>
	<span class="token keyword">int</span><span class="token operator">&amp;</span> ret01 <span class="token operator">=</span> <span class="token function">TestFun01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5982\u679C\u51FD\u6570\u505A\u5DE6\u503C\uFF0C\u90A3\u4E48\u5FC5\u987B\u8FD4\u56DE\u5F15\u7528</span>
	<span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	<span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li><p>\u4E0D\u80FD\u8FD4\u56DE\u5C40\u90E8\u53D8\u91CF\u7684\u5F15\u7528\u3002</p></li><li><p>\u51FD\u6570\u5F53\u5DE6\u503C\uFF0C\u5FC5\u987B\u8FD4\u56DE\u5F15\u7528\u3002</p></li></ul><h4 id="_3-10-3-\u5F15\u7528\u7684\u672C\u8D28" tabindex="-1"><a class="header-anchor" href="#_3-10-3-\u5F15\u7528\u7684\u672C\u8D28" aria-hidden="true">#</a> 3.10.3 \u5F15\u7528\u7684\u672C\u8D28</h4><p><strong>\u5F15\u7528\u7684\u672C\u8D28\u5728c++\u5185\u90E8\u5B9E\u73B0\u662F\u4E00\u4E2A\u6307\u9488\u5E38\u91CF.</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>Type<span class="token operator">&amp;</span> ref <span class="token operator">=</span> val<span class="token punctuation">;</span> <span class="token comment">// Type* const ref = &amp;val;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>c++\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u8FC7\u7A0B\u4E2D\u4F7F\u7528\u5E38\u6307\u9488\u4F5C\u4E3A\u5F15\u7528\u7684\u5185\u90E8\u5B9E\u73B0\uFF0C\u56E0\u6B64\u5F15\u7528\u6240\u5360\u7528\u7684\u7A7A\u95F4\u5927\u5C0F\u4E0E\u6307\u9488\u76F8\u540C\uFF0C\u53EA\u662F\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u7F16\u8BD1\u5668\u5185\u90E8\u5B9E\u73B0\uFF0C\u7528\u6237\u4E0D\u53EF\u89C1\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u53D1\u73B0\u662F\u5F15\u7528\uFF0C\u8F6C\u6362\u4E3A int* const ref = &amp;a;</span>
<span class="token keyword">void</span> <span class="token function">testFunc</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">&amp;</span> ref<span class="token punctuation">)</span><span class="token punctuation">{</span>
	ref <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// ref\u662F\u5F15\u7528\uFF0C\u8F6C\u6362\u4E3A*ref = 100</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">&amp;</span> aRef <span class="token operator">=</span> a<span class="token punctuation">;</span> <span class="token comment">//\u81EA\u52A8\u8F6C\u6362\u4E3A int* const aRef = &amp;a;\u8FD9\u4E5F\u80FD\u8BF4\u660E\u5F15\u7528\u4E3A\u4EC0\u4E48\u5FC5\u987B\u521D\u59CB\u5316</span>
	aRef <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">//\u5185\u90E8\u53D1\u73B0aRef\u662F\u5F15\u7528\uFF0C\u81EA\u52A8\u5E2E\u6211\u4EEC\u8F6C\u6362\u4E3A: *aRef = 20;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;aRef:&quot;</span> <span class="token operator">&lt;&lt;</span> aRef <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token function">testFunc</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_3-10-4-\u6307\u9488\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_3-10-4-\u6307\u9488\u5F15\u7528" aria-hidden="true">#</a> 3.10.4 \u6307\u9488\u5F15\u7528</h4><p>\u5728c\u8BED\u8A00\u4E2D\u5982\u679C\u60F3\u6539\u53D8\u4E00\u4E2A\u6307\u9488\u7684\u6307\u5411\u800C\u4E0D\u662F\u5B83\u6240\u6307\u5411\u7684\u5185\u5BB9\uFF0C\u51FD\u6570\u58F0\u660E\u53EF\u80FD\u8FD9\u6837:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u7ED9\u6307\u9488\u53D8\u91CF\u53D6\u4E00\u4E2A\u522B\u540D\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>Type<span class="token operator">*</span> pointer <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> 
Type<span class="token operator">*</span><span class="token operator">&amp;</span> <span class="token operator">=</span> pointer<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Type* pointer = NULL; Type*&amp; = pointer;</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">Teacher</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> mAge<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//\u6307\u9488\u95F4\u63A5\u4FEE\u6539teacher\u7684\u5E74\u9F84</span>
<span class="token keyword">void</span> <span class="token function">AllocateAndInitByPointer</span><span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token operator">*</span> teacher<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token operator">*</span>teacher <span class="token operator">=</span> <span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>Teacher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">(</span><span class="token operator">*</span>teacher<span class="token punctuation">)</span><span class="token operator">-&gt;</span>mAge <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
<span class="token comment">//\u5F15\u7528\u4FEE\u6539teacher\u5E74\u9F84</span>
<span class="token keyword">void</span> <span class="token function">AllocateAndInitByReference</span><span class="token punctuation">(</span>Teacher<span class="token operator">*</span><span class="token operator">&amp;</span> teacher<span class="token punctuation">)</span><span class="token punctuation">{</span>
	teacher<span class="token operator">-&gt;</span>mAge <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u521B\u5EFATeacher</span>
	Teacher<span class="token operator">*</span> teacher <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6307\u9488\u95F4\u63A5\u8D4B\u503C</span>
	<span class="token function">AllocateAndInitByPointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>teacher<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;AllocateAndInitByPointer:&quot;</span> <span class="token operator">&lt;&lt;</span> teacher<span class="token operator">-&gt;</span>mAge <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">//\u5F15\u7528\u8D4B\u503C,\u5C06teacher\u672C\u8EAB\u4F20\u5230ChangeAgeByReference\u51FD\u6570\u4E2D</span>
	<span class="token function">AllocateAndInitByReference</span><span class="token punctuation">(</span>teacher<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;AllocateAndInitByReference:&quot;</span> <span class="token operator">&lt;&lt;</span> teacher<span class="token operator">-&gt;</span>mAge <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token function">free</span><span class="token punctuation">(</span>teacher<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5BF9\u4E8Ec++\u4E2D\u7684\u5B9A\u4E49\u90A3\u4E2A\uFF0C\u8BED\u6CD5\u6E05\u6670\u591A\u4E86\u3002\u51FD\u6570\u53C2\u6570\u53D8\u6210\u6307\u9488\u7684\u5F15\u7528\uFF0C\u7528\u4E0D\u7740\u53D6\u5F97\u6307\u9488\u7684\u5730\u5740\u3002</p><h4 id="\u5E38\u91CF\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E38\u91CF\u5F15\u7528" aria-hidden="true">#</a> \u5E38\u91CF\u5F15\u7528</h4><p>\u5E38\u91CF\u5F15\u7528\u7684\u5B9A\u4E49\u683C\u5F0F:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">const</span> Type<span class="token operator">&amp;</span> ref <span class="token operator">=</span> val<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>\u5E38\u91CF\u5F15\u7528\u6CE8\u610F\uFF1A</strong></p><ul><li><p>\u5B57\u9762\u91CF\u4E0D\u80FD\u8D4B\u7ED9\u5F15\u7528\uFF0C\u4F46\u662F\u53EF\u4EE5\u8D4B\u7ED9const\u5F15\u7528</p></li><li><p>const\u4FEE\u9970\u7684\u5F15\u7528\uFF0C\u4E0D\u80FD\u4FEE\u6539\u3002</p></li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> aRef <span class="token operator">=</span> a<span class="token punctuation">;</span> <span class="token comment">//\u6B64\u65F6aRef\u5C31\u662Fa</span>
	<span class="token comment">//aRef = 200; \u4E0D\u80FD\u901A\u8FC7aRef\u7684\u503C</span>
	a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//OK</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a:&quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;aRef:&quot;</span> <span class="token operator">&lt;&lt;</span> aRef <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u4E0D\u80FD\u628A\u4E00\u4E2A\u5B57\u9762\u91CF\u8D4B\u7ED9\u5F15\u7528</span>
	<span class="token comment">//int&amp; ref = 100;</span>
	<span class="token comment">//\u4F46\u662F\u53EF\u4EE5\u628A\u4E00\u4E2A\u5B57\u9762\u91CF\u8D4B\u7ED9\u5E38\u5F15\u7528</span>
	<span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> ref <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//int temp = 200; const int&amp; ret = temp;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>[const\u5F15\u7528\u4F7F\u7528\u573A\u666F]</strong></p><p>\u5E38\u91CF\u5F15\u7528\u4E3B\u8981\u7528\u5728\u51FD\u6570\u7684\u5F62\u53C2\uFF0C\u5C24\u5176\u662F\u7C7B\u7684\u62F7\u8D1D/\u590D\u5236\u6784\u9020\u51FD\u6570\u3002</p><p>\u5C06\u51FD\u6570\u7684\u5F62\u53C2\u5B9A\u4E49\u4E3A\u5E38\u91CF\u5F15\u7528\u7684\u597D\u5904:</p><blockquote><p>\u5F15\u7528\u4E0D\u4EA7\u751F\u65B0\u7684\u53D8\u91CF\uFF0C\u51CF\u5C11\u5F62\u53C2\u4E0E\u5B9E\u53C2\u4F20\u9012\u65F6\u7684\u5F00\u9500\u3002</p></blockquote><blockquote><p>\u7531\u4E8E\u5F15\u7528\u53EF\u80FD\u5BFC\u81F4\u5B9E\u53C2\u968F\u5F62\u53C2\u6539\u53D8\u800C\u6539\u53D8\uFF0C\u5C06\u5176\u5B9A\u4E49\u4E3A\u5E38\u91CF\u5F15\u7528\u53EF\u4EE5\u6D88\u9664\u8FD9\u79CD\u526F\u4F5C\u7528\u3002</p></blockquote><p>\u5982\u679C\u5E0C\u671B\u5B9E\u53C2\u968F\u7740\u5F62\u53C2\u7684\u6539\u53D8\u800C\u6539\u53D8\uFF0C\u90A3\u4E48\u4F7F\u7528\u4E00\u822C\u7684\u5F15\u7528\uFF0C\u5982\u679C\u4E0D\u5E0C\u671B\u5B9E\u53C2\u968F\u7740\u5F62\u53C2\u6539\u53D8\uFF0C\u90A3\u4E48\u4F7F\u7528\u5E38\u5F15\u7528\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//const int&amp; param\u9632\u6B62\u51FD\u6570\u4E2D\u610F\u5916\u4FEE\u6539\u6570\u636E</span>
<span class="token keyword">void</span> <span class="token function">ShowVal</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">&amp;</span> param<span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;param:&quot;</span> <span class="token operator">&lt;&lt;</span> param <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-11-\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#_3-11-\u7EC3\u4E60" aria-hidden="true">#</a> 3.11 \u7EC3\u4E60</h3><ol><li><p>\u8BBE\u8BA1\u4E00\u4E2A\u7C7B\uFF0C\u6C42\u5706\u7684\u5468\u957F\u3002</p></li><li><p>\u8BBE\u8BA1\u4E00\u4E2A\u5B66\u751F\u7C7B\uFF0C\u5C5E\u6027\u6709\u59D3\u540D\u548C\u5B66\u53F7\uFF0C\u53EF\u4EE5\u7ED9\u59D3\u540D\u548C\u5B66\u53F7\u8D4B\u503C\uFF0C\u53EF\u4EE5\u663E\u793A\u5B66\u751F\u7684\u59D3 \u540D\u548C\u5B66\u53F7</p></li></ol><h3 id="_3-12-\u5185\u8054\u51FD\u6570\u7684\u5F15\u51FA" tabindex="-1"><a class="header-anchor" href="#_3-12-\u5185\u8054\u51FD\u6570\u7684\u5F15\u51FA" aria-hidden="true">#</a> 3.12 \u5185\u8054\u51FD\u6570\u7684\u5F15\u51FA</h3><p>c++\u4ECEc\u4E2D\u7EE7\u627F\u7684\u4E00\u4E2A\u91CD\u8981\u7279\u5F81\u5C31\u662F\u6548\u7387\u3002\u5047\u5982c++\u7684\u6548\u7387\u660E\u663E\u4F4E\u4E8Ec\u7684\u6548\u7387\uFF0C\u90A3\u4E48\u5C31\u4F1A\u6709\u5F88\u5927\u7684\u4E00\u6279\u7A0B\u5E8F\u5458\u4E0D\u53BB\u4F7F\u7528c++\u4E86\u3002</p><p>\u5728c\u4E2D\u6211\u4EEC\u7ECF\u5E38\u628A\u4E00\u4E9B\u77ED\u5E76\u4E14\u6267\u884C\u9891\u7E41\u7684\u8BA1\u7B97\u5199\u6210\u5B8F\uFF0C\u800C\u4E0D\u662F\u51FD\u6570\uFF0C\u8FD9\u6837\u505A\u7684\u7406\u7531\u662F\u4E3A\u4E86\u6267\u884C\u6548\u7387\uFF0C\u5B8F\u53EF\u4EE5\u907F\u514D\u51FD\u6570\u8C03\u7528\u7684\u5F00\u9500\uFF0C\u8FD9\u4E9B\u90FD\u7531\u9884\u5904\u7406\u6765\u5B8C\u6210\u3002</p><p>\u4F46\u662F\u5728c++\u51FA\u73B0\u4E4B\u540E\uFF0C\u4F7F\u7528\u9884\u5904\u7406\u5B8F\u4F1A\u51FA\u73B0\u4E24\u4E2A\u95EE\u9898\uFF1A</p><ul><li><p>\u7B2C\u4E00\u4E2A\u5728c\u4E2D\u4E5F\u4F1A\u51FA\u73B0\uFF0C\u5B8F\u770B\u8D77\u6765\u50CF\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\uFF0C\u4F46\u662F\u4F1A\u6709\u9690\u85CF\u4E00\u4E9B\u96BE\u4EE5\u53D1\u73B0\u7684\u9519\u8BEF\u3002</p></li><li><p>\u7B2C\u4E8C\u4E2A\u95EE\u9898\u662Fc++\u7279\u6709\u7684\uFF0C\u9884\u5904\u7406\u5668\u4E0D\u5141\u8BB8\u8BBF\u95EE\u7C7B\u7684\u6210\u5458\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9884\u5904\u7406\u5668\u5B8F\u4E0D\u80FD\u7528\u4F5C\u7C7B\u7C7B\u7684\u6210\u5458\u51FD\u6570\u3002</p></li></ul><p>\u4E3A\u4E86\u4FDD\u6301\u9884\u5904\u7406\u5B8F\u7684\u6548\u7387\u53C8\u589E\u52A0\u5B89\u5168\u6027\uFF0C\u800C\u4E14\u8FD8\u80FD\u50CF\u4E00\u822C\u6210\u5458\u51FD\u6570\u90A3\u6837\u53EF\u4EE5\u5728\u7C7B\u91CC\u8BBF\u95EE\u81EA\u5982\uFF0Cc++\u5F15\u5165\u4E86\u5185\u8054\u51FD\u6570(inline function)\u3002</p><p>\u5185\u8054\u51FD\u6570\u4E3A\u4E86\u7EE7\u627F\u5B8F\u51FD\u6570\u7684\u6548\u7387\uFF0C\u6CA1\u6709\u51FD\u6570\u8C03\u7528\u65F6\u5F00\u9500\uFF0C\u7136\u540E\u53C8\u53EF\u4EE5\u50CF\u666E\u901A\u51FD\u6570\u90A3\u6837\uFF0C\u53EF\u4EE5\u8FDB\u884C\u53C2\u6570\uFF0C\u8FD4\u56DE\u503C\u7C7B\u578B\u7684\u5B89\u5168\u68C0\u67E5\uFF0C\u53C8\u53EF\u4EE5\u4F5C\u4E3A\u6210\u5458\u51FD\u6570\u3002</p><h4 id="_3-12-2-\u9884\u5904\u7406\u5B8F\u7684\u7F3A\u9677" tabindex="-1"><a class="header-anchor" href="#_3-12-2-\u9884\u5904\u7406\u5B8F\u7684\u7F3A\u9677" aria-hidden="true">#</a> 3.12.2 \u9884\u5904\u7406\u5B8F\u7684\u7F3A\u9677</h4><p>\u9884\u5904\u7406\u5668\u5B8F\u5B58\u5728\u95EE\u9898\u7684\u5173\u952E\u662F\u6211\u4EEC\u53EF\u80FD\u8BA4\u4E3A\u9884\u5904\u7406\u5668\u7684\u884C\u4E3A\u548C\u7F16\u8BD1\u5668\u7684\u884C\u4E3A\u662F\u4E00\u6837\u7684\u3002\u5F53\u7136\u4E5F\u662F\u7531\u4E8E\u5B8F\u51FD\u6570\u8C03\u7528\u548C\u51FD\u6570\u8C03\u7528\u5728\u5916\u8868\u770B\u8D77\u6765\u662F\u4E00\u6837\u7684\uFF0C\u56E0\u4E3A\u4E5F\u5BB9\u6613\u88AB\u6DF7\u6DC6\u3002\u4F46\u662F\u5176\u4E2D\u4E5F\u4F1A\u6709\u4E00\u4E9B\u5FAE\u5999\u7684\u95EE\u9898\u51FA\u73B0:</p><p>\u95EE\u9898\u4E00\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ADD</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> x<span class="token operator">+</span>y</span></span>
<span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> ret1 <span class="token operator">=</span> <span class="token function">ADD</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//\u5E0C\u671B\u7684\u7ED3\u679C\u662F300</span>
	<span class="token keyword">int</span> ret2 <span class="token operator">=</span> <span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//\u5E0C\u671B\u7ED3\u679C\u4E5F\u662F300</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;ret1:&quot;</span> <span class="token operator">&lt;&lt;</span> ret1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token comment">//210</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;ret2:&quot;</span> <span class="token operator">&lt;&lt;</span> ret2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token comment">//300</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u95EE\u9898\u4E8C\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">COMPARE</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token keyword">int</span> <span class="token function">Compare</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> x <span class="token operator">&lt;</span> y <span class="token operator">?</span> x <span class="token operator">:</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
	<span class="token comment">//cout &lt;&lt; &quot;COMPARE(++a, b):&quot; &lt;&lt; COMPARE(++a, b) &lt;&lt; endl; // 3</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Compare(int x,int y):&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token function">Compare</span><span class="token punctuation">(</span><span class="token operator">++</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token comment">//2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u95EE\u9898\u4E09:</p><p>\u9884\u5B9A\u4E49\u5B8F\u51FD\u6570\u6CA1\u6709\u4F5C\u7528\u57DF\u6982\u5FF5\uFF0C\u65E0\u6CD5\u4F5C\u4E3A\u4E00\u4E2A\u7C7B\u7684\u6210\u5458\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9884\u5B9A\u4E49\u5B8F\u6CA1\u6709\u529E\u6CD5\u8868\u793A\u7C7B\u7684\u8303\u56F4\u3002</p><h4 id="_3-12-3-\u5185\u8054\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_3-12-3-\u5185\u8054\u51FD\u6570" aria-hidden="true">#</a> 3.12.3 \u5185\u8054\u51FD\u6570</h4><h5 id="_3-12-3-1-\u5185\u8054\u51FD\u6570\u7684\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_3-12-3-1-\u5185\u8054\u51FD\u6570\u7684\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 3.12.3.1 \u5185\u8054\u51FD\u6570\u7684\u57FA\u672C\u6982\u5FF5</h5><p>\u5728c++\u4E2D\uFF0C\u9884\u5B9A\u4E49\u5B8F\u7684\u6982\u5FF5\u662F\u7528\u5185\u8054\u51FD\u6570\u6765\u5B9E\u73B0\u7684\uFF0C\u800C<strong>\u5185\u8054\u51FD\u6570\u672C\u8EAB\u4E5F\u662F\u4E00\u4E2A\u771F\u6B63\u7684\u51FD\u6570</strong>\u3002\u5185\u8054\u51FD\u6570\u5177\u6709\u666E\u901A\u51FD\u6570\u7684\u6240\u6709\u884C\u4E3A\u3002\u552F\u4E00\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\u5185\u8054\u51FD\u6570\u4F1A\u5728\u9002\u5F53\u7684\u5730\u65B9\u50CF\u9884\u5B9A\u4E49\u5B8F\u4E00\u6837\u5C55\u5F00\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u51FD\u6570\u8C03\u7528\u7684\u5F00\u9500\u3002\u56E0\u6B64\u5E94\u8BE5\u4E0D\u4F7F\u7528\u5B8F\uFF0C\u4F7F\u7528\u5185\u8054\u51FD\u6570\u3002</p><p>\u5728\u666E\u901A\u51FD\u6570(\u975E\u6210\u5458\u51FD\u6570)\u51FD\u6570\u524D\u9762\u52A0\u4E0Ainline\u5173\u952E\u5B57\u4F7F\u4E4B\u6210\u4E3A\u5185\u8054\u51FD\u6570\u3002\u4F46\u662F\u5FC5\u987B\u6CE8\u610F\u5FC5\u987B\u51FD\u6570\u4F53\u548C\u58F0\u660E\u7ED3\u5408\u5728\u4E00\u8D77\uFF0C\u5426\u5219\u7F16\u8BD1\u5668\u5C06\u5B83\u4F5C\u4E3A\u666E\u901A\u51FD\u6570\u6765\u5BF9\u5F85\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4EE5\u4E0A\u5199\u6CD5\u6CA1\u6709\u4EFB\u4F55\u6548\u679C\uFF0C\u4EC5\u4EC5\u662F\u58F0\u660E\u51FD\u6570\uFF0C\u5E94\u8BE5\u5982\u4E0B\u65B9\u5F0F\u6765\u505A:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6CE8\u610F: \u7F16\u8BD1\u5668\u5C06\u4F1A\u68C0\u67E5\u51FD\u6570\u53C2\u6570\u5217\u8868\u4F7F\u7528\u662F\u5426\u6B63\u786E\uFF0C\u5E76\u8FD4\u56DE\u503C(\u8FDB\u884C\u5FC5\u8981\u7684\u8F6C\u6362)\u3002</p><p>\u8FD9\u4E9B\u4E8B\u9884\u5904\u7406\u5668\u65E0\u6CD5\u5B8C\u6210\u7684\u3002</p><p>\u5185\u8054\u51FD\u6570\u7684\u786E\u5360\u7528\u7A7A\u95F4\uFF0C\u4F46\u662F\u5185\u8054\u51FD\u6570\u76F8\u5BF9\u4E8E\u666E\u901A\u51FD\u6570\u7684\u4F18\u52BF\u53EA\u662F\u7701\u53BB\u4E86\u51FD\u6570\u8C03\u7528\u65F6\u5019\u7684\u538B\u6808\uFF0C\u8DF3\u8F6C\uFF0C\u8FD4\u56DE\u7684\u5F00\u9500\u3002\u6211\u4EEC\u53EF\u4EE5\u7406\u89E3\u4E3A\u5185\u8054\u51FD\u6570\u662F\u4EE5<strong>\u7A7A\u95F4\u6362\u65F6\u95F4</strong>\u3002</p><h5 id="_3-12-3-2-\u7C7B\u5185\u90E8\u7684\u5185\u8054\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_3-12-3-2-\u7C7B\u5185\u90E8\u7684\u5185\u8054\u51FD\u6570" aria-hidden="true">#</a> 3.12.3.2 \u7C7B\u5185\u90E8\u7684\u5185\u8054\u51FD\u6570</h5><p>\u4E3A\u4E86\u5B9A\u4E49\u5185\u8054\u51FD\u6570\uFF0C\u901A\u5E38\u5FC5\u987B\u5728\u51FD\u6570\u5B9A\u4E49\u524D\u9762\u653E\u4E00\u4E2Ainline\u5173\u952E\u5B57\u3002\u4F46\u662F\u5728\u7C7B\u5185\u90E8\u5B9A\u4E49\u5185\u8054\u51FD\u6570\u65F6\u5E76\u4E0D\u662F\u5FC5\u987B\u7684\u3002\u4EFB\u4F55\u5728\u7C7B\u5185\u90E8\u5B9A\u4E49\u7684\u51FD\u6570\u81EA\u52A8\u6210\u4E3A\u5185\u8054\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>class Person<span class="token punctuation">{</span>
public<span class="token operator">:</span>
	<span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6784\u9020\u51FD\u6570!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">PrintPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u8F93\u51FAPerson!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6784\u9020\u51FD\u6570Person\uFF0C\u6210\u5458\u51FD\u6570PrintPerson\u5728\u7C7B\u7684\u5185\u90E8\u5B9A\u4E49\uFF0C\u81EA\u52A8\u6210\u4E3A\u5185\u8054\u51FD\u6570\u3002</p><h5 id="_3-12-3-3-\u5185\u8054\u51FD\u6570\u548C\u7F16\u8BD1\u5668" tabindex="-1"><a class="header-anchor" href="#_3-12-3-3-\u5185\u8054\u51FD\u6570\u548C\u7F16\u8BD1\u5668" aria-hidden="true">#</a> 3.12.3.3 \u5185\u8054\u51FD\u6570\u548C\u7F16\u8BD1\u5668</h5><p>\u5185\u8054\u51FD\u6570\u5E76\u4E0D\u662F\u4F55\u65F6\u4F55\u5730\u90FD\u6709\u6548\uFF0C\u4E3A\u4E86\u7406\u89E3\u5185\u8054\u51FD\u6570\u4F55\u65F6\u6709\u6548\uFF0C\u5E94\u8BE5\u8981\u77E5\u9053\u7F16\u8BD1\u5668\u78B0\u5230\u5185\u8054\u51FD\u6570\u4F1A\u600E\u4E48\u5904\u7406\uFF1F</p><p>\u5BF9\u4E8E\u4EFB\u4F55\u7C7B\u578B\u7684\u51FD\u6570\uFF0C\u7F16\u8BD1\u5668\u4F1A\u5C06\u51FD\u6570\u7C7B\u578B(\u5305\u62EC\u51FD\u6570\u540D\u5B57\uFF0C\u53C2\u6570\u7C7B\u578B\uFF0C\u8FD4\u56DE\u503C\u7C7B\u578B)\u653E\u5165\u5230\u7B26\u53F7\u8868\u4E2D\u3002\u540C\u6837\uFF0C\u5F53\u7F16\u8BD1\u5668\u770B\u5230\u5185\u8054\u51FD\u6570\uFF0C\u5E76\u4E14\u5BF9\u5185\u8054\u51FD\u6570\u4F53\u8FDB\u884C\u5206\u6790\u6CA1\u6709\u53D1\u73B0\u9519\u8BEF\u65F6\uFF0C\u4E5F\u4F1A\u5C06\u5185\u8054\u51FD\u6570\u653E\u5165\u7B26\u53F7\u8868\u3002</p><p>\u5F53\u8C03\u7528\u4E00\u4E2A\u5185\u8054\u51FD\u6570\u7684\u65F6\u5019\uFF0C\u7F16\u8BD1\u5668\u9996\u5148\u786E\u4FDD\u4F20\u5165\u53C2\u6570\u7C7B\u578B\u662F\u6B63\u786E\u5339\u914D\u7684\uFF0C\u6216\u8005\u5982\u679C\u7C7B\u578B\u4E0D\u6B63\u5B8C\u5168\u5339\u914D\uFF0C\u4F46\u662F\u53EF\u4EE5\u5C06\u5176\u8F6C\u6362\u4E3A\u6B63\u786E\u7C7B\u578B\uFF0C\u5E76\u4E14\u8FD4\u56DE\u503C\u5728\u76EE\u6807\u8868\u8FBE\u5F0F\u91CC\u5339\u914D\u6B63\u786E\u7C7B\u578B\uFF0C\u6216\u8005\u53EF\u4EE5\u8F6C\u6362\u4E3A\u76EE\u6807\u7C7B\u578B\uFF0C\u5185\u8054\u51FD\u6570\u5C31\u4F1A\u76F4\u63A5\u66FF\u6362\u51FD\u6570\u8C03\u7528\uFF0C\u8FD9\u5C31\u6D88\u9664\u4E86\u51FD\u6570\u8C03\u7528\u7684\u5F00\u9500\u3002\u5047\u5982\u5185\u8054\u51FD\u6570\u662F\u6210\u5458\u51FD\u6570\uFF0C\u5BF9\u8C61this\u6307\u9488\u4E5F\u4F1A\u88AB\u653E\u5165\u5408\u9002\u4F4D\u7F6E\u3002</p><p>\u7C7B\u578B\u68C0\u67E5\u548C\u7C7B\u578B\u8F6C\u6362\u3001\u5305\u62EC\u5728\u5408\u9002\u4F4D\u7F6E\u653E\u5165\u5BF9\u8C61this\u6307\u9488\u8FD9\u4E9B\u90FD\u662F\u9884\u5904\u7406\u5668\u4E0D\u80FD\u5B8C\u6210\u7684\u3002</p><p>\u4F46\u662Fc++\u5185\u8054\u7F16\u8BD1\u4F1A\u6709\u4E00\u4E9B\u9650\u5236\uFF0C\u4EE5\u4E0B\u60C5\u51B5\u7F16\u8BD1\u5668\u53EF\u80FD\u8003\u8651\u4E0D\u4F1A\u5C06\u51FD\u6570\u8FDB\u884C\u5185\u8054\u7F16\u8BD1\uFF1A</p><ul><li><p>\u4E0D\u80FD\u5B58\u5728\u4EFB\u4F55\u5F62\u5F0F\u7684\u5FAA\u73AF\u8BED\u53E5</p></li><li><p>\u4E0D\u80FD\u5B58\u5728\u8FC7\u591A\u7684\u6761\u4EF6\u5224\u65AD\u8BED\u53E5</p></li><li><p>\u51FD\u6570\u4F53\u4E0D\u80FD\u8FC7\u4E8E\u5E9E\u5927</p></li><li><p>\u4E0D\u80FD\u5BF9\u51FD\u6570\u8FDB\u884C\u53D6\u5740\u64CD\u4F5C</p></li></ul><p><strong>\u5185\u8054\u4EC5\u4EC5\u53EA\u662F\u7ED9\u7F16\u8BD1\u5668\u4E00\u4E2A\u5EFA\u8BAE\uFF0C\u7F16\u8BD1\u5668\u4E0D\u4E00\u5B9A\u4F1A\u63A5\u53D7\u8FD9\u79CD\u5EFA\u8BAE\uFF0C\u5982\u679C\u4F60\u6CA1\u6709\u5C06\u51FD\u6570\u58F0\u660E\u4E3A\u5185\u8054\u51FD\u6570\uFF0C\u90A3\u4E48\u7F16\u8BD1\u5668\u4E5F\u53EF\u80FD\u5C06\u6B64\u51FD\u6570\u505A\u5185\u8054\u7F16\u8BD1\u3002\u4E00\u4E2A\u597D\u7684\u7F16\u8BD1\u5668\u5C06\u4F1A\u5185\u8054\u5C0F\u7684\u3001\u7B80\u5355\u7684\u51FD\u6570\u3002</strong></p><h3 id="_3-13-\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_3-13-\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570" aria-hidden="true">#</a> 3.13 \u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570</h3><p>c++\u5728\u58F0\u660E\u51FD\u6570\u539F\u578B\u7684\u65F6\u53EF\u4E3A\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u53C2\u6570\u6307\u5B9A\u9ED8\u8BA4(\u7F3A\u7701)\u7684\u53C2\u6570\u503C\uFF0C\u5F53\u51FD\u6570\u8C03\u7528\u7684\u65F6\u5019\u5982\u679C\u6CA1\u6709\u6307\u5B9A\u8FD9\u4E2A\u503C\uFF0C\u7F16\u8BD1\u5668\u4F1A\u81EA\u52A8\u7528\u9ED8\u8BA4\u503C\u4EE3\u66FF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">TestFunc01</span><span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a + b  = &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6CE8\u610F\u70B9:</span>
<span class="token comment">//1. \u5F62\u53C2b\u8BBE\u7F6E\u9ED8\u8BA4\u53C2\u6570\u503C\uFF0C\u90A3\u4E48\u540E\u9762\u4F4D\u7F6E\u7684\u5F62\u53C2c\u4E5F\u9700\u8981\u8BBE\u7F6E\u9ED8\u8BA4\u53C2\u6570</span>
<span class="token keyword">void</span> <span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//2. \u5982\u679C\u51FD\u6570\u58F0\u660E\u548C\u51FD\u6570\u5B9A\u4E49\u5206\u5F00\uFF0C\u51FD\u6570\u58F0\u660E\u8BBE\u7F6E\u4E86\u9ED8\u8BA4\u53C2\u6570\uFF0C\u51FD\u6570\u5B9A\u4E49\u4E0D\u80FD\u518D\u8BBE\u7F6E\u9ED8\u8BA4\u53C2\u6570</span>
<span class="token keyword">void</span> <span class="token function">TestFunc03</span><span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">TestFunc03</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//1.\u5982\u679C\u6CA1\u6709\u4F20\u53C2\u6570\uFF0C\u90A3\u4E48\u4F7F\u7528\u9ED8\u8BA4\u53C2\u6570</span>
	<span class="token function">TestFunc01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//2. \u5982\u679C\u4F20\u4E00\u4E2A\u53C2\u6570\uFF0C\u90A3\u4E48\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F7F\u7528\u9ED8\u8BA4\u53C2\u6570</span>
	<span class="token function">TestFunc01</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//3. \u5982\u679C\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\uFF0C\u90A3\u4E48\u4E24\u4E2A\u53C2\u6570\u90FD\u4F7F\u7528\u6211\u4EEC\u4F20\u5165\u7684\u53C2\u6570</span>
	<span class="token function">TestFunc01</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><strong>\u6CE8\u610F\uFF1A</strong></p><ul><li><p>\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570\u4ECE\u5DE6\u5411\u53F3\uFF0C\u5982\u679C\u4E00\u4E2A\u53C2\u6570\u8BBE\u7F6E\u4E86\u9ED8\u8BA4\u53C2\u6570\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u53C2\u6570\u4E4B\u540E\u7684\u53C2\u6570\u90FD\u5FC5\u987B\u8BBE\u7F6E\u9ED8\u8BA4\u53C2\u6570\u3002</p></li><li><p>\u5982\u679C\u51FD\u6570\u58F0\u660E\u548C\u51FD\u6570\u5B9A\u4E49\u5206\u5F00\u5199\uFF0C\u51FD\u6570\u58F0\u660E\u548C\u51FD\u6570\u5B9A\u4E49\u4E0D\u80FD\u540C\u65F6\u8BBE\u7F6E\u9ED8\u8BA4\u53C2\u6570\u3002</p></li></ul><h3 id="_3-14-\u51FD\u6570\u7684\u5360\u4F4D\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_3-14-\u51FD\u6570\u7684\u5360\u4F4D\u53C2\u6570" aria-hidden="true">#</a> 3.14 \u51FD\u6570\u7684\u5360\u4F4D\u53C2\u6570</h3><p>c++\u5728\u58F0\u660E\u51FD\u6570\u65F6\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u5360\u4F4D\u53C2\u6570\u3002\u5360\u4F4D\u53C2\u6570\u53EA\u6709\u53C2\u6570\u7C7B\u578B\u58F0\u660E\uFF0C\u800C\u6CA1\u6709\u53C2\u6570\u540D\u58F0\u660E\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u5728\u51FD\u6570\u4F53\u5185\u90E8\u65E0\u6CD5\u4F7F\u7528\u5360\u4F4D\u53C2\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">TestFunc01</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u51FD\u6570\u5185\u90E8\u65E0\u6CD5\u4F7F\u7528\u5360\u4F4D\u53C2\u6570</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a + b = &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5360\u4F4D\u53C2\u6570\u4E5F\u53EF\u4EE5\u8BBE\u7F6E\u9ED8\u8BA4\u503C</span>
<span class="token keyword">void</span> <span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u51FD\u6570\u5185\u90E8\u4F9D\u65E7\u65E0\u6CD5\u4F7F\u7528\u5360\u4F4D\u53C2\u6570</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a + b = &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token comment">//\u9519\u8BEF\u8C03\u7528\uFF0C\u5360\u4F4D\u53C2\u6570\u4E5F\u662F\u53C2\u6570\uFF0C\u5FC5\u987B\u4F20\u53C2\u6570</span>
	<span class="token comment">//TestFunc01(10,20); </span>
	<span class="token comment">//\u6B63\u786E\u8C03\u7528</span>
	<span class="token function">TestFunc01</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6B63\u786E\u8C03\u7528</span>
	<span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6B63\u786E\u8C03\u7528</span>
	<span class="token function">TestFunc02</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u4EC0\u4E48\u65F6\u5019\u7528\uFF0C\u5728\u540E\u9762\u6211\u4EEC\u8981\u8BB2\u7684\u64CD\u4F5C\u7B26\u91CD\u8F7D\u7684\u540E\u7F6E++\u8981\u7528\u5230\u8FD9\u4E2A.</p><h3 id="_3-15\u51FD\u6570\u91CD\u8F7D-overload" tabindex="-1"><a class="header-anchor" href="#_3-15\u51FD\u6570\u91CD\u8F7D-overload" aria-hidden="true">#</a> 3.15\u51FD\u6570\u91CD\u8F7D\uFF08overload\uFF09</h3><h4 id="_3-15-1-\u51FD\u6570\u91CD\u8F7D\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#_3-15-1-\u51FD\u6570\u91CD\u8F7D\u6982\u8FF0" aria-hidden="true">#</a> 3.15.1 \u51FD\u6570\u91CD\u8F7D\u6982\u8FF0</h4><p><strong>\u80FD\u4F7F\u540D\u5B57\u65B9\u4FBF\u4F7F\u7528\uFF0C\u662F\u4EFB\u4F55\u7A0B\u5E8F\u8BBE\u8BA1\u8BED\u8A00\u7684\u4E00\u4E2A\u91CD\u8981\u7279\u5F81\uFF01</strong></p><p>\u6211\u4EEC\u73B0\u5B9E\u751F\u6D3B\u4E2D\u7ECF\u5E38\u4F1A\u78B0\u5230\u4E00\u4E9B\u5B57\u5728\u4E0D\u540C\u7684\u573A\u666F\u4E0B\u5177\u6709\u4E0D\u540C\u7684\u610F\u601D\uFF0C\u6BD4\u5982\u6C49\u8BED\u4E2D\u7684\u591A\u97F3\u5B57\u201C<strong>\u91CD</strong>\u201D\u3002</p><p>\u5F53\u6211\u4EEC\u8BF4: \u201C\u4ED6\u597D\u91CD\u554A\uFF0C\u6211\u90FD\u80CC\u4E0D\u52A8!\u201D\u6211\u4EEC\u6839\u636E\u4E0A\u4E0B\u6587\u610F\u601D\uFF0C\u77E5\u9053\u201C<strong>\u91CD</strong>\u201D\u5728\u6B64\u65F6\u6B64\u5730\u8868\u793A\u91CD\u91CF\u7684\u610F\u601D\u3002</p><p>\u5982\u679C\u6211\u4EEC\u8BF4\u201C\u4F60\u600E\u4E48\u5199\u4E86\u90A3\u4E48\u591A\u91CD\u590D\u7684\u4EE3\u7801? \u7EF4\u62A4\u6027\u592A\u5DEE\u4E86!\u201D\u8FD9\u4E2A\u5730\u65B9\u6211\u4EEC\u77E5\u9053\uFF0C\u201C<strong>\u91CD</strong>\u201D\u8868\u793A\u91CD\u590D\u7684\u610F\u601D\u3002</p><p>\u540C\u6837\u4E00\u4E2A\u5B57\u5728\u4E0D\u540C\u7684\u573A\u666F\u4E0B\u5177\u6709\u4E0D\u540C\u7684\u542B\u4E49\u3002\u90A3\u4E48\u5728c++\u4E2D\u4E5F\u6709\u4E00\u79CD\u7C7B\u4F3C\u7684\u73B0\u8C61\u51FA\u73B0\uFF0C\u540C\u4E00\u4E2A\u51FD\u6570\u540D\u5728\u4E0D\u540C\u573A\u666F\u4E0B\u53EF\u4EE5\u5177\u6709\u4E0D\u540C\u7684\u542B\u4E49\u3002</p><p>\u5728\u4F20\u7EDFc\u8BED\u8A00\u4E2D\uFF0C\u51FD\u6570\u540D\u5FC5\u987B\u662F\u552F\u4E00\u7684\uFF0C\u7A0B\u5E8F\u4E2D\u4E0D\u5141\u8BB8\u51FA\u73B0\u540C\u540D\u7684\u51FD\u6570\u3002\u5728c++\u4E2D\u662F\u5141\u8BB8\u51FA\u73B0\u540C\u540D\u7684\u51FD\u6570\uFF0C\u8FD9\u79CD\u73B0\u8C61\u79F0\u4E3A\u51FD\u6570\u91CD\u8F7D\u3002</p><p>\u51FD\u6570\u91CD\u8F7D\u7684\u76EE\u7684\u5C31\u662F\u4E3A\u4E86\u65B9\u4FBF\u7684\u4F7F\u7528\u51FD\u6570\u540D\u3002</p><h4 id="_3-15-2\u51FD\u6570\u91CD\u8F7D\u57FA\u672C\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-15-2\u51FD\u6570\u91CD\u8F7D\u57FA\u672C\u8BED\u6CD5" aria-hidden="true">#</a> 3.15.2\u51FD\u6570\u91CD\u8F7D\u57FA\u672C\u8BED\u6CD5</h4><p><strong>\u5B9E\u73B0\u51FD\u6570\u91CD\u8F7D\u7684\u6761\u4EF6\uFF1A</strong></p><ul><li><p>\u540C\u4E00\u4E2A\u4F5C\u7528\u57DF</p></li><li><p>\u53C2\u6570\u4E2A\u6570\u4E0D\u540C</p></li><li><p>\u53C2\u6570\u7C7B\u578B\u4E0D\u540C</p></li><li><p>\u53C2\u6570\u987A\u5E8F\u4E0D\u540C</p></li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//1. \u51FD\u6570\u91CD\u8F7D\u6761\u4EF6</span>
namespace A<span class="token punctuation">{</span>
	<span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u65E0\u53C2\u6570!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a: &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span>string b<span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b: &quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> string b<span class="token punctuation">)</span><span class="token punctuation">{</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a: &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span>string b<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a: &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//2.\u8FD4\u56DE\u503C\u4E0D\u4F5C\u4E3A\u51FD\u6570\u91CD\u8F7D\u4F9D\u636E</span>
namespace B<span class="token punctuation">{</span>
	<span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span>string b<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token comment">//int MyFunc(string b, int a){} //\u65E0\u6CD5\u91CD\u8F7D\u4EC5\u6309\u8FD4\u56DE\u503C\u533A\u5206\u7684\u51FD\u6570</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>\u6CE8\u610F:</strong> \u51FD\u6570\u91CD\u8F7D\u548C\u9ED8\u8BA4\u53C2\u6570\u4E00\u8D77\u4F7F\u7528\uFF0C\u9700\u8981\u989D\u5916\u6CE8\u610F\u4E8C\u4E49\u6027\u95EE\u9898\u7684\u4EA7\u751F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span>string b<span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;b: &quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u51FD\u6570\u91CD\u8F7D\u78B0\u4E0A\u9ED8\u8BA4\u53C2\u6570</span>
<span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span>string b<span class="token punctuation">,</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a: &quot;</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; b:&quot;</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">MyFunc</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8FD9\u65F6\uFF0C\u4E24\u4E2A\u51FD\u6570\u90FD\u80FD\u5339\u914D\u8C03\u7528\uFF0C\u4EA7\u751F\u4E8C\u4E49\u6027</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>\u601D\u8003\uFF1A\u4E3A\u4EC0\u4E48\u51FD\u6570\u8FD4\u56DE\u503C\u4E0D\u4F5C\u4E3A\u91CD\u8F7D\u6761\u4EF6\u5462\uFF1F</strong></p><p>\u5F53\u7F16\u8BD1\u5668\u80FD\u4ECE\u4E0A\u4E0B\u6587\u4E2D\u786E\u5B9A\u552F\u4E00\u7684\u51FD\u6570\u7684\u65F6\uFF0C\u5982int ret = func(),\u8FD9\u4E2A\u5F53\u7136\u662F\u6CA1\u6709\u95EE\u9898\u7684\u3002\u7136\u800C\uFF0C\u6211\u4EEC\u5728\u7F16\u5199\u7A0B\u5E8F\u8FC7\u7A0B\u4E2D\u53EF\u4EE5\u5FFD\u7565\u4ED6\u7684\u8FD4\u56DE\u503C\u3002\u90A3\u4E48\u8FD9\u4E2A\u65F6\u5019,\u4E00\u4E2A\u51FD\u6570\u4E3A</p><p>void func(int x);\u53E6\u4E00\u4E2A\u4E3Aint func(int x); \u5F53\u6211\u4EEC\u76F4\u63A5\u8C03\u7528func(10),\u8FD9\u4E2A\u65F6\u5019\u7F16\u8BD1\u5668\u5C31\u4E0D\u786E\u5B9A\u8C03\u7528\u90A3\u4E2A\u51FD\u6570\u3002\u6240\u4EE5\u5728c++\u4E2D\u7981\u6B62\u4F7F\u7528\u8FD4\u56DE\u503C\u4F5C\u4E3A\u91CD\u8F7D\u7684\u6761\u4EF6\u3002</p><h4 id="_3-15-3-\u51FD\u6570\u91CD\u8F7D\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-15-3-\u51FD\u6570\u91CD\u8F7D\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 3.15.3 \u51FD\u6570\u91CD\u8F7D\u5B9E\u73B0\u539F\u7406</h4><p>\u7F16\u8BD1\u5668\u4E3A\u4E86\u5B9E\u73B0\u51FD\u6570\u91CD\u8F7D\uFF0C\u4E5F\u662F\u9ED8\u8BA4\u4E3A\u6211\u4EEC\u505A\u4E86\u4E00\u4E9B\u5E55\u540E\u7684\u5DE5\u4F5C\uFF0C\u7F16\u8BD1\u5668\u7528\u4E0D\u540C\u7684\u53C2\u6570\u7C7B\u578B\u6765\u4FEE\u9970\u4E0D\u540C\u7684\u51FD\u6570\u540D\uFF0C\u6BD4\u5982void func(); \u7F16\u8BD1\u5668\u53EF\u80FD\u4F1A\u5C06\u51FD\u6570\u540D\u4FEE\u9970\u6210_func\uFF0C\u5F53\u7F16\u8BD1\u5668\u78B0\u5230void func(int x),\u7F16\u8BD1\u5668\u53EF\u80FD\u5C06\u51FD\u6570\u540D\u4FEE\u9970\u4E3A_func_int,\u5F53\u7F16\u8BD1\u5668\u78B0\u5230void func(int x,char c),\u7F16\u8BD1\u5668\u53EF\u80FD\u4F1A\u5C06\u51FD\u6570\u540D\u4FEE\u9970\u4E3A_func_int_char\u6211\u8FD9\u91CC\u4F7F\u7528\u201D\u53EF\u80FD\u201D\u8FD9\u4E2A\u5B57\u773C\u662F\u56E0\u4E3A\u7F16\u8BD1\u5668\u5982\u4F55\u4FEE\u9970\u91CD\u8F7D\u7684\u51FD\u6570\u540D\u79F0\u5E76\u6CA1\u6709\u4E00\u4E2A\u7EDF\u4E00\u7684\u6807\u51C6\uFF0C\u6240\u4EE5\u4E0D\u540C\u7684\u7F16\u8BD1\u5668\u53EF\u80FD\u4F1A\u4EA7\u751F\u4E0D\u540C\u7684\u5185\u90E8\u540D\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">char</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4EE5\u4E0A\u4E09\u4E2A\u51FD\u6570\u5728linux\u4E0B\u751F\u6210\u7684\u7F16\u8BD1\u4E4B\u540E\u7684\u51FD\u6570\u540D\u4E3A:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>_Z4funcv <span class="token comment">//v \u4EE3\u8868void,\u65E0\u53C2\u6570</span>
_Z4funci <span class="token comment">//i \u4EE3\u8868\u53C2\u6570\u4E3Aint\u7C7B\u578B</span>
_Z4funcic <span class="token comment">//i \u4EE3\u8868\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3Aint\u7C7B\u578B\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3Achar\u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-15-4-extern-c-\u6D45\u6790" tabindex="-1"><a class="header-anchor" href="#_3-15-4-extern-c-\u6D45\u6790" aria-hidden="true">#</a> 3.15.4 extern &quot;C&quot;\u6D45\u6790</h4><p>\u4EE5\u4E0B\u5728Linux\u4E0B\u6D4B\u8BD5:</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>c\u51FD\u6570<span class="token operator">:</span> <span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">,</span>\u88AB\u7F16\u8BD1\u6210\u51FD\u6570<span class="token operator">:</span> MyFunc
c<span class="token operator">++</span>\u51FD\u6570<span class="token operator">:</span> <span class="token keyword">void</span> <span class="token function">MyFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\u88AB\u7F16\u8BD1\u6210\u51FD\u6570<span class="token operator">:</span> _Z6Myfuncv
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u901A\u8FC7\u8FD9\u4E2A\u6D4B\u8BD5\uFF0C\u7531\u4E8Ec++\u4E2D\u9700\u8981\u652F\u6301\u51FD\u6570\u91CD\u8F7D\uFF0C\u6240\u4EE5c\u548Cc++\u4E2D\u5BF9\u540C\u4E00\u4E2A\u51FD\u6570\u7ECF\u8FC7\u7F16\u8BD1\u540E\u751F\u6210\u7684\u51FD\u6570\u540D\u662F\u4E0D\u76F8\u540C\u7684\uFF0C\u8FD9\u5C31\u5BFC\u81F4\u4E86\u4E00\u4E2A\u95EE\u9898\uFF0C\u5982\u679C\u5728c++\u4E2D\u8C03\u7528\u4E00\u4E2A\u4F7F\u7528c\u8BED\u8A00\u7F16\u5199\u6A21\u5757\u4E2D\u7684\u67D0\u4E2A\u51FD\u6570\uFF0C\u90A3\u4E48c++\u662F\u6839\u636Ec++\u7684\u540D\u79F0\u4FEE\u9970\u65B9\u5F0F\u6765\u67E5\u627E\u5E76\u94FE\u63A5\u8FD9\u4E2A\u51FD\u6570\uFF0C\u90A3\u4E48\u5C31\u4F1A\u53D1\u751F\u94FE\u63A5\u9519\u8BEF\uFF0C\u4EE5\u4E0A\u4F8B\uFF0Cc++\u4E2D\u8C03\u7528MyFunc\u51FD\u6570\uFF0C\u5728\u94FE\u63A5\u9636\u6BB5\u4F1A\u53BB\u627EZ6Myfuncv\uFF0C\u7ED3\u679C\u662F\u6CA1\u6709\u627E\u5230\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4E2AMyFunc\u51FD\u6570\u662Fc\u8BED\u8A00\u7F16\u5199\u7684\uFF0C\u751F\u6210\u7684\u7B26\u53F7\u662FMyFunc\u3002</p><p>\u90A3\u4E48\u5982\u679C\u6211\u60F3\u5728c++\u8C03\u7528c\u7684\u51FD\u6570\u600E\u4E48\u529E\uFF1F</p><p>extern &quot;C&quot;\u7684\u4E3B\u8981\u4F5C\u7528\u5C31\u662F\u4E3A\u4E86\u5B9E\u73B0c++\u4EE3\u7801\u80FD\u591F\u8C03\u7528\u5176\u4ED6c\u8BED\u8A00\u4EE3\u7801\u3002\u52A0\u4E0Aextern &quot;C&quot;\u540E\uFF0C\u8FD9\u90E8\u5206\u4EE3\u7801\u7F16\u8BD1\u5668\u6309c\u8BED\u8A00\u7684\u65B9\u5F0F\u8FDB\u884C<strong>\u7F16\u8BD1</strong>\u548C<strong>\u94FE\u63A5</strong>\uFF0C\u800C\u4E0D\u662F\u6309c++\u7684\u65B9\u5F0F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//MyModule.h</span>
    
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">MYMODULE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MYMODULE_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__cplusplus</span></span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">{</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

	<span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__cplusplus</span></span>
<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span>    </span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//MyModule.c</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;MyModule.h&quot;</span></span>

<span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//TestExternC.cpp</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
using namespace std<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">0</span></span></span>

	<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
	<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">{</span>
		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">0</span></span></span>
			<span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
			<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&quot;MyModule.h&quot;</span></span>
		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
	<span class="token punctuation">}</span>

	<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>

	<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">void</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">int</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,332);function e(o,c){return t}var u=s(p,[["render",e]]);export{u as default};
